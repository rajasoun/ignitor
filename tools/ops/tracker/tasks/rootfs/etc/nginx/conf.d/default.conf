server {
    listen [::]:80 default_server;
    listen 80 default_server;
    server_name _;

    sendfile off;

    # Increase proxy buffers for large requests
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Upload limit
    client_max_body_size 50m;
    client_body_buffer_size 128k;

    root /usr/src/wordpress;
    index index.php;

    # redirect server error pages to the static page /50x.html
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/lib/nginx/html;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # Based on https://codeable.io/wordpress-developers-intro-to-docker-part-two/
    location /wp-content {
        root /var/www;
        expires 7d;
        add_header Cache-Control "public";
    }

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to info.php
        try_files $uri $uri/ /index.php?q=$uri&$args;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        #fastcgi_intercept_errors on;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;

        fastcgi_index index.php;
        #fastcgi_pass 127.0.0.1:9000;
        fastcgi_pass unix:/var/run/php-fpm.sock;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # Forward the scheme from upstream
        #fastcgi_param HTTPS $forwarded_scheme;
    }

    # deny access to . files, for security
    location ~ /\. {
        log_not_found off;
        deny all;
    }
}
