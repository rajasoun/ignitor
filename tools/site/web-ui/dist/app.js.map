{"version":3,"file":"app.js","sources":["../../node_modules/@glimmer/di/dist/modules/es2017/src/container.ts","../../node_modules/@glimmer/di/dist/modules/es2017/src/registry.ts","../../node_modules/@glimmer/di/dist/modules/es2017/src/owner.ts","../../node_modules/@glimmer/util/dist/modules/es2017/lib/namespaces.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/platform-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/assert.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/logger.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/object-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/guid.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/collections.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/list-utils.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/weakmap.js","../../node_modules/@glimmer/util/dist/modules/es2017/lib/array-utils.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/opcodes.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/validators.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/const.js","../../node_modules/@glimmer/reference/dist/modules/es2017/lib/iterable.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/references.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/expressions/concat.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/expressions.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/normalize.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/vm.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/dom.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/arguments.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/component.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/component/interfaces.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/content.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/debugger.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/partial.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/lists.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/bounds.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/content/dynamic.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/content/text.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/content/node.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/content/html.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/element-builder.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/rehydrate-builder.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/serialize-builder.js","../../node_modules/@glimmer/wire-format/dist/modules/es2017/lib/opcodes.js","../../node_modules/@glimmer/wire-format/dist/modules/es2017/index.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/client-side.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/blocks.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiler.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/raw-block.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compiled/opcodes/builder.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/functions.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/syntax/compilable-template.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/scanner.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/environment/constants.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/sanitized-values.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/props.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/inner-html-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/svg-inner-html-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/compat/text-node-merging-fix.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/dom/helper.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/attributes/dynamic.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/environment.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/update.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/render-result.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/vm/append.js","../../node_modules/@glimmer/runtime/dist/modules/es2017/lib/template.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/utils.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/path.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/root.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/meta.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/references/descriptors.js","../../node_modules/@glimmer/object-reference/dist/modules/es2017/lib/object.js","../../node_modules/@glimmer/application/dist/modules/es2017/src/application-registry.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/dynamic-scope.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/iterable.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/helpers/action.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/environment.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/templates/main.ts","../../node_modules/@glimmer/application/dist/modules/es2017/src/application.ts","../../node_modules/@glimmer/resolver/node_modules/@glimmer/di/dist/modules/es2017/src/owner.ts","../../node_modules/@glimmer/resolver/node_modules/@glimmer/di/dist/modules/es2017/src/specifier.ts","../../node_modules/@glimmer/resolver/dist/modules/es2017/src/utils/debug.ts","../../node_modules/@glimmer/resolver/dist/modules/es2017/src/resolver.ts","src/ui/components/app-layout/template.ts","src/ui/components/app-layout/top-nav/template.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/tracked.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/component.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/references.ts","../../node_modules/@glimmer/component/dist/modules/es2017/src/component-manager.ts","src/ui/components/web-ui/template.ts","config/module-map.js","config/resolver-configuration.js","src/main.ts","../../node_modules/@glimmer/web-component/dist/modules/es2017/src/initialize-custom-elements.ts","src/index.ts"],"sourcesContent":["import { Factory, FactoryDefinition } from './factory';\nimport { RegistryReader, Injection } from './registry';\nimport { Resolver } from './resolver';\nimport { Dict } from './dict';\n\nexport default class Container {\n  private _registry: RegistryReader;\n  private _resolver: Resolver;\n  private _lookups: Dict<any>;\n  private _factoryDefinitionLookups: Dict<FactoryDefinition<any>>;\n\n  constructor(registry: RegistryReader, resolver: Resolver = null) {\n    this._registry = registry;\n    this._resolver = resolver;\n    this._lookups = {};\n    this._factoryDefinitionLookups = {};\n  }\n\n  factoryFor(specifier: string): Factory<any> {\n    let factoryDefinition: FactoryDefinition<any> = this._factoryDefinitionLookups[specifier];\n\n    if (!factoryDefinition) {\n      if (this._resolver) {\n        factoryDefinition = this._resolver.retrieve(specifier);\n      }\n\n      if (!factoryDefinition) {\n        factoryDefinition = this._registry.registration(specifier);\n      }\n\n      if (factoryDefinition) {\n        this._factoryDefinitionLookups[specifier] = factoryDefinition;\n      }\n    }\n\n    if (!factoryDefinition) {\n      return;\n    }\n\n    return this.buildFactory(specifier, factoryDefinition);\n  }\n\n  lookup(specifier: string): any {\n    let singleton = (this._registry.registeredOption(specifier, 'singleton') !== false);\n\n    if (singleton && this._lookups[specifier]) {\n      return this._lookups[specifier];\n    }\n\n    let factory = this.factoryFor(specifier);\n    if (!factory) { return; }\n\n    if (this._registry.registeredOption(specifier, 'instantiate') === false) {\n      return factory.class;\n    }\n\n    let object = factory.create();\n\n    if (singleton && object) {\n      this._lookups[specifier] = object;\n    }\n\n    return object;\n  }\n\n  defaultInjections(specifier: string): Object {\n    return {};\n  }\n\n  private buildInjections(specifier: string): Object {\n    let hash = this.defaultInjections(specifier);\n    let injections: Injection[] = this._registry.registeredInjections(specifier);\n    let injection: Injection;\n\n    for (let i = 0; i < injections.length; i++) {\n      injection = injections[i];\n      hash[injection.property] = this.lookup(injection.source);\n    }\n\n    return hash;\n  }\n\n  private buildFactory(specifier: string, factoryDefinition: FactoryDefinition<any>): Factory<any> {\n    let injections = this.buildInjections(specifier);\n\n    return {\n      class: factoryDefinition,\n      create(options) {\n        let mergedOptions = Object.assign({}, injections, options);\n\n        return factoryDefinition.create(mergedOptions);\n      }\n    }\n  }\n}\n","import { Dict } from './dict';\nimport { Factory, FactoryDefinition } from './factory';\n\nexport interface RegistrationOptions {\n  singleton?: boolean;\n  instantiate?: boolean;\n}\n\nexport interface Injection {\n  property: string,\n  source: string\n}\n\nexport interface RegistryWriter {\n  register(specifier: string, factory: any, options?: RegistrationOptions): void;\n  unregister(specifier: string): void;\n  registerOption(specifier: string, option: string, value: any): void;\n  unregisterOption(specifier: string, option: string): void;\n  registerInjection(specifier: string, property: string, source: string): void;\n}\n\nexport interface RegistryReader {\n  registration(specifier: string): any;\n  registeredOption(specifier: string, option: string): any;\n  registeredOptions(specifier: string): any;\n  registeredInjections(specifier: string): Injection[];\n}\n\nexport interface RegistryOptions {\n  fallback?: RegistryReader;\n}\n\nexport interface RegistryAccessor extends RegistryReader, RegistryWriter {}\n\nexport default class Registry implements RegistryAccessor {\n  private _registrations: Dict<FactoryDefinition<any>>;\n  private _registeredOptions: Dict<any>;\n  private _registeredInjections: Dict<Injection[]>;\n  private _fallback: RegistryReader;\n\n  constructor(options?: RegistryOptions) {\n    this._registrations = {};\n    this._registeredOptions = {};\n    this._registeredInjections = {};\n    if (options && options.fallback) {\n      this._fallback = options.fallback;\n    }\n  }\n\n  register(specifier: string, factoryDefinition: FactoryDefinition<any>, options?: RegistrationOptions): void {\n    this._registrations[specifier] = factoryDefinition;\n    if (options) {\n      this._registeredOptions[specifier] = options;\n    }\n  }\n\n  registration(specifier: string): FactoryDefinition<any> {\n    let registration = this._registrations[specifier];\n    if (registration === undefined && this._fallback) {\n      registration = this._fallback.registration(specifier);\n    }\n    return registration;\n  }\n\n  unregister(specifier: string): void {\n    delete this._registrations[specifier];\n    delete this._registeredOptions[specifier];\n    delete this._registeredInjections[specifier];\n  }\n\n  registerOption(specifier: string, option: string, value: any): void {\n    let options = this._registeredOptions[specifier];\n\n    if (!options) {\n      options = {};\n      this._registeredOptions[specifier] = options;\n    }\n\n    options[option] = value;\n  }\n\n  registeredOption(specifier: string, option: string): any {\n    let result: Boolean;\n    let options = this.registeredOptions(specifier);\n\n    if (options) {\n      result = options[option];\n    }\n\n    if (result === undefined && this._fallback !== undefined) {\n      result = this._fallback.registeredOption(specifier, option);\n    }\n\n    return result;\n  }\n\n  registeredOptions(specifier: string): any {\n    let options = this._registeredOptions[specifier];\n    if (options === undefined) {\n      let [type] = specifier.split(':');\n      options = this._registeredOptions[type];\n    }\n    return options;\n  }\n\n  unregisterOption(specifier: string, option: string): void {\n    let options = this._registeredOptions[specifier];\n\n    if (options) {\n      delete options[option];\n    }\n  }\n\n  registerInjection(specifier: string, property: string, source: string): void {\n    let injections = this._registeredInjections[specifier];\n    if (injections === undefined) {\n      this._registeredInjections[specifier] = injections = [];\n    }\n    injections.push({\n      property,\n      source\n    });\n  }\n\n  registeredInjections(specifier: string): Injection[] {\n    let [type] = specifier.split(':');\n    let injections: Injection[] = this._fallback ? this._fallback.registeredInjections(specifier) : [];\n    Array.prototype.push.apply(injections, this._registeredInjections[type]);\n    Array.prototype.push.apply(injections, this._registeredInjections[specifier]);\n    return injections;\n  }\n}\n","import { RegistrationOptions } from './registry';\nimport { Factory } from './factory';\n\n// TODO - use symbol\nexport const OWNER = '__owner__';\n\nexport function getOwner(object: Object): Owner {\n  return object[OWNER];\n}\n\nexport function setOwner(object: Object, owner: Owner): void {\n  object[OWNER] = owner;\n}\n\nexport interface Owner {\n  identify(specifier: string, referrer?: string): string;\n\n  factoryFor(specifier: string, referrer?: string): Factory<any>;\n  \n  lookup(specifier: string, referrer?: string): any;\n}\n","// There is a small whitelist of namespaced attributes specially\n// enumerated in\n// https://www.w3.org/TR/html/syntax.html#attributes-0\n//\n// > When a foreign element has one of the namespaced attributes given by\n// > the local name and namespace of the first and second cells of a row\n// > from the following table, it must be written using the name given by\n// > the third cell from the same row.\n//\n// In all other cases, colons are interpreted as a regular character\n// with no special meaning:\n//\n// > No other namespaced attribute can be expressed in the HTML syntax.\nconst XLINK = 'http://www.w3.org/1999/xlink';\nconst XML = 'http://www.w3.org/XML/1998/namespace';\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\nconst WHITELIST = {\n    'xlink:actuate': XLINK,\n    'xlink:arcrole': XLINK,\n    'xlink:href': XLINK,\n    'xlink:role': XLINK,\n    'xlink:show': XLINK,\n    'xlink:title': XLINK,\n    'xlink:type': XLINK,\n    'xml:base': XML,\n    'xml:lang': XML,\n    'xml:space': XML,\n    'xmlns': XMLNS,\n    'xmlns:xlink': XMLNS\n};\nexport function getAttrNamespace(attrName) {\n    return WHITELIST[attrName] || null;\n}","export function unwrap(val) {\n    if (val === null || val === undefined) throw new Error(`Expected value to be present`);\n    return val;\n}\nexport function expect(val, message) {\n    if (val === null || val === undefined) throw new Error(message);\n    return val;\n}\nexport function unreachable() {\n    return new Error('unreachable');\n}\nexport function typePos(lastOperand) {\n    return lastOperand - 4;\n}","// import Logger from './logger';\n// let alreadyWarned = false;\nexport function debugAssert(test, msg) {\n    // if (!alreadyWarned) {\n    //   alreadyWarned = true;\n    //   Logger.warn(\"Don't leave debug assertions on in public builds\");\n    // }\n    if (!test) {\n        throw new Error(msg || \"assertion failure\");\n    }\n}\nexport function prodAssert() {}\nexport default debugAssert;","export var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n})(LogLevel || (LogLevel = {}));\nclass NullConsole {\n    log(_message) {}\n    warn(_message) {}\n    error(_message) {}\n    trace() {}\n}\nlet ALWAYS;\nexport class Logger {\n    constructor({ console, level }) {\n        this.f = ALWAYS;\n        this.force = ALWAYS;\n        this.console = console;\n        this.level = level;\n    }\n    skipped(level) {\n        return level < this.level;\n    }\n    trace(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Trace)) return;\n        this.console.log(message);\n        if (stackTrace) this.console.trace();\n    }\n    debug(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Debug)) return;\n        this.console.log(message);\n        if (stackTrace) this.console.trace();\n    }\n    warn(message, { stackTrace = false } = {}) {\n        if (this.skipped(LogLevel.Warn)) return;\n        this.console.warn(message);\n        if (stackTrace) this.console.trace();\n    }\n    error(message) {\n        if (this.skipped(LogLevel.Error)) return;\n        this.console.error(message);\n    }\n}\nlet _console = typeof console === 'undefined' ? new NullConsole() : console;\nALWAYS = new Logger({ console: _console, level: LogLevel.Trace });\nconst LOG_LEVEL = LogLevel.Debug;\nexport default new Logger({ console: _console, level: LOG_LEVEL });","const { keys: objKeys } = Object;\nexport function assign(obj) {\n    for (let i = 1; i < arguments.length; i++) {\n        let assignment = arguments[i];\n        if (assignment === null || typeof assignment !== 'object') continue;\n        let keys = objKeys(assignment);\n        for (let j = 0; j < keys.length; j++) {\n            let key = keys[j];\n            obj[key] = assignment[key];\n        }\n    }\n    return obj;\n}\nexport function fillNulls(count) {\n    let arr = new Array(count);\n    for (let i = 0; i < count; i++) {\n        arr[i] = null;\n    }\n    return arr;\n}","let GUID = 0;\nexport function initializeGuid(object) {\n    return object._guid = ++GUID;\n}\nexport function ensureGuid(object) {\n    return object._guid || initializeGuid(object);\n}","import { ensureGuid } from './guid';\nlet proto = Object.create(null, {\n    // without this, we will always still end up with (new\n    // EmptyObject()).constructor === Object\n    constructor: {\n        value: undefined,\n        enumerable: false,\n        writable: true\n    }\n});\nfunction EmptyObject() {}\nEmptyObject.prototype = proto;\nexport function dict() {\n    // let d = Object.create(null);\n    // d.x = 1;\n    // delete d.x;\n    // return d;\n    return new EmptyObject();\n}\nexport class DictSet {\n    constructor() {\n        this.dict = dict();\n    }\n    add(obj) {\n        if (typeof obj === 'string') this.dict[obj] = obj;else this.dict[ensureGuid(obj)] = obj;\n        return this;\n    }\n    delete(obj) {\n        if (typeof obj === 'string') delete this.dict[obj];else if (obj._guid) delete this.dict[obj._guid];\n    }\n    forEach(callback) {\n        let { dict } = this;\n        let dictKeys = Object.keys(dict);\n        for (let i = 0; dictKeys.length; i++) {\n            callback(dict[dictKeys[i]]);\n        }\n    }\n    toArray() {\n        return Object.keys(this.dict);\n    }\n}\nexport class Stack {\n    constructor() {\n        this.stack = [];\n        this.current = null;\n    }\n    toArray() {\n        return this.stack;\n    }\n    push(item) {\n        this.current = item;\n        this.stack.push(item);\n    }\n    pop() {\n        let item = this.stack.pop();\n        let len = this.stack.length;\n        this.current = len === 0 ? null : this.stack[len - 1];\n        return item === undefined ? null : item;\n    }\n    isEmpty() {\n        return this.stack.length === 0;\n    }\n}","export class ListNode {\n    constructor(value) {\n        this.next = null;\n        this.prev = null;\n        this.value = value;\n    }\n}\nexport class LinkedList {\n    constructor() {\n        this.clear();\n    }\n    static fromSlice(slice) {\n        let list = new LinkedList();\n        slice.forEachNode(n => list.append(n.clone()));\n        return list;\n    }\n    head() {\n        return this._head;\n    }\n    tail() {\n        return this._tail;\n    }\n    clear() {\n        this._head = this._tail = null;\n    }\n    isEmpty() {\n        return this._head === null;\n    }\n    toArray() {\n        let out = [];\n        this.forEachNode(n => out.push(n));\n        return out;\n    }\n    splice(start, end, reference) {\n        let before;\n        if (reference === null) {\n            before = this._tail;\n            this._tail = end;\n        } else {\n            before = reference.prev;\n            end.next = reference;\n            reference.prev = end;\n        }\n        if (before) {\n            before.next = start;\n            start.prev = before;\n        }\n    }\n    nextNode(node) {\n        return node.next;\n    }\n    prevNode(node) {\n        return node.prev;\n    }\n    forEachNode(callback) {\n        let node = this._head;\n        while (node !== null) {\n            callback(node);\n            node = node.next;\n        }\n    }\n    contains(needle) {\n        let node = this._head;\n        while (node !== null) {\n            if (node === needle) return true;\n            node = node.next;\n        }\n        return false;\n    }\n    insertBefore(node, reference = null) {\n        if (reference === null) return this.append(node);\n        if (reference.prev) reference.prev.next = node;else this._head = node;\n        node.prev = reference.prev;\n        node.next = reference;\n        reference.prev = node;\n        return node;\n    }\n    append(node) {\n        let tail = this._tail;\n        if (tail) {\n            tail.next = node;\n            node.prev = tail;\n            node.next = null;\n        } else {\n            this._head = node;\n        }\n        return this._tail = node;\n    }\n    pop() {\n        if (this._tail) return this.remove(this._tail);\n        return null;\n    }\n    prepend(node) {\n        if (this._head) return this.insertBefore(node, this._head);\n        return this._head = this._tail = node;\n    }\n    remove(node) {\n        if (node.prev) node.prev.next = node.next;else this._head = node.next;\n        if (node.next) node.next.prev = node.prev;else this._tail = node.prev;\n        return node;\n    }\n}\nexport class ListSlice {\n    constructor(head, tail) {\n        this._head = head;\n        this._tail = tail;\n    }\n    static toList(slice) {\n        let list = new LinkedList();\n        slice.forEachNode(n => list.append(n.clone()));\n        return list;\n    }\n    forEachNode(callback) {\n        let node = this._head;\n        while (node !== null) {\n            callback(node);\n            node = this.nextNode(node);\n        }\n    }\n    contains(needle) {\n        let node = this._head;\n        while (node !== null) {\n            if (node === needle) return true;\n            node = node.next;\n        }\n        return false;\n    }\n    head() {\n        return this._head;\n    }\n    tail() {\n        return this._tail;\n    }\n    toArray() {\n        let out = [];\n        this.forEachNode(n => out.push(n));\n        return out;\n    }\n    nextNode(node) {\n        if (node === this._tail) return null;\n        return node.next;\n    }\n    prevNode(node) {\n        if (node === this._head) return null;\n        return node.prev;\n    }\n    isEmpty() {\n        return false;\n    }\n}\nexport const EMPTY_SLICE = new ListSlice(null, null);","export const HAS_NATIVE_WEAKMAP = function () {\n    // detect if `WeakMap` is even present\n    let hasWeakMap = typeof WeakMap === 'function';\n    if (!hasWeakMap) {\n        return false;\n    }\n    let instance = new WeakMap();\n    // use `Object`'s `.toString` directly to prevent us from detecting\n    // polyfills as native weakmaps\n    return Object.prototype.toString.call(instance) === '[object WeakMap]';\n}();","import { HAS_NATIVE_WEAKMAP } from './weakmap';\nconst HAS_TYPED_ARRAYS = typeof Uint32Array !== 'undefined';\nlet A;\nif (HAS_TYPED_ARRAYS) {\n    A = Uint32Array;\n} else {\n    A = Array;\n}\nexport default A;\nexport const EMPTY_ARRAY = HAS_NATIVE_WEAKMAP ? Object.freeze([]) : [];","import { initializeGuid, fillNulls, unreachable, typePos } from '@glimmer/util';\n\n/**\n * Registers\n *\n * For the most part, these follows MIPS naming conventions, however the\n * register numbers are different.\n */\nexport var Register;\n(function (Register) {\n    // $0 or $pc (program counter): pointer into `program` for the next insturction; -1 means exit\n    Register[Register[\"pc\"] = 0] = \"pc\";\n    // $1 or $ra (return address): pointer into `program` for the return\n    Register[Register[\"ra\"] = 1] = \"ra\";\n    // $2 or $fp (frame pointer): pointer into the `evalStack` for the base of the stack\n    Register[Register[\"fp\"] = 2] = \"fp\";\n    // $3 or $sp (stack pointer): pointer into the `evalStack` for the top of the stack\n    Register[Register[\"sp\"] = 3] = \"sp\";\n    // $4-$5 or $s0-$s1 (saved): callee saved general-purpose registers\n    Register[Register[\"s0\"] = 4] = \"s0\";\n    Register[Register[\"s1\"] = 5] = \"s1\";\n    // $6-$7 or $t0-$t1 (temporaries): caller saved general-purpose registers\n    Register[Register[\"t0\"] = 6] = \"t0\";\n    Register[Register[\"t1\"] = 7] = \"t1\";\n})(Register || (Register = {}));\nexport function debugSlice(env, start, end) {\n    if (!false && false) {\n        /* tslint:disable:no-console */\n        let { program } = env;\n        let { constants } = program;\n        // console is not available in IE9\n        if (typeof console === 'undefined') {\n            return;\n        }\n        // IE10 does not have `console.group`\n        if (typeof console.group !== 'function') {\n            return;\n        }\n        console.group(`%c${start}:${end}`, 'color: #999');\n        for (let i = start; i < end; i = i + 4) {\n            let { type, op1, op2, op3 } = program.opcode(i);\n            let [name, params] = debug(constants, type, op1, op2, op3);\n            console.log(`${i}. ${logOpcode(name, params)}`);\n        }\n        console.groupEnd();\n        /* tslint:enable:no-console */\n    }\n}\nfunction logOpcode(type, params) {\n    if (!false && false) {\n        let out = type;\n        if (params) {\n            let args = Object.keys(params).map(p => ` ${p}=${json(params[p])}`).join('');\n            out += args;\n        }\n        return `(${out})`;\n    }\n}\nfunction json(param) {\n    if (typeof param === 'function') {\n        return '<function>';\n    }\n    let string;\n    try {\n        string = JSON.stringify(param);\n    } catch (e) {\n        return '<cannot generate JSON>';\n    }\n    if (string === undefined) {\n        return 'undefined';\n    }\n    let debug = JSON.parse(string);\n    if (typeof debug === 'object' && debug !== null && debug.GlimmerDebug !== undefined) {\n        return debug.GlimmerDebug;\n    }\n    return string;\n}\nfunction debug(c, op, op1, op2, op3) {\n    if (!false && false) {\n        switch (op) {\n            case 0 /* Bug */:\n                throw unreachable();\n            case 1 /* Helper */:\n                return ['Helper', { helper: c.getFunction(op1) }];\n            case 2 /* Function */:\n                return ['Function', { function: c.getFunction(op1) }];\n            case 4 /* SetVariable */:\n                return ['SetVariable', { symbol: op1 }];\n            case 5 /* GetVariable */:\n                return ['GetVariable', { symbol: op1 }];\n            case 6 /* GetProperty */:\n                return ['GetProperty', { key: c.getString(op1) }];\n            case 7 /* PushBlock */:\n                return ['PushBlock', { block: c.getBlock(op1) }];\n            case 8 /* GetBlock */:\n                return ['GetBlock', { symbol: op1 }];\n            case 9 /* HasBlock */:\n                return ['HasBlock', { block: op1 }];\n            case 10 /* HasBlockParams */:\n                return ['HasBlockParams', { block: op1 }];\n            case 11 /* Concat */:\n                return ['Concat', { size: op1 }];\n            case 12 /* Immediate */:\n                return ['Immediate', { value: op1 }];\n            case 13 /* Constant */:\n                return ['Constant', { value: c.getOther(op1) }];\n            case 14 /* PrimitiveReference */:\n                return ['PrimitiveReference', { primitive: op1 }];\n            case 15 /* Dup */:\n                return ['Dup', { register: Register[op1], offset: op2 }];\n            case 16 /* Pop */:\n                return ['Pop', { count: op1 }];\n            case 17 /* Load */:\n                return ['Load', { register: Register[op1] }];\n            case 18 /* Fetch */:\n                return ['Fetch', { register: Register[op1] }];\n            /// PRELUDE & EXIT\n            case 19 /* RootScope */:\n                return ['RootScope', { symbols: op1, bindCallerScope: !!op2 }];\n            case 20 /* ChildScope */:\n                return ['ChildScope', {}];\n            case 21 /* PopScope */:\n                return ['PopScope', {}];\n            case 22 /* Return */:\n                return ['Return', {}];\n            case 23 /* ReturnTo */:\n                return ['ReturnTo', { offset: op1 }];\n            /// HTML\n            case 24 /* Text */:\n                return ['Text', { text: c.getString(op1) }];\n            case 25 /* Comment */:\n                return ['Comment', { comment: c.getString(op1) }];\n            case 26 /* DynamicContent */:\n                return ['DynamicContent', { value: c.getOther(op1) }];\n            case 27 /* OpenElement */:\n                return ['OpenElement', { tag: c.getString(op1) }];\n            case 28 /* OpenElementWithOperations */:\n                return ['OpenElementWithOperations', { tag: c.getString(op1) }];\n            case 29 /* OpenDynamicElement */:\n                return ['OpenDynamicElement', {}];\n            case 30 /* StaticAttr */:\n                return ['StaticAttr', { name: c.getString(op1), value: c.getString(op2), namespace: op3 ? c.getString(op3) : null }];\n            case 31 /* DynamicAttr */:\n                return ['DynamicAttr', { name: c.getString(op1), trusting: !!op2, namespace: op3 ? c.getString(op3) : null }];\n            case 32 /* ComponentAttr */:\n                return ['ComponentAttr', { name: c.getString(op1), trusting: !!op2, namespace: op3 ? c.getString(op3) : null }];\n            case 33 /* FlushElement */:\n                return ['FlushElement', {}];\n            case 34 /* CloseElement */:\n                return ['CloseElement', {}];\n            /// MODIFIER\n            case 35 /* Modifier */:\n                return ['Modifier', {}];\n            /// WORMHOLE\n            case 36 /* PushRemoteElement */:\n                return ['PushRemoteElement', {}];\n            case 37 /* PopRemoteElement */:\n                return ['PopRemoteElement', {}];\n            /// DYNAMIC SCOPE\n            case 38 /* BindDynamicScope */:\n                return ['BindDynamicScope', {}];\n            case 39 /* PushDynamicScope */:\n                return ['PushDynamicScope', {}];\n            case 40 /* PopDynamicScope */:\n                return ['PopDynamicScope', {}];\n            /// VM\n            case 41 /* CompileDynamicBlock */:\n                return ['CompileDynamicBlock', {}];\n            case 42 /* InvokeStatic */:\n                return ['InvokeStatic', { block: c.getBlock(op1) }];\n            case 43 /* InvokeDynamic */:\n                return ['InvokeDynamic', { invoker: c.getOther(op1) }];\n            case 44 /* Jump */:\n                return ['Jump', { to: op1 }];\n            case 45 /* JumpIf */:\n                return ['JumpIf', { to: op1 }];\n            case 46 /* JumpUnless */:\n                return ['JumpUnless', { to: op1 }];\n            case 47 /* PushFrame */:\n                return ['PushFrame', {}];\n            case 48 /* PopFrame */:\n                return ['PopFrame', {}];\n            case 49 /* Enter */:\n                return ['Enter', { args: op1 }];\n            case 50 /* Exit */:\n                return ['Exit', {}];\n            case 51 /* Test */:\n                return ['ToBoolean', {}];\n            /// LISTS\n            case 52 /* EnterList */:\n                return ['EnterList', { start: op1 }];\n            case 53 /* ExitList */:\n                return ['ExitList', {}];\n            case 54 /* PutIterator */:\n                return ['PutIterator', {}];\n            case 55 /* Iterate */:\n                return ['Iterate', { end: op1 }];\n            /// COMPONENTS\n            case 56 /* PushComponentManager */:\n                return ['PushComponentManager', { definition: c.getOther(op1) }];\n            case 57 /* PushDynamicComponentManager */:\n                return ['PushDynamicComponentManager', {}];\n            case 58 /* PushArgs */:\n                return ['PushArgs', { synthetic: !!op2 }];\n            case 59 /* PrepareArgs */:\n                return ['PrepareArgs', { state: Register[op1] }];\n            case 60 /* CreateComponent */:\n                return ['CreateComponent', { flags: op1, state: Register[op2] }];\n            case 61 /* RegisterComponentDestructor */:\n                return ['RegisterComponentDestructor', {}];\n            case 62 /* PutComponentOperations */:\n                return ['PutComponentOperations', {}];\n            case 63 /* GetComponentSelf */:\n                return ['GetComponentSelf', { state: Register[op1] }];\n            case 64 /* GetComponentLayout */:\n                return ['GetComponentLayout', { state: Register[op1] }];\n            case 65 /* BeginComponentTransaction */:\n                return ['BeginComponentTransaction', {}];\n            case 66 /* CommitComponentTransaction */:\n                return ['CommitComponentTransaction', {}];\n            case 67 /* DidCreateElement */:\n                return ['DidCreateElement', { state: Register[op1] }];\n            case 68 /* DidRenderLayout */:\n                return ['DidRenderLayout', {}];\n            /// PARTIALS\n            case 69 /* GetPartialTemplate */:\n                return ['CompilePartial', {}];\n            case 70 /* ResolveMaybeLocal */:\n                return ['ResolveMaybeLocal', { name: c.getString(op1) }];\n            /// DEBUGGER\n            case 71 /* Debugger */:\n                return ['Debugger', { symbols: c.getOther(op1), evalInfo: c.getArray(op2) }];\n            /// STATEMENTS\n            case 72 /* Size */:\n                throw unreachable();\n        }\n        throw unreachable();\n    }\n    return ['', {}];\n}\nexport class AppendOpcodes {\n    constructor() {\n        this.evaluateOpcode = fillNulls(72 /* Size */).slice();\n    }\n    add(name, evaluate) {\n        this.evaluateOpcode[name] = evaluate;\n    }\n    evaluate(vm, opcode, type) {\n        let func = this.evaluateOpcode[type];\n        if (!false && false) {\n            /* tslint:disable */\n            let [name, params] = debug(vm.constants, opcode.type, opcode.op1, opcode.op2, opcode.op3);\n            console.log(`${typePos(vm['pc'])}. ${logOpcode(name, params)}`);\n            // console.log(...debug(vm.constants, type, opcode.op1, opcode.op2, opcode.op3));\n            /* tslint:enable */\n        }\n        func(vm, opcode);\n        if (!false && false) {\n            /* tslint:disable */\n            console.log('%c -> pc: %d, ra: %d, fp: %d, sp: %d, s0: %O, s1: %O, t0: %O, t1: %O', 'color: orange', vm['pc'], vm['ra'], vm['fp'], vm['sp'], vm['s0'], vm['s1'], vm['t0'], vm['t1']);\n            console.log('%c -> eval stack', 'color: red', vm.stack.toArray());\n            console.log('%c -> scope', 'color: green', vm.scope()['slots'].map(s => s && s['value'] ? s['value']() : s));\n            console.log('%c -> elements', 'color: blue', vm.elements()['cursorStack']['stack'].map(c => c.element));\n            /* tslint:enable */\n        }\n    }\n}\nexport const APPEND_OPCODES = new AppendOpcodes();\nexport class AbstractOpcode {\n    constructor() {\n        initializeGuid(this);\n    }\n    toJSON() {\n        return { guid: this._guid, type: this.type };\n    }\n}\nexport class UpdatingOpcode extends AbstractOpcode {\n    constructor() {\n        super(...arguments);\n        this.next = null;\n        this.prev = null;\n    }\n}\nexport function inspect(opcodes) {\n    let buffer = [];\n    opcodes.forEach((opcode, i) => {\n        _inspect(opcode.toJSON(), buffer, 0, i);\n    });\n    return buffer.join('');\n}\nfunction _inspect(opcode, buffer, level, index) {\n    let indentation = [];\n    for (let i = 0; i < level; i++) {\n        indentation.push('  ');\n    }\n    buffer.push(...indentation);\n    buffer.push(`${index}. ${opcode.type}`);\n    if (opcode.args || opcode.details) {\n        buffer.push('(');\n        if (opcode.args) {\n            buffer.push(opcode.args.join(', '));\n        }\n        if (opcode.details) {\n            let keys = Object.keys(opcode.details);\n            if (keys.length) {\n                if (opcode.args && opcode.args.length) {\n                    buffer.push(', ');\n                }\n                buffer.push(keys.map(key => `${key}=${opcode.details && opcode.details[key]}`).join(', '));\n            }\n        }\n        buffer.push(')');\n    }\n    buffer.push('\\n');\n    if (opcode.children && opcode.children.length) {\n        for (let i = 0; i < opcode.children.length; i++) {\n            _inspect(opcode.children[i], buffer, level + 1, i);\n        }\n    }\n}","export const CONSTANT = 0;\nexport const INITIAL = 1;\nexport const VOLATILE = NaN;\nexport class RevisionTag {\n    validate(snapshot) {\n        return this.value() === snapshot;\n    }\n}\nRevisionTag.id = 0;\nconst VALUE = [];\nconst VALIDATE = [];\nexport class TagWrapper {\n    constructor(type, inner) {\n        this.type = type;\n        this.inner = inner;\n    }\n    value() {\n        let func = VALUE[this.type];\n        return func(this.inner);\n    }\n    validate(snapshot) {\n        let func = VALIDATE[this.type];\n        return func(this.inner, snapshot);\n    }\n}\nfunction register(Type) {\n    let type = VALUE.length;\n    VALUE.push(tag => tag.value());\n    VALIDATE.push((tag, snapshot) => tag.validate(snapshot));\n    Type.id = type;\n}\n///\n// CONSTANT: 0\nVALUE.push(() => CONSTANT);\nVALIDATE.push((_tag, snapshot) => snapshot === CONSTANT);\nexport const CONSTANT_TAG = new TagWrapper(0, null);\n// VOLATILE: 1\nVALUE.push(() => VOLATILE);\nVALIDATE.push((_tag, snapshot) => snapshot === VOLATILE);\nexport const VOLATILE_TAG = new TagWrapper(1, null);\n// CURRENT: 2\nVALUE.push(() => $REVISION);\nVALIDATE.push((_tag, snapshot) => snapshot === $REVISION);\nexport const CURRENT_TAG = new TagWrapper(2, null);\nexport function isVolatile({ tag }) {\n    return tag === VOLATILE_TAG;\n}\nexport function isVolatileTag(tag) {\n    return tag === VOLATILE_TAG;\n}\nexport function isConst({ tag }) {\n    return tag === CONSTANT_TAG;\n}\nexport function isConstTag(tag) {\n    return tag === CONSTANT_TAG;\n}\n///\nlet $REVISION = INITIAL;\nexport class DirtyableTag extends RevisionTag {\n    static create(revision = $REVISION) {\n        return new TagWrapper(this.id, new DirtyableTag(revision));\n    }\n    constructor(revision = $REVISION) {\n        super();\n        this.revision = revision;\n    }\n    value() {\n        return this.revision;\n    }\n    dirty() {\n        this.revision = ++$REVISION;\n    }\n}\nregister(DirtyableTag);\nexport function combineTagged(tagged) {\n    let optimized = [];\n    for (let i = 0, l = tagged.length; i < l; i++) {\n        let tag = tagged[i].tag;\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag === CONSTANT_TAG) continue;\n        optimized.push(tag);\n    }\n    return _combine(optimized);\n}\nexport function combineSlice(slice) {\n    let optimized = [];\n    let node = slice.head();\n    while (node !== null) {\n        let tag = node.tag;\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag !== CONSTANT_TAG) optimized.push(tag);\n        node = slice.nextNode(node);\n    }\n    return _combine(optimized);\n}\nexport function combine(tags) {\n    let optimized = [];\n    for (let i = 0, l = tags.length; i < l; i++) {\n        let tag = tags[i];\n        if (tag === VOLATILE_TAG) return VOLATILE_TAG;\n        if (tag === CONSTANT_TAG) continue;\n        optimized.push(tag);\n    }\n    return _combine(optimized);\n}\nfunction _combine(tags) {\n    switch (tags.length) {\n        case 0:\n            return CONSTANT_TAG;\n        case 1:\n            return tags[0];\n        case 2:\n            return TagsPair.create(tags[0], tags[1]);\n        default:\n            return TagsCombinator.create(tags);\n    }\n    ;\n}\nexport class CachedTag extends RevisionTag {\n    constructor() {\n        super(...arguments);\n        this.lastChecked = null;\n        this.lastValue = null;\n    }\n    value() {\n        let { lastChecked, lastValue } = this;\n        if (lastChecked !== $REVISION) {\n            this.lastChecked = $REVISION;\n            this.lastValue = lastValue = this.compute();\n        }\n        return this.lastValue;\n    }\n    invalidate() {\n        this.lastChecked = null;\n    }\n}\nclass TagsPair extends CachedTag {\n    static create(first, second) {\n        return new TagWrapper(this.id, new TagsPair(first, second));\n    }\n    constructor(first, second) {\n        super();\n        this.first = first;\n        this.second = second;\n    }\n    compute() {\n        return Math.max(this.first.value(), this.second.value());\n    }\n}\nregister(TagsPair);\nclass TagsCombinator extends CachedTag {\n    static create(tags) {\n        return new TagWrapper(this.id, new TagsCombinator(tags));\n    }\n    constructor(tags) {\n        super();\n        this.tags = tags;\n    }\n    compute() {\n        let { tags } = this;\n        let max = -1;\n        for (let i = 0; i < tags.length; i++) {\n            let value = tags[i].value();\n            max = Math.max(value, max);\n        }\n        return max;\n    }\n}\nregister(TagsCombinator);\nexport class UpdatableTag extends CachedTag {\n    static create(tag) {\n        return new TagWrapper(this.id, new UpdatableTag(tag));\n    }\n    constructor(tag) {\n        super();\n        this.tag = tag;\n        this.lastUpdated = INITIAL;\n    }\n    compute() {\n        return Math.max(this.lastUpdated, this.tag.value());\n    }\n    update(tag) {\n        if (tag !== this.tag) {\n            this.tag = tag;\n            this.lastUpdated = $REVISION;\n            this.invalidate();\n        }\n    }\n}\nregister(UpdatableTag);\nexport class CachedReference {\n    constructor() {\n        this.lastRevision = null;\n        this.lastValue = null;\n    }\n    value() {\n        let { tag, lastRevision, lastValue } = this;\n        if (!lastRevision || !tag.validate(lastRevision)) {\n            lastValue = this.lastValue = this.compute();\n            this.lastRevision = tag.value();\n        }\n        return lastValue;\n    }\n    invalidate() {\n        this.lastRevision = null;\n    }\n}\nclass MapperReference extends CachedReference {\n    constructor(reference, mapper) {\n        super();\n        this.tag = reference.tag;\n        this.reference = reference;\n        this.mapper = mapper;\n    }\n    compute() {\n        let { reference, mapper } = this;\n        return mapper(reference.value());\n    }\n}\nexport function map(reference, mapper) {\n    return new MapperReference(reference, mapper);\n}\n//////////\nexport class ReferenceCache {\n    constructor(reference) {\n        this.lastValue = null;\n        this.lastRevision = null;\n        this.initialized = false;\n        this.tag = reference.tag;\n        this.reference = reference;\n    }\n    peek() {\n        if (!this.initialized) {\n            return this.initialize();\n        }\n        return this.lastValue;\n    }\n    revalidate() {\n        if (!this.initialized) {\n            return this.initialize();\n        }\n        let { reference, lastRevision } = this;\n        let tag = reference.tag;\n        if (tag.validate(lastRevision)) return NOT_MODIFIED;\n        this.lastRevision = tag.value();\n        let { lastValue } = this;\n        let value = reference.value();\n        if (value === lastValue) return NOT_MODIFIED;\n        this.lastValue = value;\n        return value;\n    }\n    initialize() {\n        let { reference } = this;\n        let value = this.lastValue = reference.value();\n        this.lastRevision = reference.tag.value();\n        this.initialized = true;\n        return value;\n    }\n}\nconst NOT_MODIFIED = \"adb3b78e-3d22-4e4b-877a-6317c2c5c145\";\nexport function isModified(value) {\n    return value !== NOT_MODIFIED;\n}","import { CONSTANT_TAG } from './validators';\nexport class ConstReference {\n    constructor(inner) {\n        this.inner = inner;\n        this.tag = CONSTANT_TAG;\n    }\n    value() {\n        return this.inner;\n    }\n}","import { LinkedList, ListNode, dict, expect } from '@glimmer/util';\nexport class ListItem extends ListNode {\n    constructor(iterable, result) {\n        super(iterable.valueReferenceFor(result));\n        this.retained = false;\n        this.seen = false;\n        this.key = result.key;\n        this.iterable = iterable;\n        this.memo = iterable.memoReferenceFor(result);\n    }\n    update(item) {\n        this.retained = true;\n        this.iterable.updateValueReference(this.value, item);\n        this.iterable.updateMemoReference(this.memo, item);\n    }\n    shouldRemove() {\n        return !this.retained;\n    }\n    reset() {\n        this.retained = false;\n        this.seen = false;\n    }\n}\nexport class IterationArtifacts {\n    constructor(iterable) {\n        this.map = dict();\n        this.list = new LinkedList();\n        this.tag = iterable.tag;\n        this.iterable = iterable;\n    }\n    isEmpty() {\n        let iterator = this.iterator = this.iterable.iterate();\n        return iterator.isEmpty();\n    }\n    iterate() {\n        let iterator = this.iterator || this.iterable.iterate();\n        this.iterator = null;\n        return iterator;\n    }\n    has(key) {\n        return !!this.map[key];\n    }\n    get(key) {\n        return this.map[key];\n    }\n    wasSeen(key) {\n        let node = this.map[key];\n        return node && node.seen;\n    }\n    append(item) {\n        let { map, list, iterable } = this;\n        let node = map[item.key] = new ListItem(iterable, item);\n        list.append(node);\n        return node;\n    }\n    insertBefore(item, reference) {\n        let { map, list, iterable } = this;\n        let node = map[item.key] = new ListItem(iterable, item);\n        node.retained = true;\n        list.insertBefore(node, reference);\n        return node;\n    }\n    move(item, reference) {\n        let { list } = this;\n        item.retained = true;\n        list.remove(item);\n        list.insertBefore(item, reference);\n    }\n    remove(item) {\n        let { list } = this;\n        list.remove(item);\n        delete this.map[item.key];\n    }\n    nextNode(item) {\n        return this.list.nextNode(item);\n    }\n    head() {\n        return this.list.head();\n    }\n}\nexport class ReferenceIterator {\n    // if anyone needs to construct this object with something other than\n    // an iterable, let @wycats know.\n    constructor(iterable) {\n        this.iterator = null;\n        let artifacts = new IterationArtifacts(iterable);\n        this.artifacts = artifacts;\n    }\n    next() {\n        let { artifacts } = this;\n        let iterator = this.iterator = this.iterator || artifacts.iterate();\n        let item = iterator.next();\n        if (!item) return null;\n        return artifacts.append(item);\n    }\n}\nvar Phase;\n(function (Phase) {\n    Phase[Phase[\"Append\"] = 0] = \"Append\";\n    Phase[Phase[\"Prune\"] = 1] = \"Prune\";\n    Phase[Phase[\"Done\"] = 2] = \"Done\";\n})(Phase || (Phase = {}));\nexport class IteratorSynchronizer {\n    constructor({ target, artifacts }) {\n        this.target = target;\n        this.artifacts = artifacts;\n        this.iterator = artifacts.iterate();\n        this.current = artifacts.head();\n    }\n    sync() {\n        let phase = Phase.Append;\n        while (true) {\n            switch (phase) {\n                case Phase.Append:\n                    phase = this.nextAppend();\n                    break;\n                case Phase.Prune:\n                    phase = this.nextPrune();\n                    break;\n                case Phase.Done:\n                    this.nextDone();\n                    return;\n            }\n        }\n    }\n    advanceToKey(key) {\n        let { current, artifacts } = this;\n        let seek = current;\n        while (seek && seek.key !== key) {\n            seek.seen = true;\n            seek = artifacts.nextNode(seek);\n        }\n        this.current = seek && artifacts.nextNode(seek);\n    }\n    nextAppend() {\n        let { iterator, current, artifacts } = this;\n        let item = iterator.next();\n        if (item === null) {\n            return this.startPrune();\n        }\n        let { key } = item;\n        if (current && current.key === key) {\n            this.nextRetain(item);\n        } else if (artifacts.has(key)) {\n            this.nextMove(item);\n        } else {\n            this.nextInsert(item);\n        }\n        return Phase.Append;\n    }\n    nextRetain(item) {\n        let { artifacts, current } = this;\n        current = expect(current, 'BUG: current is empty');\n        current.update(item);\n        this.current = artifacts.nextNode(current);\n        this.target.retain(item.key, current.value, current.memo);\n    }\n    nextMove(item) {\n        let { current, artifacts, target } = this;\n        let { key } = item;\n        let found = artifacts.get(item.key);\n        found.update(item);\n        if (artifacts.wasSeen(item.key)) {\n            artifacts.move(found, current);\n            target.move(found.key, found.value, found.memo, current ? current.key : null);\n        } else {\n            this.advanceToKey(key);\n        }\n    }\n    nextInsert(item) {\n        let { artifacts, target, current } = this;\n        let node = artifacts.insertBefore(item, current);\n        target.insert(node.key, node.value, node.memo, current ? current.key : null);\n    }\n    startPrune() {\n        this.current = this.artifacts.head();\n        return Phase.Prune;\n    }\n    nextPrune() {\n        let { artifacts, target, current } = this;\n        if (current === null) {\n            return Phase.Done;\n        }\n        let node = current;\n        this.current = artifacts.nextNode(node);\n        if (node.shouldRemove()) {\n            artifacts.remove(node);\n            target.delete(node.key);\n        } else {\n            node.reset();\n        }\n        return Phase.Prune;\n    }\n    nextDone() {\n        this.target.done();\n    }\n}","import { ConstReference } from '@glimmer/reference';\nexport class PrimitiveReference extends ConstReference {\n    constructor(value) {\n        super(value);\n    }\n    static create(value) {\n        if (value === undefined) {\n            return UNDEFINED_REFERENCE;\n        } else if (value === null) {\n            return NULL_REFERENCE;\n        } else if (value === true) {\n            return TRUE_REFERENCE;\n        } else if (value === false) {\n            return FALSE_REFERENCE;\n        } else if (typeof value === 'number') {\n            return new ValueReference(value);\n        } else {\n            return new StringReference(value);\n        }\n    }\n    get(_key) {\n        return UNDEFINED_REFERENCE;\n    }\n}\nclass StringReference extends PrimitiveReference {\n    constructor() {\n        super(...arguments);\n        this.lengthReference = null;\n    }\n    get(key) {\n        if (key === 'length') {\n            let { lengthReference } = this;\n            if (lengthReference === null) {\n                lengthReference = this.lengthReference = new ValueReference(this.inner.length);\n            }\n            return lengthReference;\n        } else {\n            return super.get(key);\n        }\n    }\n}\nclass ValueReference extends PrimitiveReference {\n    constructor(value) {\n        super(value);\n    }\n}\nexport const UNDEFINED_REFERENCE = new ValueReference(undefined);\nexport const NULL_REFERENCE = new ValueReference(null);\nexport const TRUE_REFERENCE = new ValueReference(true);\nexport const FALSE_REFERENCE = new ValueReference(false);\nexport class ConditionalReference {\n    constructor(inner) {\n        this.inner = inner;\n        this.tag = inner.tag;\n    }\n    value() {\n        return this.toBool(this.inner.value());\n    }\n    toBool(value) {\n        return !!value;\n    }\n}","import { CachedReference, combineTagged } from '@glimmer/reference';\nexport class ConcatReference extends CachedReference {\n    constructor(parts) {\n        super();\n        this.parts = parts;\n        this.tag = combineTagged(parts);\n    }\n    compute() {\n        let parts = new Array();\n        for (let i = 0; i < this.parts.length; i++) {\n            let value = this.parts[i].value();\n            if (value !== null && value !== undefined) {\n                parts[i] = castToString(value);\n            }\n        }\n        if (parts.length > 0) {\n            return parts.join('');\n        }\n        return null;\n    }\n}\nfunction castToString(value) {\n    if (typeof value.toString !== 'function') {\n        return '';\n    }\n    return String(value);\n}","import { APPEND_OPCODES } from '../../opcodes';\nimport { FALSE_REFERENCE, TRUE_REFERENCE } from '../../references';\nimport { ConcatReference } from '../expressions/concat';\nAPPEND_OPCODES.add(1 /* Helper */, (vm, { op1: _helper }) => {\n    let stack = vm.stack;\n    let helper = vm.constants.getFunction(_helper);\n    let args = stack.pop();\n    let value = helper(vm, args);\n    args.clear();\n    vm.stack.push(value);\n});\nAPPEND_OPCODES.add(2 /* Function */, (vm, { op1: _function }) => {\n    let func = vm.constants.getFunction(_function);\n    vm.stack.push(func(vm));\n});\nAPPEND_OPCODES.add(5 /* GetVariable */, (vm, { op1: symbol }) => {\n    let expr = vm.referenceForSymbol(symbol);\n    vm.stack.push(expr);\n});\nAPPEND_OPCODES.add(4 /* SetVariable */, (vm, { op1: symbol }) => {\n    let expr = vm.stack.pop();\n    vm.scope().bindSymbol(symbol, expr);\n});\nAPPEND_OPCODES.add(70 /* ResolveMaybeLocal */, (vm, { op1: _name }) => {\n    let name = vm.constants.getString(_name);\n    let locals = vm.scope().getPartialMap();\n    let ref = locals[name];\n    if (ref === undefined) {\n        ref = vm.getSelf().get(name);\n    }\n    vm.stack.push(ref);\n});\nAPPEND_OPCODES.add(19 /* RootScope */, (vm, { op1: symbols, op2: bindCallerScope }) => {\n    vm.pushRootScope(symbols, !!bindCallerScope);\n});\nAPPEND_OPCODES.add(6 /* GetProperty */, (vm, { op1: _key }) => {\n    let key = vm.constants.getString(_key);\n    let expr = vm.stack.pop();\n    vm.stack.push(expr.get(key));\n});\nAPPEND_OPCODES.add(7 /* PushBlock */, (vm, { op1: _block }) => {\n    let block = _block ? vm.constants.getBlock(_block) : null;\n    vm.stack.push(block);\n});\nAPPEND_OPCODES.add(8 /* GetBlock */, (vm, { op1: _block }) => {\n    vm.stack.push(vm.scope().getBlock(_block));\n});\nAPPEND_OPCODES.add(9 /* HasBlock */, (vm, { op1: _block }) => {\n    let hasBlock = !!vm.scope().getBlock(_block);\n    vm.stack.push(hasBlock ? TRUE_REFERENCE : FALSE_REFERENCE);\n});\nAPPEND_OPCODES.add(10 /* HasBlockParams */, (vm, { op1: _block }) => {\n    let block = vm.scope().getBlock(_block);\n    let hasBlockParams = block && block.symbolTable.parameters.length;\n    vm.stack.push(hasBlockParams ? TRUE_REFERENCE : FALSE_REFERENCE);\n});\nAPPEND_OPCODES.add(11 /* Concat */, (vm, { op1: count }) => {\n    let out = [];\n    for (let i = count; i > 0; i--) {\n        out.push(vm.stack.pop());\n    }\n    vm.stack.push(new ConcatReference(out.reverse()));\n});","export function normalizeStringValue(value) {\n    if (isEmpty(value)) {\n        return '';\n    }\n    return String(value);\n}\nexport function normalizeTrustedValue(value) {\n    if (isEmpty(value)) {\n        return '';\n    }\n    if (isString(value)) {\n        return value;\n    }\n    if (isSafeString(value)) {\n        return value.toHTML();\n    }\n    if (isNode(value)) {\n        return value;\n    }\n    return String(value);\n}\nexport function isEmpty(value) {\n    return value === null || value === undefined || typeof value.toString !== 'function';\n}\nexport function isSafeString(value) {\n    return typeof value === 'object' && value !== null && typeof value.toHTML === 'function';\n}\nexport function isNode(value) {\n    return typeof value === 'object' && value !== null && typeof value.nodeType === 'number';\n}\nexport function isFragment(value) {\n    return isNode(value) && value.nodeType === 11;\n}\nexport function isString(value) {\n    return typeof value === 'string';\n}","import { ConstReference } from '@glimmer/reference';\nimport { CONSTANT_TAG, isConst, isModified, ReferenceCache } from '@glimmer/reference';\nimport { initializeGuid } from '@glimmer/util';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport { FALSE_REFERENCE, NULL_REFERENCE, PrimitiveReference, TRUE_REFERENCE, UNDEFINED_REFERENCE } from '../../references';\nAPPEND_OPCODES.add(20 /* ChildScope */, vm => vm.pushChildScope());\nAPPEND_OPCODES.add(21 /* PopScope */, vm => vm.popScope());\nAPPEND_OPCODES.add(39 /* PushDynamicScope */, vm => vm.pushDynamicScope());\nAPPEND_OPCODES.add(40 /* PopDynamicScope */, vm => vm.popDynamicScope());\nAPPEND_OPCODES.add(12 /* Immediate */, (vm, { op1: number }) => {\n    vm.stack.push(number);\n});\nAPPEND_OPCODES.add(13 /* Constant */, (vm, { op1: other }) => {\n    vm.stack.push(vm.constants.getOther(other));\n});\nAPPEND_OPCODES.add(14 /* PrimitiveReference */, (vm, { op1: primitive }) => {\n    let stack = vm.stack;\n    let flag = (primitive & 3 << 30) >>> 30;\n    let value = primitive & ~(3 << 30);\n    switch (flag) {\n        case 0:\n            stack.push(PrimitiveReference.create(value));\n            break;\n        case 1:\n            stack.push(PrimitiveReference.create(vm.constants.getString(value)));\n            break;\n        case 2:\n            switch (value) {\n                case 0:\n                    stack.push(FALSE_REFERENCE);\n                    break;\n                case 1:\n                    stack.push(TRUE_REFERENCE);\n                    break;\n                case 2:\n                    stack.push(NULL_REFERENCE);\n                    break;\n                case 3:\n                    stack.push(UNDEFINED_REFERENCE);\n                    break;\n            }\n            break;\n    }\n});\nAPPEND_OPCODES.add(15 /* Dup */, (vm, { op1: register, op2: offset }) => {\n    let position = vm.fetchValue(register) - offset;\n    vm.stack.dup(position);\n});\nAPPEND_OPCODES.add(16 /* Pop */, (vm, { op1: count }) => vm.stack.pop(count));\nAPPEND_OPCODES.add(17 /* Load */, (vm, { op1: register }) => vm.load(register));\nAPPEND_OPCODES.add(18 /* Fetch */, (vm, { op1: register }) => vm.fetch(register));\nAPPEND_OPCODES.add(38 /* BindDynamicScope */, (vm, { op1: _names }) => {\n    let names = vm.constants.getArray(_names);\n    vm.bindDynamicScope(names);\n});\nAPPEND_OPCODES.add(47 /* PushFrame */, vm => vm.pushFrame());\nAPPEND_OPCODES.add(48 /* PopFrame */, vm => vm.popFrame());\nAPPEND_OPCODES.add(49 /* Enter */, (vm, { op1: args }) => vm.enter(args));\nAPPEND_OPCODES.add(50 /* Exit */, vm => vm.exit());\nAPPEND_OPCODES.add(41 /* CompileDynamicBlock */, vm => {\n    let stack = vm.stack;\n    let block = stack.pop();\n    stack.push(block ? block.compileDynamic(vm.env) : null);\n});\nAPPEND_OPCODES.add(42 /* InvokeStatic */, (vm, { op1: _block }) => {\n    let block = vm.constants.getBlock(_block);\n    let compiled = block.compileStatic(vm.env);\n    vm.call(compiled.handle);\n});\nAPPEND_OPCODES.add(43 /* InvokeDynamic */, (vm, { op1: _invoker }) => {\n    let invoker = vm.constants.getOther(_invoker);\n    let block = vm.stack.pop();\n    invoker.invoke(vm, block);\n});\nAPPEND_OPCODES.add(44 /* Jump */, (vm, { op1: target }) => vm.goto(target));\nAPPEND_OPCODES.add(45 /* JumpIf */, (vm, { op1: target }) => {\n    let reference = vm.stack.pop();\n    if (isConst(reference)) {\n        if (reference.value()) {\n            vm.goto(target);\n        }\n    } else {\n        let cache = new ReferenceCache(reference);\n        if (cache.peek()) {\n            vm.goto(target);\n        }\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(46 /* JumpUnless */, (vm, { op1: target }) => {\n    let reference = vm.stack.pop();\n    if (isConst(reference)) {\n        if (!reference.value()) {\n            vm.goto(target);\n        }\n    } else {\n        let cache = new ReferenceCache(reference);\n        if (!cache.peek()) {\n            vm.goto(target);\n        }\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(22 /* Return */, vm => vm.return());\nAPPEND_OPCODES.add(23 /* ReturnTo */, (vm, { op1: relative }) => {\n    vm.returnTo(relative);\n});\nexport const ConstTest = function (ref, _env) {\n    return new ConstReference(!!ref.value());\n};\nexport const SimpleTest = function (ref, _env) {\n    return ref;\n};\nexport const EnvironmentTest = function (ref, env) {\n    return env.toConditionalReference(ref);\n};\nAPPEND_OPCODES.add(51 /* Test */, (vm, { op1: _func }) => {\n    let stack = vm.stack;\n    let operand = stack.pop();\n    let func = vm.constants.getFunction(_func);\n    stack.push(func(operand, vm.env));\n});\nexport class Assert extends UpdatingOpcode {\n    constructor(cache) {\n        super();\n        this.type = 'assert';\n        this.tag = cache.tag;\n        this.cache = cache;\n    }\n    evaluate(vm) {\n        let { cache } = this;\n        if (isModified(cache.revalidate())) {\n            vm.throw();\n        }\n    }\n    toJSON() {\n        let { type, _guid, cache } = this;\n        let expected;\n        try {\n            expected = JSON.stringify(cache.peek());\n        } catch (e) {\n            expected = String(cache.peek());\n        }\n        return {\n            args: [],\n            details: { expected },\n            guid: _guid,\n            type\n        };\n    }\n}\nexport class JumpIfNotModifiedOpcode extends UpdatingOpcode {\n    constructor(tag, target) {\n        super();\n        this.target = target;\n        this.type = 'jump-if-not-modified';\n        this.tag = tag;\n        this.lastRevision = tag.value();\n    }\n    evaluate(vm) {\n        let { tag, target, lastRevision } = this;\n        if (!vm.alwaysRevalidate && tag.validate(lastRevision)) {\n            vm.goto(target);\n        }\n    }\n    didModify() {\n        this.lastRevision = this.tag.value();\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.target.inspect())],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\nexport class DidModifyOpcode extends UpdatingOpcode {\n    constructor(target) {\n        super();\n        this.target = target;\n        this.type = 'did-modify';\n        this.tag = CONSTANT_TAG;\n    }\n    evaluate() {\n        this.target.didModify();\n    }\n}\nexport class LabelOpcode {\n    constructor(label) {\n        this.tag = CONSTANT_TAG;\n        this.type = 'label';\n        this.label = null;\n        this.prev = null;\n        this.next = null;\n        initializeGuid(this);\n        this.label = label;\n    }\n    evaluate() {}\n    inspect() {\n        return `${this.label} [${this._guid}]`;\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.inspect())],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}","import { ReferenceCache, isConst, isConstTag } from '@glimmer/reference';\nimport { APPEND_OPCODES, UpdatingOpcode, Register } from '../../opcodes';\nimport { Assert } from './vm';\nAPPEND_OPCODES.add(24 /* Text */, (vm, { op1: text }) => {\n    vm.elements().appendText(vm.constants.getString(text));\n});\nAPPEND_OPCODES.add(25 /* Comment */, (vm, { op1: text }) => {\n    vm.elements().appendComment(vm.constants.getString(text));\n});\nAPPEND_OPCODES.add(27 /* OpenElement */, (vm, { op1: tag }) => {\n    vm.elements().openElement(vm.constants.getString(tag));\n});\nAPPEND_OPCODES.add(28 /* OpenElementWithOperations */, (vm, { op1: tag }) => {\n    let tagName = vm.constants.getString(tag);\n    vm.elements().openElement(tagName);\n});\nAPPEND_OPCODES.add(29 /* OpenDynamicElement */, vm => {\n    let tagName = vm.stack.pop().value();\n    vm.elements().openElement(tagName);\n});\nAPPEND_OPCODES.add(36 /* PushRemoteElement */, vm => {\n    let elementRef = vm.stack.pop();\n    let nextSiblingRef = vm.stack.pop();\n    let element;\n    let nextSibling;\n    if (isConst(elementRef)) {\n        element = elementRef.value();\n    } else {\n        let cache = new ReferenceCache(elementRef);\n        element = cache.peek();\n        vm.updateWith(new Assert(cache));\n    }\n    if (isConst(nextSiblingRef)) {\n        nextSibling = nextSiblingRef.value();\n    } else {\n        let cache = new ReferenceCache(nextSiblingRef);\n        nextSibling = cache.peek();\n        vm.updateWith(new Assert(cache));\n    }\n    vm.elements().pushRemoteElement(element, nextSibling);\n});\nAPPEND_OPCODES.add(37 /* PopRemoteElement */, vm => vm.elements().popRemoteElement());\nAPPEND_OPCODES.add(33 /* FlushElement */, vm => {\n    let operations = vm.fetchValue(Register.t0);\n    if (operations) {\n        operations.flush(vm);\n        vm.loadValue(Register.t0, null);\n    }\n    vm.elements().flushElement();\n});\nAPPEND_OPCODES.add(34 /* CloseElement */, vm => vm.elements().closeElement());\nAPPEND_OPCODES.add(35 /* Modifier */, (vm, { op1: _manager }) => {\n    let manager = vm.constants.getOther(_manager);\n    let stack = vm.stack;\n    let args = stack.pop();\n    let { constructing: element, updateOperations } = vm.elements();\n    let dynamicScope = vm.dynamicScope();\n    let modifier = manager.create(element, args, dynamicScope, updateOperations);\n    args.clear();\n    vm.env.scheduleInstallModifier(modifier, manager);\n    let destructor = manager.getDestructor(modifier);\n    if (destructor) {\n        vm.newDestroyable(destructor);\n    }\n    let tag = manager.getTag(modifier);\n    if (!isConstTag(tag)) {\n        vm.updateWith(new UpdateModifierOpcode(tag, manager, modifier));\n    }\n});\nexport class UpdateModifierOpcode extends UpdatingOpcode {\n    constructor(tag, manager, modifier) {\n        super();\n        this.tag = tag;\n        this.manager = manager;\n        this.modifier = modifier;\n        this.type = 'update-modifier';\n        this.lastUpdated = tag.value();\n    }\n    evaluate(vm) {\n        let { manager, modifier, tag, lastUpdated } = this;\n        if (!tag.validate(lastUpdated)) {\n            vm.env.scheduleUpdateModifier(modifier, manager);\n            this.lastUpdated = tag.value();\n        }\n    }\n    toJSON() {\n        return {\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\n// APPEND_OPCODES.add(Op.ComponentAttr, )\nAPPEND_OPCODES.add(30 /* StaticAttr */, (vm, { op1: _name, op2: _value, op3: _namespace }) => {\n    let name = vm.constants.getString(_name);\n    let value = vm.constants.getString(_value);\n    let namespace = _namespace ? vm.constants.getString(_namespace) : null;\n    vm.elements().setStaticAttribute(name, value, namespace);\n});\nAPPEND_OPCODES.add(31 /* DynamicAttr */, (vm, { op1: _name, op2: trusting, op3: _namespace }) => {\n    let name = vm.constants.getString(_name);\n    let reference = vm.stack.pop();\n    let value = reference.value();\n    let namespace = _namespace ? vm.constants.getString(_namespace) : null;\n    let attribute = vm.elements().setDynamicAttribute(name, value, !!trusting, namespace);\n    if (!isConst(reference)) {\n        vm.updateWith(new UpdateDynamicAttributeOpcode(reference, attribute));\n    }\n});\nexport class UpdateDynamicAttributeOpcode extends UpdatingOpcode {\n    constructor(reference, attribute) {\n        super();\n        this.reference = reference;\n        this.attribute = attribute;\n        this.type = 'patch-element';\n        this.tag = reference.tag;\n    }\n    evaluate(vm) {\n        let { attribute, reference } = this;\n        attribute.update(reference.value(), vm.env);\n    }\n}","import { dict, EMPTY_ARRAY } from '@glimmer/util';\nimport { combineTagged } from '@glimmer/reference';\nimport { PrimitiveReference, UNDEFINED_REFERENCE } from '../references';\nexport class Arguments {\n    constructor() {\n        this.stack = null;\n        this.positional = new PositionalArguments();\n        this.named = new NamedArguments();\n    }\n    empty() {\n        this.setup(null, true);\n        return this;\n    }\n    setup(stack, synthetic) {\n        this.stack = stack;\n        let names = stack.fromTop(0);\n        let namedCount = names.length;\n        let positionalCount = stack.fromTop(namedCount + 1);\n        let start = positionalCount + namedCount + 2;\n        let positional = this.positional;\n        positional.setup(stack, start, positionalCount);\n        let named = this.named;\n        named.setup(stack, namedCount, names, synthetic);\n    }\n    get tag() {\n        return combineTagged([this.positional, this.named]);\n    }\n    get length() {\n        return this.positional.length + this.named.length;\n    }\n    at(pos) {\n        return this.positional.at(pos);\n    }\n    get(name) {\n        return this.named.get(name);\n    }\n    capture() {\n        return {\n            tag: this.tag,\n            length: this.length,\n            positional: this.positional.capture(),\n            named: this.named.capture()\n        };\n    }\n    clear() {\n        let { stack, length } = this;\n        stack.pop(length + 2);\n    }\n}\nclass PositionalArguments {\n    constructor() {\n        this.length = 0;\n        this.stack = null;\n        this.start = 0;\n        this._tag = null;\n        this._references = null;\n    }\n    setup(stack, start, length) {\n        this.stack = stack;\n        this.start = start;\n        this.length = length;\n        this._tag = null;\n        this._references = null;\n    }\n    get tag() {\n        let tag = this._tag;\n        if (!tag) {\n            tag = this._tag = combineTagged(this.references);\n        }\n        return tag;\n    }\n    at(position) {\n        let { start, length } = this;\n        if (position < 0 || position >= length) {\n            return UNDEFINED_REFERENCE;\n        }\n        // stack: pos1, pos2, pos3, named1, named2\n        // start: 4 (top - 4)\n        //\n        // at(0) === pos1 === top - start\n        // at(1) === pos2 === top - (start - 1)\n        // at(2) === pos3 === top - (start - 2)\n        let fromTop = start - position - 1;\n        return this.stack.fromTop(fromTop);\n    }\n    capture() {\n        return new CapturedPositionalArguments(this.tag, this.references);\n    }\n    get references() {\n        let references = this._references;\n        if (!references) {\n            let { length } = this;\n            references = this._references = new Array(length);\n            for (let i = 0; i < length; i++) {\n                references[i] = this.at(i);\n            }\n        }\n        return references;\n    }\n}\nclass CapturedPositionalArguments {\n    constructor(tag, references, length = references.length) {\n        this.tag = tag;\n        this.references = references;\n        this.length = length;\n    }\n    at(position) {\n        return this.references[position];\n    }\n    value() {\n        return this.references.map(this.valueOf);\n    }\n    get(name) {\n        let { references, length } = this;\n        if (name === 'length') {\n            return PrimitiveReference.create(length);\n        } else {\n            let idx = parseInt(name, 10);\n            if (idx < 0 || idx >= length) {\n                return UNDEFINED_REFERENCE;\n            } else {\n                return references[idx];\n            }\n        }\n    }\n    valueOf(reference) {\n        return reference.value();\n    }\n}\nclass NamedArguments {\n    constructor() {\n        this.length = 0;\n        this._tag = null;\n        this._references = null;\n        this._names = null;\n        this._realNames = EMPTY_ARRAY;\n    }\n    setup(stack, length, names, synthetic) {\n        this.stack = stack;\n        this.length = length;\n        this._tag = null;\n        this._references = null;\n        if (synthetic) {\n            this._names = names;\n            this._realNames = EMPTY_ARRAY;\n        } else {\n            this._names = null;\n            this._realNames = names;\n        }\n    }\n    get tag() {\n        return combineTagged(this.references);\n    }\n    get names() {\n        let names = this._names;\n        if (!names) {\n            names = this._names = this._realNames.map(this.sliceName);\n        }\n        return names;\n    }\n    has(name) {\n        return this.names.indexOf(name) !== -1;\n    }\n    get(name) {\n        let { names, length } = this;\n        let idx = names.indexOf(name);\n        if (idx === -1) {\n            return UNDEFINED_REFERENCE;\n        }\n        // stack: pos1, pos2, pos3, named1, named2\n        // start: 4 (top - 4)\n        // namedDict: { named1: 1, named2: 0 };\n        //\n        // get('named1') === named1 === top - (start - 1)\n        // get('named2') === named2 === top - start\n        let fromTop = length - idx;\n        return this.stack.fromTop(fromTop);\n    }\n    capture() {\n        return new CapturedNamedArguments(this.tag, this.names, this.references);\n    }\n    get references() {\n        let references = this._references;\n        if (!references) {\n            let { names, length } = this;\n            references = this._references = [];\n            for (let i = 0; i < length; i++) {\n                references[i] = this.get(names[i]);\n            }\n        }\n        return references;\n    }\n    sliceName(name) {\n        return name.slice(1);\n    }\n}\nclass CapturedNamedArguments {\n    constructor(tag, names, references) {\n        this.tag = tag;\n        this.names = names;\n        this.references = references;\n        this.length = names.length;\n        this._map = null;\n    }\n    get map() {\n        let map = this._map;\n        if (!map) {\n            let { names, references } = this;\n            map = this._map = dict();\n            for (let i = 0; i < names.length; i++) {\n                let name = names[i];\n                map[name] = references[i];\n            }\n        }\n        return map;\n    }\n    has(name) {\n        return this.names.indexOf(name) !== -1;\n    }\n    get(name) {\n        let { names, references } = this;\n        let idx = names.indexOf(name);\n        if (idx === -1) {\n            return UNDEFINED_REFERENCE;\n        } else {\n            return references[idx];\n        }\n    }\n    value() {\n        let { names, references } = this;\n        let out = dict();\n        for (let i = 0; i < names.length; i++) {\n            let name = names[i];\n            out[name] = references[i].value();\n        }\n        return out;\n    }\n}\nexport default new Arguments();","import { normalizeStringValue } from '../../dom/normalize';\nimport { UpdateDynamicAttributeOpcode } from './dom';\nimport { combineTagged, CONSTANT_TAG, ReferenceCache, isConst, isConstTag } from '@glimmer/reference';\nimport { APPEND_OPCODES, UpdatingOpcode, Register } from '../../opcodes';\nimport ARGS from '../../vm/arguments';\nimport { Assert } from './vm';\nimport { dict } from \"@glimmer/util\";\nAPPEND_OPCODES.add(56 /* PushComponentManager */, (vm, { op1: _definition }) => {\n    let definition = vm.constants.getOther(_definition);\n    let stack = vm.stack;\n    stack.push({ definition, manager: definition.manager, component: null });\n});\nAPPEND_OPCODES.add(57 /* PushDynamicComponentManager */, vm => {\n    let stack = vm.stack;\n    let reference = stack.pop();\n    let cache = isConst(reference) ? undefined : new ReferenceCache(reference);\n    let definition = cache ? cache.peek() : reference.value();\n    stack.push({ definition, manager: definition.manager, component: null });\n    if (cache) {\n        vm.updateWith(new Assert(cache));\n    }\n});\nAPPEND_OPCODES.add(58 /* PushArgs */, (vm, { op1: synthetic }) => {\n    let stack = vm.stack;\n    ARGS.setup(stack, !!synthetic);\n    stack.push(ARGS);\n});\nAPPEND_OPCODES.add(59 /* PrepareArgs */, (vm, { op1: _state }) => {\n    let stack = vm.stack;\n    let { definition, manager } = vm.fetchValue(_state);\n    let args = stack.pop();\n    let preparedArgs = manager.prepareArgs(definition, args);\n    if (preparedArgs) {\n        args.clear();\n        let { positional, named } = preparedArgs;\n        let positionalCount = positional.length;\n        for (let i = 0; i < positionalCount; i++) {\n            stack.push(positional[i]);\n        }\n        stack.push(positionalCount);\n        let names = Object.keys(named);\n        let namedCount = names.length;\n        let atNames = [];\n        for (let i = 0; i < namedCount; i++) {\n            let value = named[names[i]];\n            let atName = `@${names[i]}`;\n            stack.push(value);\n            atNames.push(atName);\n        }\n        stack.push(atNames);\n        args.setup(stack, false);\n    }\n    stack.push(args);\n});\nAPPEND_OPCODES.add(60 /* CreateComponent */, (vm, { op1: flags, op2: _state }) => {\n    let definition;\n    let manager;\n    let args = vm.stack.pop();\n    let dynamicScope = vm.dynamicScope();\n    let state = ({ definition, manager } = vm.fetchValue(_state));\n    let hasDefaultBlock = flags & 1;\n    let component = manager.create(vm.env, definition, args, dynamicScope, vm.getSelf(), !!hasDefaultBlock);\n    state.component = component;\n    let tag = manager.getTag(component);\n    if (!isConstTag(tag)) {\n        vm.updateWith(new UpdateComponentOpcode(tag, definition.name, component, manager, dynamicScope));\n    }\n});\nAPPEND_OPCODES.add(61 /* RegisterComponentDestructor */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let destructor = manager.getDestructor(component);\n    if (destructor) vm.newDestroyable(destructor);\n});\nAPPEND_OPCODES.add(65 /* BeginComponentTransaction */, vm => {\n    vm.beginCacheGroup();\n    vm.elements().pushSimpleBlock();\n});\nAPPEND_OPCODES.add(62 /* PutComponentOperations */, vm => {\n    vm.loadValue(Register.t0, new ComponentElementOperations());\n});\nAPPEND_OPCODES.add(32 /* ComponentAttr */, (vm, { op1: _name, op2: trusting, op3: _namespace }) => {\n    let name = vm.constants.getString(_name);\n    let reference = vm.stack.pop();\n    let namespace = _namespace ? vm.constants.getString(_namespace) : null;\n    vm.fetchValue(Register.t0).setAttribute(name, reference, !!trusting, namespace);\n});\nexport class ComponentElementOperations {\n    constructor() {\n        this.attributes = dict();\n        this.classes = [];\n    }\n    setAttribute(name, value, trusting, namespace) {\n        let deferred = { value, namespace, trusting };\n        if (name === 'class') {\n            this.classes.push(value);\n        }\n        this.attributes[name] = deferred;\n    }\n    flush(vm) {\n        for (let name in this.attributes) {\n            let attr = this.attributes[name];\n            let { value: reference, namespace, trusting } = attr;\n            if (name === 'class') {\n                reference = new ClassListReference(this.classes);\n            }\n            let attribute = vm.elements().setDynamicAttribute(name, reference.value(), trusting, namespace);\n            if (!isConst(reference)) {\n                vm.updateWith(new UpdateDynamicAttributeOpcode(reference, attribute));\n            }\n        }\n    }\n}\nclass ClassListReference {\n    constructor(list) {\n        this.list = list;\n        this.tag = combineTagged(list);\n        this.list = list;\n    }\n    value() {\n        let ret = [];\n        let { list } = this;\n        for (let i = 0; i < list.length; i++) {\n            let value = normalizeStringValue(list[i].value());\n            if (value) ret.push(value);\n        }\n        return ret.length === 0 ? null : ret.join(' ');\n    }\n}\nAPPEND_OPCODES.add(67 /* DidCreateElement */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let operations = vm.fetchValue(Register.t0);\n    let action = 'DidCreateElementOpcode#evaluate';\n    manager.didCreateElement(component, vm.elements().expectConstructing(action), operations);\n});\nAPPEND_OPCODES.add(63 /* GetComponentSelf */, (vm, { op1: _state }) => {\n    let state = vm.fetchValue(_state);\n    vm.stack.push(state.manager.getSelf(state.component));\n});\nAPPEND_OPCODES.add(64 /* GetComponentLayout */, (vm, { op1: _state }) => {\n    let { manager, definition, component } = vm.fetchValue(_state);\n    vm.stack.push(manager.layoutFor(definition, component, vm.env));\n});\nAPPEND_OPCODES.add(68 /* DidRenderLayout */, (vm, { op1: _state }) => {\n    let { manager, component } = vm.fetchValue(_state);\n    let bounds = vm.elements().popBlock();\n    manager.didRenderLayout(component, bounds);\n    vm.env.didCreate(component, manager);\n    vm.updateWith(new DidUpdateLayoutOpcode(manager, component, bounds));\n});\nAPPEND_OPCODES.add(66 /* CommitComponentTransaction */, vm => vm.commitCacheGroup());\nexport class UpdateComponentOpcode extends UpdatingOpcode {\n    constructor(tag, name, component, manager, dynamicScope) {\n        super();\n        this.tag = tag;\n        this.name = name;\n        this.component = component;\n        this.manager = manager;\n        this.dynamicScope = dynamicScope;\n        this.type = 'update-component';\n    }\n    evaluate(_vm) {\n        let { component, manager, dynamicScope } = this;\n        manager.update(component, dynamicScope);\n    }\n    toJSON() {\n        return {\n            args: [JSON.stringify(this.name)],\n            guid: this._guid,\n            type: this.type\n        };\n    }\n}\nexport class DidUpdateLayoutOpcode extends UpdatingOpcode {\n    constructor(manager, component, bounds) {\n        super();\n        this.manager = manager;\n        this.component = component;\n        this.bounds = bounds;\n        this.type = 'did-update-layout';\n        this.tag = CONSTANT_TAG;\n    }\n    evaluate(vm) {\n        let { manager, component, bounds } = this;\n        manager.didUpdateLayout(component, bounds);\n        vm.env.didUpdate(component, manager);\n    }\n}","const COMPONENT_DEFINITION_BRAND = 'COMPONENT DEFINITION [id=e59c754e-61eb-4392-8c4a-2c0ac72bfcd4]';\nexport function isComponentDefinition(obj) {\n    return typeof obj === 'object' && obj !== null && obj[COMPONENT_DEFINITION_BRAND];\n}\nexport class ComponentDefinition {\n    constructor(name, manager, ComponentClass) {\n        this[COMPONENT_DEFINITION_BRAND] = true;\n        this.name = name;\n        this.manager = manager;\n        this.ComponentClass = ComponentClass;\n    }\n}","import { isConst } from '@glimmer/reference';\nimport { isComponentDefinition } from '../../component/interfaces';\nimport { APPEND_OPCODES, UpdatingOpcode } from '../../opcodes';\nimport { ConditionalReference } from '../../references';\nexport class IsComponentDefinitionReference extends ConditionalReference {\n    static create(inner) {\n        return new IsComponentDefinitionReference(inner);\n    }\n    toBool(value) {\n        return isComponentDefinition(value);\n    }\n}\nAPPEND_OPCODES.add(26 /* DynamicContent */, (vm, { op1: isTrusting }) => {\n    let reference = vm.stack.pop();\n    let value = reference.value();\n    let content;\n    if (isTrusting) {\n        content = vm.elements().appendTrustingDynamicContent(value);\n    } else {\n        content = vm.elements().appendCautiousDynamicContent(value);\n    }\n    if (!isConst(reference)) {\n        vm.updateWith(new UpdateDynamicContentOpcode(reference, content));\n    }\n});\nclass UpdateDynamicContentOpcode extends UpdatingOpcode {\n    constructor(reference, content) {\n        super();\n        this.reference = reference;\n        this.content = content;\n        this.tag = reference.tag;\n    }\n    evaluate(vm) {\n        let { content, reference } = this;\n        content.update(vm.env, reference.value());\n    }\n}","import { dict } from '@glimmer/util';\nimport { APPEND_OPCODES } from '../../opcodes';\n/* tslint:disable */\nfunction debugCallback(context, get) {\n    console.info('Use `context`, and `get(<path>)` to debug this template.');\n    // for example...\n    context === get('this');\n    debugger;\n}\n/* tslint:enable */\nlet callback = debugCallback;\n// For testing purposes\nexport function setDebuggerCallback(cb) {\n    callback = cb;\n}\nexport function resetDebuggerCallback() {\n    callback = debugCallback;\n}\nclass ScopeInspector {\n    constructor(scope, symbols, evalInfo) {\n        this.scope = scope;\n        this.locals = dict();\n        for (let i = 0; i < evalInfo.length; i++) {\n            let slot = evalInfo[i];\n            let name = symbols[slot - 1];\n            let ref = scope.getSymbol(slot);\n            this.locals[name] = ref;\n        }\n    }\n    get(path) {\n        let { scope, locals } = this;\n        let parts = path.split('.');\n        let [head, ...tail] = path.split('.');\n        let evalScope = scope.getEvalScope();\n        let ref;\n        if (head === 'this') {\n            ref = scope.getSelf();\n        } else if (locals[head]) {\n            ref = locals[head];\n        } else if (head.indexOf('@') === 0 && evalScope[head]) {\n            ref = evalScope[head];\n        } else {\n            ref = this.scope.getSelf();\n            tail = parts;\n        }\n        return tail.reduce((r, part) => r.get(part), ref);\n    }\n}\nAPPEND_OPCODES.add(71 /* Debugger */, (vm, { op1: _symbols, op2: _evalInfo }) => {\n    let symbols = vm.constants.getOther(_symbols);\n    let evalInfo = vm.constants.getArray(_evalInfo);\n    let inspector = new ScopeInspector(vm.scope(), symbols, evalInfo);\n    callback(vm.getSelf().value(), path => inspector.get(path).value());\n});","import { APPEND_OPCODES } from '../../opcodes';\nAPPEND_OPCODES.add(69 /* GetPartialTemplate */, vm => {\n    let stack = vm.stack;\n    let definition = stack.pop();\n    stack.push(definition.value().template.asPartial());\n});","import { ReferenceIterator } from '@glimmer/reference';\nimport { APPEND_OPCODES } from '../../opcodes';\nclass IterablePresenceReference {\n    constructor(artifacts) {\n        this.tag = artifacts.tag;\n        this.artifacts = artifacts;\n    }\n    value() {\n        return !this.artifacts.isEmpty();\n    }\n}\nAPPEND_OPCODES.add(54 /* PutIterator */, vm => {\n    let stack = vm.stack;\n    let listRef = stack.pop();\n    let key = stack.pop();\n    let iterable = vm.env.iterableFor(listRef, key.value());\n    let iterator = new ReferenceIterator(iterable);\n    stack.push(iterator);\n    stack.push(new IterablePresenceReference(iterator.artifacts));\n});\nAPPEND_OPCODES.add(52 /* EnterList */, (vm, { op1: relativeStart }) => {\n    vm.enterList(relativeStart);\n});\nAPPEND_OPCODES.add(53 /* ExitList */, vm => vm.exitList());\nAPPEND_OPCODES.add(55 /* Iterate */, (vm, { op1: breaks }) => {\n    let stack = vm.stack;\n    let item = stack.peek().next();\n    if (item) {\n        let tryOpcode = vm.iterate(item.memo, item.value);\n        vm.enterItem(item.key, tryOpcode);\n    } else {\n        vm.goto(breaks);\n    }\n});","export class Cursor {\n    constructor(element, nextSibling) {\n        this.element = element;\n        this.nextSibling = nextSibling;\n    }\n}\nexport function currentNode(cursor) {\n    let { element, nextSibling } = cursor;\n    if (nextSibling === null) {\n        return element.lastChild;\n    } else {\n        return nextSibling.previousSibling;\n    }\n}\nexport class RealDOMBounds {\n    constructor(bounds) {\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n}\nexport class ConcreteBounds {\n    constructor(parentNode, first, last) {\n        this.parentNode = parentNode;\n        this.first = first;\n        this.last = last;\n    }\n    parentElement() {\n        return this.parentNode;\n    }\n    firstNode() {\n        return this.first;\n    }\n    lastNode() {\n        return this.last;\n    }\n}\nexport class SingleNodeBounds {\n    constructor(parentNode, node) {\n        this.parentNode = parentNode;\n        this.node = node;\n    }\n    parentElement() {\n        return this.parentNode;\n    }\n    firstNode() {\n        return this.node;\n    }\n    lastNode() {\n        return this.node;\n    }\n}\nexport function bounds(parent, first, last) {\n    return new ConcreteBounds(parent, first, last);\n}\nexport function single(parent, node) {\n    return new SingleNodeBounds(parent, node);\n}\nexport function move(bounds, reference) {\n    let parent = bounds.parentElement();\n    let first = bounds.firstNode();\n    let last = bounds.lastNode();\n    let node = first;\n    while (node) {\n        let next = node.nextSibling;\n        parent.insertBefore(node, reference);\n        if (node === last) return next;\n        node = next;\n    }\n    return null;\n}\nexport function clear(bounds) {\n    let parent = bounds.parentElement();\n    let first = bounds.firstNode();\n    let last = bounds.lastNode();\n    let node = first;\n    while (node) {\n        let next = node.nextSibling;\n        parent.removeChild(node);\n        if (node === last) return next;\n        node = next;\n    }\n    return null;\n}","import { clear } from '../../bounds';\nimport { NewElementBuilder } from '../element-builder';\nclass DynamicContentBase {\n    constructor(trusting) {\n        this.trusting = trusting;\n    }\n    retry(env, value) {\n        let { bounds } = this;\n        let parentElement = bounds.parentElement();\n        let nextSibling = clear(bounds);\n        let stack = NewElementBuilder.forInitialRender(env, parentElement, nextSibling);\n        if (this.trusting) {\n            return stack.__appendTrustingDynamicContent(value);\n        } else {\n            return stack.__appendCautiousDynamicContent(value);\n        }\n    }\n}\nexport default DynamicContentBase;\nexport class DynamicContentWrapper {\n    constructor(inner) {\n        this.inner = inner;\n        this.bounds = inner.bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    update(env, value) {\n        let inner = this.inner = this.inner.update(env, value);\n        this.bounds = inner.bounds;\n        return this;\n    }\n}","import DynamicContentBase from './dynamic';\nimport { isNode, isSafeString, isEmpty, isString } from '../../dom/normalize';\nexport default class DynamicTextContent extends DynamicContentBase {\n    constructor(bounds, lastValue, trusted) {\n        super(trusted);\n        this.bounds = bounds;\n        this.lastValue = lastValue;\n    }\n    update(env, value) {\n        let { lastValue } = this;\n        if (value === lastValue) return this;\n        if (isNode(value) || isSafeString(value)) return this.retry(env, value);\n        let normalized;\n        if (isEmpty(value)) {\n            normalized = '';\n        } else if (isString(value)) {\n            normalized = value;\n        } else {\n            normalized = String(value);\n        }\n        if (normalized !== lastValue) {\n            let textNode = this.bounds.firstNode();\n            textNode.nodeValue = this.lastValue = normalized;\n        }\n        return this;\n    }\n}","import DynamicContentBase from './dynamic';\nexport default class DynamicNodeContent extends DynamicContentBase {\n    constructor(bounds, lastValue, trusting) {\n        super(trusting);\n        this.bounds = bounds;\n        this.lastValue = lastValue;\n    }\n    update(env, value) {\n        let { lastValue } = this;\n        if (value === lastValue) return this;\n        return this.retry(env, value);\n    }\n}","import DynamicContentBase from './dynamic';\nimport { isSafeString, normalizeTrustedValue } from '../../dom/normalize';\nexport default class DynamicHTMLContent extends DynamicContentBase {\n    constructor(bounds, lastValue, trusted) {\n        super(trusted);\n        this.bounds = bounds;\n        this.lastValue = lastValue;\n    }\n    update(env, value) {\n        let { lastValue } = this;\n        if (value === lastValue) return this;\n        if (isSafeString(value) && value.toHTML() === lastValue.toHTML()) {\n            this.lastValue = value;\n            return this;\n        }\n        return this.retry(env, value);\n    }\n}\nexport class DynamicTrustedHTMLContent extends DynamicContentBase {\n    constructor(bounds, lastValue, trusted) {\n        super(trusted);\n        this.bounds = bounds;\n        this.lastValue = lastValue;\n    }\n    update(env, value) {\n        let { lastValue } = this;\n        if (value === lastValue) return this;\n        let newValue = normalizeTrustedValue(value);\n        if (newValue === lastValue) return this;\n        return this.retry(env, value);\n    }\n}","import { clear, Cursor, single, bounds } from '../bounds';\nimport { isString, isSafeString, isNode, isFragment, isEmpty } from '../dom/normalize';\nimport { Stack, assert, expect } from '@glimmer/util';\nimport { DynamicContentWrapper } from './content/dynamic';\nimport DynamicTextContent from './content/text';\nimport DynamicNodeContent from './content/node';\nimport DynamicHTMLContent, { DynamicTrustedHTMLContent } from './content/html';\nclass First {\n    constructor(node) {\n        this.node = node;\n    }\n    firstNode() {\n        return this.node;\n    }\n}\nclass Last {\n    constructor(node) {\n        this.node = node;\n    }\n    lastNode() {\n        return this.node;\n    }\n}\nexport class Fragment {\n    constructor(bounds) {\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    update(bounds) {\n        this.bounds = bounds;\n    }\n}\nexport class NewElementBuilder {\n    constructor(env, parentNode, nextSibling) {\n        this.constructing = null;\n        this.operations = null;\n        this.cursorStack = new Stack();\n        this.blockStack = new Stack();\n        this.cursorStack.push(new Cursor(parentNode, nextSibling));\n        this.env = env;\n        this.dom = env.getAppendOperations();\n        this.updateOperations = env.getDOM();\n    }\n    static forInitialRender(env, parentNode, nextSibling) {\n        let builder = new this(env, parentNode, nextSibling);\n        builder.pushSimpleBlock();\n        return builder;\n    }\n    static resume(env, tracker, nextSibling) {\n        let parentNode = tracker.parentElement();\n        let stack = new this(env, parentNode, nextSibling);\n        stack.pushSimpleBlock();\n        stack.pushBlockTracker(tracker);\n        return stack;\n    }\n    get element() {\n        return this.cursorStack.current.element;\n    }\n    get nextSibling() {\n        return this.cursorStack.current.nextSibling;\n    }\n    expectConstructing(method) {\n        return expect(this.constructing, `${method} should only be called while constructing an element`);\n    }\n    expectOperations(method) {\n        return expect(this.operations, `${method} should only be called while constructing an element`);\n    }\n    block() {\n        return expect(this.blockStack.current, \"Expected a current block tracker\");\n    }\n    popElement() {\n        this.cursorStack.pop();\n        expect(this.cursorStack.current, \"can't pop past the last element\");\n    }\n    pushSimpleBlock() {\n        return this.pushBlockTracker(new SimpleBlockTracker(this.element));\n    }\n    pushUpdatableBlock() {\n        return this.pushBlockTracker(new UpdatableBlockTracker(this.element));\n    }\n    pushBlockList(list) {\n        return this.pushBlockTracker(new BlockListTracker(this.element, list));\n    }\n    pushBlockTracker(tracker, isRemote = false) {\n        let current = this.blockStack.current;\n        if (current !== null) {\n            current.newDestroyable(tracker);\n            if (!isRemote) {\n                current.didAppendBounds(tracker);\n            }\n        }\n        this.__openBlock();\n        this.blockStack.push(tracker);\n        return tracker;\n    }\n    popBlock() {\n        this.block().finalize(this);\n        this.__closeBlock();\n        return expect(this.blockStack.pop(), \"Expected popBlock to return a block\");\n    }\n    __openBlock() {}\n    __closeBlock() {}\n    openElement(tag) {\n        let element = this.__openElement(tag);\n        this.constructing = element;\n        return element;\n    }\n    __openElement(tag) {\n        return this.dom.createElement(tag, this.element);\n    }\n    flushElement() {\n        let parent = this.element;\n        let element = expect(this.constructing, `flushElement should only be called when constructing an element`);\n        this.__flushElement(parent, element);\n        this.constructing = null;\n        this.operations = null;\n        this.pushElement(element, null);\n        this.didOpenElement(element);\n    }\n    __flushElement(parent, constructing) {\n        this.dom.insertBefore(parent, constructing, this.nextSibling);\n    }\n    closeElement() {\n        this.willCloseElement();\n        this.popElement();\n    }\n    pushRemoteElement(element, nextSibling = null) {\n        this.pushElement(element, nextSibling);\n        let tracker = new RemoteBlockTracker(element);\n        this.pushBlockTracker(tracker, true);\n    }\n    popRemoteElement() {\n        this.popBlock();\n        this.popElement();\n    }\n    pushElement(element, nextSibling) {\n        this.cursorStack.push(new Cursor(element, nextSibling));\n    }\n    didAddDestroyable(d) {\n        this.block().newDestroyable(d);\n    }\n    didAppendBounds(bounds) {\n        this.block().didAppendBounds(bounds);\n        return bounds;\n    }\n    didAppendNode(node) {\n        this.block().didAppendNode(node);\n        return node;\n    }\n    didOpenElement(element) {\n        this.block().openElement(element);\n        return element;\n    }\n    willCloseElement() {\n        this.block().closeElement();\n    }\n    appendText(string) {\n        return this.didAppendNode(this.__appendText(string));\n    }\n    __appendText(text) {\n        let { dom, element, nextSibling } = this;\n        let node = dom.createTextNode(text);\n        dom.insertBefore(element, node, nextSibling);\n        return node;\n    }\n    appendNode(node) {\n        return this.didAppendNode(this.__appendNode(node));\n    }\n    __appendNode(node) {\n        this.dom.insertBefore(this.element, node, this.nextSibling);\n        return node;\n    }\n    appendFragment(fragment) {\n        return this.didAppendBounds(this.__appendFragment(fragment));\n    }\n    __appendFragment(fragment) {\n        let first = fragment.firstChild;\n        if (first) {\n            let ret = bounds(this.element, first, fragment.lastChild);\n            this.dom.insertBefore(this.element, fragment, this.nextSibling);\n            return ret;\n        } else {\n            return single(this.element, this.__appendComment(''));\n        }\n    }\n    appendHTML(html) {\n        return this.didAppendBounds(this.__appendHTML(html));\n    }\n    __appendHTML(html) {\n        return this.dom.insertHTMLBefore(this.element, this.nextSibling, html);\n    }\n    appendTrustingDynamicContent(value) {\n        let wrapper = new DynamicContentWrapper(this.__appendTrustingDynamicContent(value));\n        this.didAppendBounds(wrapper);\n        return wrapper;\n    }\n    __appendTrustingDynamicContent(value) {\n        if (isFragment(value)) {\n            let bounds = this.__appendFragment(value);\n            return new DynamicNodeContent(bounds, value, true);\n        } else if (isNode(value)) {\n            let node = this.__appendNode(value);\n            return new DynamicNodeContent(single(this.element, node), node, true);\n        } else {\n            let normalized;\n            if (isEmpty(value)) {\n                normalized = '';\n            } else if (isSafeString(value)) {\n                normalized = value.toHTML();\n            } else if (isString(value)) {\n                normalized = value;\n            } else {\n                normalized = String(value);\n            }\n            let bounds = this.__appendHTML(normalized);\n            return new DynamicTrustedHTMLContent(bounds, normalized, true);\n        }\n    }\n    appendCautiousDynamicContent(value) {\n        let wrapper = new DynamicContentWrapper(this.__appendCautiousDynamicContent(value));\n        this.didAppendBounds(wrapper.bounds);\n        return wrapper;\n    }\n    __appendCautiousDynamicContent(value) {\n        if (isFragment(value)) {\n            let bounds = this.__appendFragment(value);\n            return new DynamicNodeContent(bounds, value, false);\n        } else if (isNode(value)) {\n            let node = this.__appendNode(value);\n            return new DynamicNodeContent(single(this.element, node), node, false);\n        } else if (isSafeString(value)) {\n            let normalized = value.toHTML();\n            let bounds = this.__appendHTML(normalized);\n            // let bounds = this.dom.insertHTMLBefore(this.element, this.nextSibling, normalized);\n            return new DynamicHTMLContent(bounds, value, false);\n        } else {\n            let normalized;\n            if (isEmpty(value)) {\n                normalized = '';\n            } else if (isString(value)) {\n                normalized = value;\n            } else {\n                normalized = String(value);\n            }\n            let textNode = this.__appendText(normalized);\n            let bounds = single(this.element, textNode);\n            return new DynamicTextContent(bounds, normalized, false);\n        }\n    }\n    appendComment(string) {\n        return this.didAppendNode(this.__appendComment(string));\n    }\n    __appendComment(string) {\n        let { dom, element, nextSibling } = this;\n        let node = dom.createComment(string);\n        dom.insertBefore(element, node, nextSibling);\n        return node;\n    }\n    __setAttribute(name, value, namespace) {\n        this.dom.setAttribute(this.constructing, name, value, namespace);\n    }\n    __setProperty(name, value) {\n        this.constructing[name] = value;\n    }\n    setStaticAttribute(name, value, namespace) {\n        this.__setAttribute(name, value, namespace);\n    }\n    setDynamicAttribute(name, value, trusting, namespace) {\n        let element = this.constructing;\n        let DynamicAttribute = this.env.attributeFor(element, name, trusting, namespace);\n        let attribute = new DynamicAttribute({ element, name, namespace: namespace || null });\n        attribute.set(this, value, this.env);\n        return attribute;\n    }\n}\nexport class SimpleBlockTracker {\n    constructor(parent) {\n        this.parent = parent;\n        this.first = null;\n        this.last = null;\n        this.destroyables = null;\n        this.nesting = 0;\n    }\n    destroy() {\n        let { destroyables } = this;\n        if (destroyables && destroyables.length) {\n            for (let i = 0; i < destroyables.length; i++) {\n                destroyables[i].destroy();\n            }\n        }\n    }\n    parentElement() {\n        return this.parent;\n    }\n    firstNode() {\n        return this.first && this.first.firstNode();\n    }\n    lastNode() {\n        return this.last && this.last.lastNode();\n    }\n    openElement(element) {\n        this.didAppendNode(element);\n        this.nesting++;\n    }\n    closeElement() {\n        this.nesting--;\n    }\n    didAppendNode(node) {\n        if (this.nesting !== 0) return;\n        if (!this.first) {\n            this.first = new First(node);\n        }\n        this.last = new Last(node);\n    }\n    didAppendBounds(bounds) {\n        if (this.nesting !== 0) return;\n        if (!this.first) {\n            this.first = bounds;\n        }\n        this.last = bounds;\n    }\n    newDestroyable(d) {\n        this.destroyables = this.destroyables || [];\n        this.destroyables.push(d);\n    }\n    finalize(stack) {\n        if (!this.first) {\n            stack.appendComment('');\n        }\n    }\n}\nclass RemoteBlockTracker extends SimpleBlockTracker {\n    destroy() {\n        super.destroy();\n        clear(this);\n    }\n}\nexport class UpdatableBlockTracker extends SimpleBlockTracker {\n    reset(env) {\n        let { destroyables } = this;\n        if (destroyables && destroyables.length) {\n            for (let i = 0; i < destroyables.length; i++) {\n                env.didDestroy(destroyables[i]);\n            }\n        }\n        let nextSibling = clear(this);\n        this.first = null;\n        this.last = null;\n        this.destroyables = null;\n        this.nesting = 0;\n        return nextSibling;\n    }\n}\nclass BlockListTracker {\n    constructor(parent, boundList) {\n        this.parent = parent;\n        this.boundList = boundList;\n        this.parent = parent;\n        this.boundList = boundList;\n    }\n    destroy() {\n        this.boundList.forEachNode(node => node.destroy());\n    }\n    parentElement() {\n        return this.parent;\n    }\n    firstNode() {\n        let head = this.boundList.head();\n        return head && head.firstNode();\n    }\n    lastNode() {\n        let tail = this.boundList.tail();\n        return tail && tail.lastNode();\n    }\n    openElement(_element) {\n        assert(false, 'Cannot openElement directly inside a block list');\n    }\n    closeElement() {\n        assert(false, 'Cannot closeElement directly inside a block list');\n    }\n    didAppendNode(_node) {\n        assert(false, 'Cannot create a new node directly inside a block list');\n    }\n    didAppendBounds(_bounds) {}\n    newDestroyable(_d) {}\n    finalize(_stack) {}\n}","import { NewElementBuilder } from \"./element-builder\";\nimport { bounds } from '../bounds';\nimport { expect, assert } from \"@glimmer/util\";\nexport class RehydrateBuilder extends NewElementBuilder {\n    constructor(env, parentNode, nextSibling) {\n        super(env, parentNode, nextSibling);\n        // The last node that matched\n        this.lastMatchedNode = null;\n        this.unmatchedAttributes = null;\n        this.blockDepth = 0;\n        if (nextSibling) throw new Error(\"Rehydration with nextSibling not supported\");\n        this._candidate = parentNode.firstChild;\n    }\n    get candidate() {\n        let candidate = this._candidate;\n        if (!candidate) return null;\n        if (isComment(candidate) && getCloseBoundsDepth(candidate) === this.blockDepth) {\n            return null;\n        } else {\n            return candidate;\n        }\n    }\n    clearMismatch(candidate) {\n        if (isComment(candidate)) {\n            let depth = getOpenBoundsDepth(candidate);\n            if (depth !== null) {\n                this.clearBlock(depth);\n                return;\n            }\n        }\n        let current = candidate;\n        let until = this.nextSibling;\n        while (current && current !== until) {\n            current = remove(current);\n        }\n        this._candidate = null;\n    }\n    clearBlock(depth) {\n        let current = this._candidate;\n        while (current && !(isComment(current) && getCloseBoundsDepth(current) === depth)) {\n            current = remove(current);\n        }\n        assert(current && isComment(current) && getCloseBoundsDepth(current) === depth, 'An opening block should be paired with a closing block comment');\n        this._candidate = remove(current);\n    }\n    __openBlock() {\n        let { candidate } = this;\n        if (candidate) {\n            if (isComment(candidate)) {\n                let depth = getOpenBoundsDepth(candidate);\n                if (depth !== null) this.blockDepth = depth;\n                this._candidate = remove(candidate);\n                return;\n            } else {\n                this.clearMismatch(candidate);\n            }\n        }\n    }\n    __closeBlock() {\n        let { _candidate: candidate } = this;\n        if (candidate) {\n            if (isComment(candidate)) {\n                let depth = getCloseBoundsDepth(candidate);\n                if (depth !== null) this.blockDepth = depth - 1;\n                this._candidate = remove(candidate);\n                return;\n            } else {\n                this.clearMismatch(candidate);\n            }\n        }\n    }\n    __appendNode(node) {\n        let { candidate } = this;\n        // This code path is only used when inserting precisely one node. It needs more\n        // comparison logic, but we can probably lean on the cases where this code path\n        // is actually used.\n        if (candidate) {\n            return candidate;\n        } else {\n            return super.__appendNode(node);\n        }\n    }\n    __appendHTML(html) {\n        let candidateBounds = this.markerBounds();\n        if (candidateBounds) {\n            let first = candidateBounds.firstNode();\n            let last = candidateBounds.lastNode();\n            let newBounds = bounds(this.element, first.nextSibling, last.previousSibling);\n            remove(first);\n            remove(last);\n            return newBounds;\n        } else {\n            return super.__appendHTML(html);\n        }\n    }\n    markerBounds() {\n        let { _candidate } = this;\n        if (_candidate && isMarker(_candidate)) {\n            let first = _candidate;\n            let last = expect(first.nextSibling, `BUG: serialization markers must be paired`);\n            while (last && !isMarker(last)) {\n                last = expect(last.nextSibling, `BUG: serialization markers must be paired`);\n            }\n            return bounds(this.element, first, last);\n        } else {\n            return null;\n        }\n    }\n    __appendText(string) {\n        let { candidate } = this;\n        if (candidate) {\n            if (isEmpty(candidate)) {\n                let next = this._candidate = remove(candidate);\n                let text = this.dom.createTextNode(string);\n                this.dom.insertBefore(this.element, text, next);\n                return text;\n            }\n            if (isTextNode(candidate)) {\n                candidate.nodeValue = string;\n                this.lastMatchedNode = candidate;\n                this._candidate = candidate.nextSibling;\n                return candidate;\n            } else if (candidate && (isSeparator(candidate) || isEmpty(candidate))) {\n                this._candidate = candidate.nextSibling;\n                remove(candidate);\n                return this.__appendText(string);\n            } else {\n                this.clearMismatch(candidate);\n                return super.__appendText(string);\n            }\n        } else {\n            return super.__appendText(string);\n        }\n    }\n    __appendComment(string) {\n        let { _candidate } = this;\n        if (_candidate && isComment(_candidate)) {\n            _candidate.nodeValue = string;\n            this.lastMatchedNode = _candidate;\n            this._candidate = _candidate.nextSibling;\n            return _candidate;\n        } else if (_candidate) {\n            this.clearMismatch(_candidate);\n        }\n        return super.__appendComment(string);\n    }\n    __openElement(tag, _operations) {\n        let { _candidate } = this;\n        if (_candidate && isElement(_candidate) && _candidate.tagName === tag.toUpperCase()) {\n            this.unmatchedAttributes = [].slice.call(_candidate.attributes);\n            this._candidate = _candidate.firstChild;\n            return _candidate;\n        } else if (_candidate) {\n            this.clearMismatch(_candidate);\n        }\n        return super.__openElement(tag);\n    }\n    __setAttribute(name, value, namespace) {\n        let unmatched = this.unmatchedAttributes;\n        if (unmatched) {\n            let attr = findByName(unmatched, name);\n            if (attr) {\n                attr.value = value;\n                unmatched.splice(unmatched.indexOf(attr), 1);\n                return;\n            }\n        }\n        return super.__setAttribute(name, value, namespace);\n    }\n    __setProperty(name, value) {\n        let unmatched = this.unmatchedAttributes;\n        if (unmatched) {\n            let attr = findByName(unmatched, name);\n            if (attr) {\n                attr.value = value;\n                unmatched.splice(unmatched.indexOf(attr), 1);\n                return;\n            }\n        }\n        return super.__setProperty(name, value);\n    }\n    __flushElement(parent, constructing) {\n        let { unmatchedAttributes: unmatched } = this;\n        if (unmatched) {\n            for (let i = 0; i < unmatched.length; i++) {\n                this.constructing.removeAttribute(unmatched[i].name);\n            }\n            this.unmatchedAttributes = null;\n        } else {\n            super.__flushElement(parent, constructing);\n        }\n    }\n    appendCautiousDynamicContent(value) {\n        let content = super.appendCautiousDynamicContent(value);\n        content.update(this.env, value);\n        return content;\n    }\n    willCloseElement() {\n        let { candidate } = this;\n        if (candidate) {\n            this.clearMismatch(candidate);\n        }\n        this._candidate = this.element.nextSibling;\n        this.lastMatchedNode = this.element;\n        super.willCloseElement();\n    }\n    pushRemoteElement(_element, _nextSibling = null) {\n        throw unimplemented();\n    }\n    popRemoteElement() {\n        throw unimplemented();\n    }\n    didAppendBounds(bounds) {\n        super.didAppendBounds(bounds);\n        let last = bounds.lastNode();\n        this._candidate = last && last.nextSibling;\n        return bounds;\n    }\n    didOpenElement(element) {\n        super.didOpenElement(element);\n        this._candidate = element.firstChild;\n        return element;\n    }\n}\nfunction isTextNode(node) {\n    return node.nodeType === 3;\n}\nfunction isComment(node) {\n    return node.nodeType === 8;\n}\nfunction getOpenBoundsDepth(node) {\n    let boundsDepth = node.nodeValue.match(/^%\\+bounds:(\\d+)%$/);\n    if (boundsDepth && boundsDepth[1]) {\n        return Number(boundsDepth[1]);\n    } else {\n        return null;\n    }\n}\nfunction getCloseBoundsDepth(node) {\n    let boundsDepth = node.nodeValue.match(/^%\\-bounds:(\\d+)%$/);\n    if (boundsDepth && boundsDepth[1]) {\n        return Number(boundsDepth[1]);\n    } else {\n        return null;\n    }\n}\nfunction isElement(node) {\n    return node.nodeType === 1;\n}\nfunction isMarker(node) {\n    return node.nodeType === 8 && node.nodeValue === '%glimmer%';\n}\nfunction isSeparator(node) {\n    return node.nodeType === 8 && node.nodeValue === '%sep%';\n}\nfunction isEmpty(node) {\n    return node.nodeType === 8 && node.nodeValue === '%empty%';\n}\nfunction remove(node) {\n    let element = expect(node.parentNode, `cannot remove a detached node`);\n    let next = node.nextSibling;\n    element.removeChild(node);\n    return next;\n}\nfunction findByName(array, name) {\n    for (let i = 0; i < array.length; i++) {\n        let attr = array[i];\n        if (attr.name === name) return attr;\n    }\n    return undefined;\n}\nfunction unimplemented() {\n    return new Error('Not implemented');\n}","import { NewElementBuilder } from \"./element-builder\";\nimport { bounds, currentNode } from '../bounds';\nexport class SerializeBuilder extends NewElementBuilder {\n    constructor() {\n        super(...arguments);\n        this.serializeBlockDepth = 0;\n    }\n    __openBlock() {\n        let depth = this.serializeBlockDepth++;\n        this.__appendComment(`%+block:${depth}%`);\n        super.__openBlock();\n    }\n    __closeBlock() {\n        super.__closeBlock();\n        this.__appendComment(`%-block:${--this.serializeBlockDepth}%`);\n    }\n    __appendHTML(html) {\n        let first = this.__appendComment('%glimmer%');\n        super.__appendHTML(html);\n        let last = this.__appendComment('%glimmer%');\n        return bounds(this.element, first, last);\n    }\n    __appendText(string) {\n        let current = currentNode(this);\n        if (string === '') {\n            return this.__appendComment('%empty%');\n        } else if (current && current.nodeType === Node.TEXT_NODE) {\n            this.__appendComment('%sep%');\n        }\n        return super.__appendText(string);\n    }\n}","export var Opcodes;\n(function (Opcodes) {\n    // Statements\n    Opcodes[Opcodes[\"Text\"] = 0] = \"Text\";\n    Opcodes[Opcodes[\"Append\"] = 1] = \"Append\";\n    Opcodes[Opcodes[\"Comment\"] = 2] = \"Comment\";\n    Opcodes[Opcodes[\"Modifier\"] = 3] = \"Modifier\";\n    Opcodes[Opcodes[\"Block\"] = 4] = \"Block\";\n    Opcodes[Opcodes[\"Component\"] = 5] = \"Component\";\n    Opcodes[Opcodes[\"OpenElement\"] = 6] = \"OpenElement\";\n    Opcodes[Opcodes[\"FlushElement\"] = 7] = \"FlushElement\";\n    Opcodes[Opcodes[\"CloseElement\"] = 8] = \"CloseElement\";\n    Opcodes[Opcodes[\"StaticAttr\"] = 9] = \"StaticAttr\";\n    Opcodes[Opcodes[\"DynamicAttr\"] = 10] = \"DynamicAttr\";\n    Opcodes[Opcodes[\"Yield\"] = 11] = \"Yield\";\n    Opcodes[Opcodes[\"Partial\"] = 12] = \"Partial\";\n    Opcodes[Opcodes[\"DynamicArg\"] = 13] = \"DynamicArg\";\n    Opcodes[Opcodes[\"StaticArg\"] = 14] = \"StaticArg\";\n    Opcodes[Opcodes[\"TrustingAttr\"] = 15] = \"TrustingAttr\";\n    Opcodes[Opcodes[\"Debugger\"] = 16] = \"Debugger\";\n    Opcodes[Opcodes[\"ClientSideStatement\"] = 17] = \"ClientSideStatement\";\n    // Expressions\n    Opcodes[Opcodes[\"Unknown\"] = 18] = \"Unknown\";\n    Opcodes[Opcodes[\"Get\"] = 19] = \"Get\";\n    Opcodes[Opcodes[\"MaybeLocal\"] = 20] = \"MaybeLocal\";\n    Opcodes[Opcodes[\"FixThisBeforeWeMerge\"] = 21] = \"FixThisBeforeWeMerge\";\n    Opcodes[Opcodes[\"HasBlock\"] = 22] = \"HasBlock\";\n    Opcodes[Opcodes[\"HasBlockParams\"] = 23] = \"HasBlockParams\";\n    Opcodes[Opcodes[\"Undefined\"] = 24] = \"Undefined\";\n    Opcodes[Opcodes[\"Helper\"] = 25] = \"Helper\";\n    Opcodes[Opcodes[\"Concat\"] = 26] = \"Concat\";\n    Opcodes[Opcodes[\"ClientSideExpression\"] = 27] = \"ClientSideExpression\";\n})(Opcodes || (Opcodes = {}));","import { Opcodes } from './lib/opcodes';\nexport { Opcodes as Ops } from './lib/opcodes';\nexport function is(variant) {\n    return function (value) {\n        return Array.isArray(value) && value[0] === variant;\n    };\n}\nexport var Expressions;\n(function (Expressions) {\n    Expressions.isUnknown = is(Opcodes.Unknown);\n    Expressions.isGet = is(Opcodes.Get);\n    Expressions.isConcat = is(Opcodes.Concat);\n    Expressions.isHelper = is(Opcodes.Helper);\n    Expressions.isHasBlock = is(Opcodes.HasBlock);\n    Expressions.isHasBlockParams = is(Opcodes.HasBlockParams);\n    Expressions.isUndefined = is(Opcodes.Undefined);\n    Expressions.isClientSide = is(Opcodes.ClientSideExpression);\n    Expressions.isMaybeLocal = is(Opcodes.MaybeLocal);\n    function isPrimitiveValue(value) {\n        if (value === null) {\n            return true;\n        }\n        return typeof value !== 'object';\n    }\n    Expressions.isPrimitiveValue = isPrimitiveValue;\n})(Expressions || (Expressions = {}));\nexport var Statements;\n(function (Statements) {\n    Statements.isText = is(Opcodes.Text);\n    Statements.isAppend = is(Opcodes.Append);\n    Statements.isComment = is(Opcodes.Comment);\n    Statements.isModifier = is(Opcodes.Modifier);\n    Statements.isBlock = is(Opcodes.Block);\n    Statements.isComponent = is(Opcodes.Component);\n    Statements.isOpenElement = is(Opcodes.OpenElement);\n    Statements.isFlushElement = is(Opcodes.FlushElement);\n    Statements.isCloseElement = is(Opcodes.CloseElement);\n    Statements.isStaticAttr = is(Opcodes.StaticAttr);\n    Statements.isDynamicAttr = is(Opcodes.DynamicAttr);\n    Statements.isYield = is(Opcodes.Yield);\n    Statements.isPartial = is(Opcodes.Partial);\n    Statements.isDynamicArg = is(Opcodes.DynamicArg);\n    Statements.isStaticArg = is(Opcodes.StaticArg);\n    Statements.isTrustingAttr = is(Opcodes.TrustingAttr);\n    Statements.isDebugger = is(Opcodes.Debugger);\n    Statements.isClientSide = is(Opcodes.ClientSideStatement);\n    function isAttribute(val) {\n        return val[0] === Opcodes.StaticAttr || val[0] === Opcodes.DynamicAttr || val[0] === Opcodes.TrustingAttr;\n    }\n    Statements.isAttribute = isAttribute;\n    function isArgument(val) {\n        return val[0] === Opcodes.StaticArg || val[0] === Opcodes.DynamicArg;\n    }\n    Statements.isArgument = isArgument;\n    function isParameter(val) {\n        return isAttribute(val) || isArgument(val);\n    }\n    Statements.isParameter = isParameter;\n    function getParameterName(s) {\n        return s[1];\n    }\n    Statements.getParameterName = getParameterName;\n})(Statements || (Statements = {}));","export var Ops;\n(function (Ops) {\n    Ops[Ops[\"OpenComponentElement\"] = 0] = \"OpenComponentElement\";\n    Ops[Ops[\"DidCreateElement\"] = 1] = \"DidCreateElement\";\n    Ops[Ops[\"SetComponentAttrs\"] = 2] = \"SetComponentAttrs\";\n    Ops[Ops[\"DidRenderLayout\"] = 3] = \"DidRenderLayout\";\n    Ops[Ops[\"FunctionExpression\"] = 4] = \"FunctionExpression\";\n    Ops[Ops[\"Debugger\"] = 5] = \"Debugger\";\n})(Ops || (Ops = {}));","export class CompiledStaticTemplate {\n    constructor(handle) {\n        this.handle = handle;\n    }\n}\nexport class CompiledDynamicTemplate {\n    constructor(handle, symbolTable) {\n        this.handle = handle;\n        this.symbolTable = symbolTable;\n    }\n}","import { CompiledDynamicTemplate } from './compiled/blocks';\nimport { Ops } from '@glimmer/wire-format';\nimport { Register, debugSlice } from './opcodes';\nimport { ATTRS_BLOCK, compileStatement } from './syntax/functions';\nimport * as ClientSide from './syntax/client-side';\nimport { expr } from './syntax/functions';\nimport OpcodeBuilderDSL from './compiled/opcodes/builder';\n\nexport function compileLayout(compilable, env) {\n    let builder = new ComponentLayoutBuilder(env);\n    compilable.compile(builder);\n    return builder.compile();\n}\nclass ComponentLayoutBuilder {\n    constructor(env) {\n        this.env = env;\n    }\n    wrapLayout(layout) {\n        this.inner = new WrappedBuilder(this.env, layout);\n    }\n    fromLayout(componentName, layout) {\n        this.inner = new UnwrappedBuilder(this.env, componentName, layout);\n    }\n    compile() {\n        return this.inner.compile();\n    }\n    get tag() {\n        return this.inner.tag;\n    }\n    get attrs() {\n        return this.inner.attrs;\n    }\n}\nclass WrappedBuilder {\n    constructor(env, layout) {\n        this.env = env;\n        this.layout = layout;\n        this.tag = new ComponentTagBuilder();\n        this.attrs = new ComponentAttrsBuilder();\n    }\n    compile() {\n        //========DYNAMIC\n        //        PutValue(TagExpr)\n        //        Test\n        //        JumpUnless(BODY)\n        //        OpenDynamicPrimitiveElement\n        //        DidCreateElement\n        //        ...attr statements...\n        //        FlushElement\n        // BODY:  Noop\n        //        ...body statements...\n        //        PutValue(TagExpr)\n        //        Test\n        //        JumpUnless(END)\n        //        CloseElement\n        // END:   Noop\n        //        DidRenderLayout\n        //        Exit\n        //\n        //========STATIC\n        //        OpenPrimitiveElementOpcode\n        //        DidCreateElement\n        //        ...attr statements...\n        //        FlushElement\n        //        ...body statements...\n        //        CloseElement\n        //        DidRenderLayout\n        //        Exit\n        let { env, layout } = this;\n        let meta = { templateMeta: layout.meta, symbols: layout.symbols, asPartial: false };\n        let dynamicTag = this.tag.getDynamic();\n        let staticTag = this.tag.getStatic();\n        let b = builder(env, meta);\n        b.startLabels();\n        if (dynamicTag) {\n            b.fetch(Register.s1);\n            expr(dynamicTag, b);\n            b.dup();\n            b.load(Register.s1);\n            b.test('simple');\n            b.jumpUnless('BODY');\n            b.fetch(Register.s1);\n            b.putComponentOperations();\n            b.openDynamicElement();\n        } else if (staticTag) {\n            b.putComponentOperations();\n            b.openElementWithOperations(staticTag);\n        }\n        if (dynamicTag || staticTag) {\n            b.didCreateElement(Register.s0);\n            let attrs = this.attrs.buffer;\n            b.setComponentAttrs(true);\n            for (let i = 0; i < attrs.length; i++) {\n                compileStatement(attrs[i], b);\n            }\n            b.setComponentAttrs(false);\n            b.flushElement();\n        }\n        b.label('BODY');\n        b.invokeStatic(layout.asBlock());\n        if (dynamicTag) {\n            b.fetch(Register.s1);\n            b.test('simple');\n            b.jumpUnless('END');\n            b.closeElement();\n        } else if (staticTag) {\n            b.closeElement();\n        }\n        b.label('END');\n        b.didRenderLayout(Register.s0);\n        if (dynamicTag) {\n            b.load(Register.s1);\n        }\n        b.stopLabels();\n        let start = b.start;\n        let end = b.finalize();\n        if (false) {\n            debugSlice(env, env.program.heap.getaddr(start), env.program.heap.getaddr(end));\n        }\n        return new CompiledDynamicTemplate(start, {\n            meta,\n            hasEval: layout.hasEval,\n            symbols: layout.symbols.concat([ATTRS_BLOCK])\n        });\n    }\n}\nclass UnwrappedBuilder {\n    constructor(env, componentName, layout) {\n        this.env = env;\n        this.componentName = componentName;\n        this.layout = layout;\n        this.attrs = new ComponentAttrsBuilder();\n    }\n    get tag() {\n        throw new Error('BUG: Cannot call `tag` on an UnwrappedBuilder');\n    }\n    compile() {\n        let { env, layout } = this;\n        return layout.asLayout(this.componentName, this.attrs.buffer).compileDynamic(env);\n    }\n}\nclass ComponentTagBuilder {\n    constructor() {\n        this.isDynamic = null;\n        this.isStatic = null;\n        this.staticTagName = null;\n        this.dynamicTagName = null;\n    }\n    getDynamic() {\n        if (this.isDynamic) {\n            return this.dynamicTagName;\n        }\n    }\n    getStatic() {\n        if (this.isStatic) {\n            return this.staticTagName;\n        }\n    }\n    static(tagName) {\n        this.isStatic = true;\n        this.staticTagName = tagName;\n    }\n    dynamic(tagName) {\n        this.isDynamic = true;\n        this.dynamicTagName = [Ops.ClientSideExpression, ClientSide.Ops.FunctionExpression, tagName];\n    }\n}\nclass ComponentAttrsBuilder {\n    constructor() {\n        this.buffer = [];\n    }\n    static(name, value) {\n        this.buffer.push([Ops.StaticAttr, name, value, null]);\n    }\n    dynamic(name, value) {\n        this.buffer.push([Ops.DynamicAttr, name, [Ops.ClientSideExpression, ClientSide.Ops.FunctionExpression, value], null]);\n    }\n}\nexport class ComponentBuilder {\n    constructor(builder) {\n        this.builder = builder;\n        this.env = builder.env;\n    }\n    static(definition, args) {\n        let [params, hash, _default, inverse] = args;\n        let { builder } = this;\n        builder.pushComponentManager(definition);\n        builder.invokeComponent(null, params, hash, _default, inverse);\n    }\n    dynamic(definitionArgs, getDefinition, args) {\n        let [params, hash, block, inverse] = args;\n        let { builder } = this;\n        if (!definitionArgs || definitionArgs.length === 0) {\n            throw new Error(\"Dynamic syntax without an argument\");\n        }\n        let meta = this.builder.meta.templateMeta;\n        function helper(vm, a) {\n            return getDefinition(vm, a, meta);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        builder.compileArgs(definitionArgs[0], definitionArgs[1], true);\n        builder.helper(helper);\n        builder.dup();\n        builder.test('simple');\n        builder.enter(2);\n        builder.jumpUnless('ELSE');\n        builder.pushDynamicComponentManager();\n        builder.invokeComponent(null, params, hash, block, inverse);\n        builder.label('ELSE');\n        builder.exit();\n        builder.return();\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    }\n}\nexport function builder(env, meta) {\n    return new OpcodeBuilderDSL(env, meta);\n}","import CompilableTemplate from './compilable-template';\nexport default class RawInlineBlock {\n    constructor(meta, statements, parameters) {\n        this.meta = meta;\n        this.statements = statements;\n        this.parameters = parameters;\n    }\n    scan() {\n        return new CompilableTemplate(this.statements, { parameters: this.parameters, meta: this.meta });\n    }\n}","import { dict, EMPTY_ARRAY, expect, fillNulls, Stack, typePos } from '@glimmer/util';\nimport { ComponentBuilder } from '../../compiler';\nimport { Register } from '../../opcodes';\nimport { expr, InvokeDynamicLayout } from '../../syntax/functions';\nimport RawInlineBlock from '../../syntax/raw-block';\nimport { IsComponentDefinitionReference } from '../opcodes/content';\nimport * as vm from './vm';\nclass Labels {\n    constructor() {\n        this.labels = dict();\n        this.targets = [];\n    }\n    label(name, index) {\n        this.labels[name] = index;\n    }\n    target(at, Target, target) {\n        this.targets.push({ at, Target, target });\n    }\n    patch(program) {\n        let { targets, labels } = this;\n        for (let i = 0; i < targets.length; i++) {\n            let { at, target } = targets[i];\n            let goto = labels[target] - at;\n            program.heap.setbyaddr(at + 1, goto);\n        }\n    }\n}\nexport class BasicOpcodeBuilder {\n    constructor(env, meta, program) {\n        this.env = env;\n        this.meta = meta;\n        this.program = program;\n        this.labelsStack = new Stack();\n        this.isComponentAttrs = false;\n        this.constants = program.constants;\n        this.heap = program.heap;\n        this.start = this.heap.malloc();\n    }\n    get pos() {\n        return typePos(this.heap.size());\n    }\n    get nextPos() {\n        return this.heap.size();\n    }\n    upvars(count) {\n        return fillNulls(count);\n    }\n    reserve(name) {\n        this.push(name, 0, 0, 0);\n    }\n    push(name, op1 = 0, op2 = 0, op3 = 0) {\n        this.heap.push(name);\n        this.heap.push(op1);\n        this.heap.push(op2);\n        this.heap.push(op3);\n    }\n    finalize() {\n        this.push(22 /* Return */);\n        this.heap.finishMalloc(this.start);\n        return this.start;\n    }\n    setComponentAttrs(enabled) {\n        this.isComponentAttrs = enabled;\n    }\n    // args\n    pushArgs(synthetic) {\n        this.push(58 /* PushArgs */, synthetic === true ? 1 : 0);\n    }\n    // helpers\n    get labels() {\n        return expect(this.labelsStack.current, 'bug: not in a label stack');\n    }\n    startLabels() {\n        this.labelsStack.push(new Labels());\n    }\n    stopLabels() {\n        let label = expect(this.labelsStack.pop(), 'unbalanced push and pop labels');\n        label.patch(this.program);\n    }\n    // components\n    pushComponentManager(definition) {\n        this.push(56 /* PushComponentManager */, this.other(definition));\n    }\n    pushDynamicComponentManager() {\n        this.push(57 /* PushDynamicComponentManager */);\n    }\n    prepareArgs(state) {\n        this.push(59 /* PrepareArgs */, state);\n    }\n    createComponent(state, hasDefault, hasInverse) {\n        let flag = (hasDefault === true ? 1 : 0) | (hasInverse === true ? 1 : 0) << 1;\n        this.push(60 /* CreateComponent */, flag, state);\n    }\n    registerComponentDestructor(state) {\n        this.push(61 /* RegisterComponentDestructor */, state);\n    }\n    beginComponentTransaction() {\n        this.push(65 /* BeginComponentTransaction */);\n    }\n    commitComponentTransaction() {\n        this.push(66 /* CommitComponentTransaction */);\n    }\n    putComponentOperations() {\n        this.push(62 /* PutComponentOperations */);\n    }\n    getComponentSelf(state) {\n        this.push(63 /* GetComponentSelf */, state);\n    }\n    getComponentLayout(state) {\n        this.push(64 /* GetComponentLayout */, state);\n    }\n    didCreateElement(state) {\n        this.push(67 /* DidCreateElement */, state);\n    }\n    didRenderLayout(state) {\n        this.push(68 /* DidRenderLayout */, state);\n    }\n    // partial\n    getPartialTemplate() {\n        this.push(69 /* GetPartialTemplate */);\n    }\n    resolveMaybeLocal(name) {\n        this.push(70 /* ResolveMaybeLocal */, this.string(name));\n    }\n    // debugger\n    debugger(symbols, evalInfo) {\n        this.push(71 /* Debugger */, this.constants.other(symbols), this.constants.array(evalInfo));\n    }\n    // content\n    dynamicContent(isTrusting) {\n        this.push(26 /* DynamicContent */, isTrusting ? 1 : 0);\n    }\n    // dom\n    text(text) {\n        this.push(24 /* Text */, this.constants.string(text));\n    }\n    openPrimitiveElement(tag) {\n        this.push(27 /* OpenElement */, this.constants.string(tag));\n    }\n    openElementWithOperations(tag) {\n        this.push(28 /* OpenElementWithOperations */, this.constants.string(tag));\n    }\n    openDynamicElement() {\n        this.push(29 /* OpenDynamicElement */);\n    }\n    flushElement() {\n        this.push(33 /* FlushElement */);\n    }\n    closeElement() {\n        this.push(34 /* CloseElement */);\n    }\n    staticAttr(_name, _namespace, _value) {\n        let name = this.constants.string(_name);\n        let namespace = _namespace ? this.constants.string(_namespace) : 0;\n        if (this.isComponentAttrs) {\n            this.primitive(_value);\n            this.push(32 /* ComponentAttr */, name, 1, namespace);\n        } else {\n            let value = this.constants.string(_value);\n            this.push(30 /* StaticAttr */, name, value, namespace);\n        }\n    }\n    dynamicAttr(_name, _namespace, trusting) {\n        let name = this.constants.string(_name);\n        let namespace = _namespace ? this.constants.string(_namespace) : 0;\n        if (this.isComponentAttrs) {\n            this.push(32 /* ComponentAttr */, name, trusting === true ? 1 : 0, namespace);\n        } else {\n            this.push(31 /* DynamicAttr */, name, trusting === true ? 1 : 0, namespace);\n        }\n    }\n    comment(_comment) {\n        let comment = this.constants.string(_comment);\n        this.push(25 /* Comment */, comment);\n    }\n    modifier(_definition) {\n        this.push(35 /* Modifier */, this.other(_definition));\n    }\n    // lists\n    putIterator() {\n        this.push(54 /* PutIterator */);\n    }\n    enterList(start) {\n        this.reserve(52 /* EnterList */);\n        this.labels.target(this.pos, 52 /* EnterList */, start);\n    }\n    exitList() {\n        this.push(53 /* ExitList */);\n    }\n    iterate(breaks) {\n        this.reserve(55 /* Iterate */);\n        this.labels.target(this.pos, 55 /* Iterate */, breaks);\n    }\n    // expressions\n    setVariable(symbol) {\n        this.push(4 /* SetVariable */, symbol);\n    }\n    getVariable(symbol) {\n        this.push(5 /* GetVariable */, symbol);\n    }\n    getProperty(key) {\n        this.push(6 /* GetProperty */, this.string(key));\n    }\n    getBlock(symbol) {\n        this.push(8 /* GetBlock */, symbol);\n    }\n    hasBlock(symbol) {\n        this.push(9 /* HasBlock */, symbol);\n    }\n    hasBlockParams(symbol) {\n        this.push(10 /* HasBlockParams */, symbol);\n    }\n    concat(size) {\n        this.push(11 /* Concat */, size);\n    }\n    function(f) {\n        this.push(2 /* Function */, this.func(f));\n    }\n    load(register) {\n        this.push(17 /* Load */, register);\n    }\n    fetch(register) {\n        this.push(18 /* Fetch */, register);\n    }\n    dup(register = Register.sp, offset = 0) {\n        return this.push(15 /* Dup */, register, offset);\n    }\n    pop(count = 1) {\n        return this.push(16 /* Pop */, count);\n    }\n    // vm\n    pushRemoteElement() {\n        this.push(36 /* PushRemoteElement */);\n    }\n    popRemoteElement() {\n        this.push(37 /* PopRemoteElement */);\n    }\n    label(name) {\n        this.labels.label(name, this.nextPos);\n    }\n    pushRootScope(symbols, bindCallerScope) {\n        this.push(19 /* RootScope */, symbols, bindCallerScope ? 1 : 0);\n    }\n    pushChildScope() {\n        this.push(20 /* ChildScope */);\n    }\n    popScope() {\n        this.push(21 /* PopScope */);\n    }\n    returnTo(label) {\n        this.reserve(23 /* ReturnTo */);\n        this.labels.target(this.pos, 23 /* ReturnTo */, label);\n    }\n    pushDynamicScope() {\n        this.push(39 /* PushDynamicScope */);\n    }\n    popDynamicScope() {\n        this.push(40 /* PopDynamicScope */);\n    }\n    pushImmediate(value) {\n        this.push(13 /* Constant */, this.other(value));\n    }\n    primitive(_primitive) {\n        let flag = 0;\n        let primitive;\n        switch (typeof _primitive) {\n            case 'number':\n                primitive = _primitive;\n                break;\n            case 'string':\n                primitive = this.string(_primitive);\n                flag = 1;\n                break;\n            case 'boolean':\n                primitive = _primitive | 0;\n                flag = 2;\n                break;\n            case 'object':\n                // assume null\n                primitive = 2;\n                flag = 2;\n                break;\n            case 'undefined':\n                primitive = 3;\n                flag = 2;\n                break;\n            default:\n                throw new Error('Invalid primitive passed to pushPrimitive');\n        }\n        this.push(14 /* PrimitiveReference */, flag << 30 | primitive);\n    }\n    helper(func) {\n        this.push(1 /* Helper */, this.func(func));\n    }\n    pushBlock(block) {\n        this.push(7 /* PushBlock */, this.block(block));\n    }\n    bindDynamicScope(_names) {\n        this.push(38 /* BindDynamicScope */, this.names(_names));\n    }\n    enter(args) {\n        this.push(49 /* Enter */, args);\n    }\n    exit() {\n        this.push(50 /* Exit */);\n    }\n    return() {\n        this.push(22 /* Return */);\n    }\n    pushFrame() {\n        this.push(47 /* PushFrame */);\n    }\n    popFrame() {\n        this.push(48 /* PopFrame */);\n    }\n    compileDynamicBlock() {\n        this.push(41 /* CompileDynamicBlock */);\n    }\n    invokeDynamic(invoker) {\n        this.push(43 /* InvokeDynamic */, this.other(invoker));\n    }\n    invokeStatic(block, callerCount = 0) {\n        let { parameters } = block.symbolTable;\n        let calleeCount = parameters.length;\n        let count = Math.min(callerCount, calleeCount);\n        this.pushFrame();\n        if (count) {\n            this.pushChildScope();\n            for (let i = 0; i < count; i++) {\n                this.dup(Register.fp, callerCount - i);\n                this.setVariable(parameters[i]);\n            }\n        }\n        let _block = this.constants.block(block);\n        this.push(42 /* InvokeStatic */, _block);\n        if (count) {\n            this.popScope();\n        }\n        this.popFrame();\n    }\n    test(testFunc) {\n        let _func;\n        if (testFunc === 'const') {\n            _func = vm.ConstTest;\n        } else if (testFunc === 'simple') {\n            _func = vm.SimpleTest;\n        } else if (testFunc === 'environment') {\n            _func = vm.EnvironmentTest;\n        } else if (typeof testFunc === 'function') {\n            _func = testFunc;\n        } else {\n            throw new Error('unreachable');\n        }\n        let func = this.constants.function(_func);\n        this.push(51 /* Test */, func);\n    }\n    jump(target) {\n        this.reserve(44 /* Jump */);\n        this.labels.target(this.pos, 44 /* Jump */, target);\n    }\n    jumpIf(target) {\n        this.reserve(45 /* JumpIf */);\n        this.labels.target(this.pos, 45 /* JumpIf */, target);\n    }\n    jumpUnless(target) {\n        this.reserve(46 /* JumpUnless */);\n        this.labels.target(this.pos, 46 /* JumpUnless */, target);\n    }\n    string(_string) {\n        return this.constants.string(_string);\n    }\n    names(_names) {\n        let names = [];\n        for (let i = 0; i < _names.length; i++) {\n            let n = _names[i];\n            names[i] = this.constants.string(n);\n        }\n        return this.constants.array(names);\n    }\n    symbols(symbols) {\n        return this.constants.array(symbols);\n    }\n    other(value) {\n        return this.constants.other(value);\n    }\n    block(block) {\n        return block ? this.constants.block(block) : 0;\n    }\n    func(func) {\n        return this.constants.function(func);\n    }\n}\nfunction isCompilableExpression(expr) {\n    return typeof expr === 'object' && expr !== null && typeof expr.compile === 'function';\n}\nexport default class OpcodeBuilder extends BasicOpcodeBuilder {\n    constructor(env, meta, program = env.program) {\n        super(env, meta, program);\n        this.component = new ComponentBuilder(this);\n    }\n    compileArgs(params, hash, synthetic) {\n        let positional = 0;\n        if (params) {\n            for (let i = 0; i < params.length; i++) {\n                expr(params[i], this);\n            }\n            positional = params.length;\n        }\n        this.pushImmediate(positional);\n        let names = EMPTY_ARRAY;\n        if (hash) {\n            names = hash[0];\n            let val = hash[1];\n            for (let i = 0; i < val.length; i++) {\n                expr(val[i], this);\n            }\n        }\n        this.pushImmediate(names);\n        this.pushArgs(synthetic);\n    }\n    compile(expr) {\n        if (isCompilableExpression(expr)) {\n            return expr.compile(this);\n        } else {\n            return expr;\n        }\n    }\n    guardedAppend(expression, trusting) {\n        this.startLabels();\n        this.pushFrame();\n        this.returnTo('END');\n        expr(expression, this);\n        this.dup();\n        this.test(reference => {\n            return IsComponentDefinitionReference.create(reference);\n        });\n        this.enter(2);\n        this.jumpUnless('ELSE');\n        this.pushDynamicComponentManager();\n        this.invokeComponent(null, null, null, null, null);\n        this.exit();\n        this.return();\n        this.label('ELSE');\n        this.dynamicContent(trusting);\n        this.exit();\n        this.return();\n        this.label('END');\n        this.popFrame();\n        this.stopLabels();\n    }\n    invokeComponent(attrs, params, hash, block, inverse = null) {\n        this.fetch(Register.s0);\n        this.dup(Register.sp, 1);\n        this.load(Register.s0);\n        this.pushBlock(block);\n        this.pushBlock(inverse);\n        this.compileArgs(params, hash, false);\n        this.prepareArgs(Register.s0);\n        this.beginComponentTransaction();\n        this.pushDynamicScope();\n        this.createComponent(Register.s0, block !== null, inverse !== null);\n        this.registerComponentDestructor(Register.s0);\n        this.getComponentSelf(Register.s0);\n        this.getComponentLayout(Register.s0);\n        this.invokeDynamic(new InvokeDynamicLayout(attrs && attrs.scan()));\n        this.popFrame();\n        this.popScope();\n        this.popDynamicScope();\n        this.commitComponentTransaction();\n        this.load(Register.s0);\n    }\n    template(block) {\n        if (!block) return null;\n        return new RawInlineBlock(this.meta, block.statements, block.parameters);\n    }\n}","import { map } from '@glimmer/reference';\nimport { assert, dict, EMPTY_ARRAY, unwrap } from '@glimmer/util';\nimport * as WireFormat from '@glimmer/wire-format';\nimport OpcodeBuilder from '../compiled/opcodes/builder';\nimport { Register } from '../opcodes';\nimport * as ClientSide from '../syntax/client-side';\nimport RawInlineBlock from './raw-block';\nvar Ops = WireFormat.Ops;\nexport const ATTRS_BLOCK = '&attrs';\nclass Compilers {\n    constructor(offset = 0) {\n        this.offset = offset;\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    compile(sexp, builder) {\n        let name = sexp[this.offset];\n        let index = this.names[name];\n        let func = this.funcs[index];\n        assert(!!func, `expected an implementation for ${this.offset === 0 ? Ops[sexp[0]] : ClientSide.Ops[sexp[1]]}`);\n        func(sexp, builder);\n    }\n}\nconst STATEMENTS = new Compilers();\nconst CLIENT_SIDE = new Compilers(1);\nSTATEMENTS.add(Ops.Text, (sexp, builder) => {\n    builder.text(sexp[1]);\n});\nSTATEMENTS.add(Ops.Comment, (sexp, builder) => {\n    builder.comment(sexp[1]);\n});\nSTATEMENTS.add(Ops.CloseElement, (_sexp, builder) => {\n    builder.closeElement();\n});\nSTATEMENTS.add(Ops.FlushElement, (_sexp, builder) => {\n    builder.flushElement();\n});\nSTATEMENTS.add(Ops.Modifier, (sexp, builder) => {\n    let { env, meta } = builder;\n    let [, name, params, hash] = sexp;\n    if (env.hasModifier(name, meta.templateMeta)) {\n        builder.compileArgs(params, hash, true);\n        builder.modifier(env.lookupModifier(name, meta.templateMeta));\n    } else {\n        throw new Error(`Compile Error ${name} is not a modifier: Helpers may not be used in the element form.`);\n    }\n});\nSTATEMENTS.add(Ops.StaticAttr, (sexp, builder) => {\n    let [, name, value, namespace] = sexp;\n    builder.staticAttr(name, namespace, value);\n});\nSTATEMENTS.add(Ops.DynamicAttr, (sexp, builder) => {\n    dynamicAttr(sexp, false, builder);\n});\nSTATEMENTS.add(Ops.TrustingAttr, (sexp, builder) => {\n    dynamicAttr(sexp, true, builder);\n});\nfunction dynamicAttr(sexp, trusting, builder) {\n    let [, name, value, namespace] = sexp;\n    expr(value, builder);\n    if (namespace) {\n        builder.dynamicAttr(name, namespace, trusting);\n    } else {\n        builder.dynamicAttr(name, null, trusting);\n    }\n}\nSTATEMENTS.add(Ops.OpenElement, (sexp, builder) => {\n    builder.openPrimitiveElement(sexp[1]);\n});\nCLIENT_SIDE.add(ClientSide.Ops.OpenComponentElement, (sexp, builder) => {\n    builder.putComponentOperations();\n    builder.openElementWithOperations(sexp[2]);\n});\nCLIENT_SIDE.add(ClientSide.Ops.DidCreateElement, (_sexp, builder) => {\n    builder.didCreateElement(Register.s0);\n});\nCLIENT_SIDE.add(ClientSide.Ops.SetComponentAttrs, (sexp, builder) => {\n    builder.setComponentAttrs(sexp[2]);\n});\nCLIENT_SIDE.add(ClientSide.Ops.Debugger, () => {\n    // tslint:disable-next-line:no-debugger\n    debugger;\n});\nCLIENT_SIDE.add(ClientSide.Ops.DidRenderLayout, (_sexp, builder) => {\n    builder.didRenderLayout(Register.s0);\n});\nSTATEMENTS.add(Ops.Append, (sexp, builder) => {\n    let [, value, trusting] = sexp;\n    let { inlines } = builder.env.macros();\n    let returned = inlines.compile(sexp, builder) || value;\n    if (returned === true) return;\n    let isGet = E.isGet(value);\n    let isMaybeLocal = E.isMaybeLocal(value);\n    if (trusting) {\n        builder.guardedAppend(value, true);\n    } else {\n        if (isGet || isMaybeLocal) {\n            builder.guardedAppend(value, false);\n        } else {\n            expr(value, builder);\n            builder.dynamicContent(false);\n        }\n    }\n});\nSTATEMENTS.add(Ops.Block, (sexp, builder) => {\n    let [, name, params, hash, _template, _inverse] = sexp;\n    let template = builder.template(_template);\n    let inverse = builder.template(_inverse);\n    let templateBlock = template && template.scan();\n    let inverseBlock = inverse && inverse.scan();\n    let { blocks } = builder.env.macros();\n    blocks.compile(name, params, hash, templateBlock, inverseBlock, builder);\n});\nexport class InvokeDynamicLayout {\n    constructor(attrs) {\n        this.attrs = attrs;\n    }\n    invoke(vm, layout) {\n        let { symbols, hasEval } = layout.symbolTable;\n        let stack = vm.stack;\n        let scope = vm.pushRootScope(symbols.length + 1, true);\n        scope.bindSelf(stack.pop());\n        scope.bindBlock(symbols.indexOf(ATTRS_BLOCK) + 1, this.attrs);\n        let lookup = null;\n        let $eval = -1;\n        if (hasEval) {\n            $eval = symbols.indexOf('$eval') + 1;\n            lookup = dict();\n        }\n        let callerNames = stack.pop();\n        for (let i = callerNames.length - 1; i >= 0; i--) {\n            let symbol = symbols.indexOf(callerNames[i]);\n            let value = stack.pop();\n            if (symbol !== -1) scope.bindSymbol(symbol + 1, value);\n            if (hasEval) lookup[callerNames[i]] = value;\n        }\n        let numPositionalArgs = stack.pop();\n        assert(typeof numPositionalArgs === 'number', '[BUG] Incorrect value of positional argument count found during invoke-dynamic-layout.');\n        // Currently we don't support accessing positional args in templates, so just throw them away\n        stack.pop(numPositionalArgs);\n        let inverseSymbol = symbols.indexOf('&inverse');\n        let inverse = stack.pop();\n        if (inverseSymbol !== -1) {\n            scope.bindBlock(inverseSymbol + 1, inverse);\n        }\n        if (lookup) lookup['&inverse'] = inverse;\n        let defaultSymbol = symbols.indexOf('&default');\n        let defaultBlock = stack.pop();\n        if (defaultSymbol !== -1) {\n            scope.bindBlock(defaultSymbol + 1, defaultBlock);\n        }\n        if (lookup) lookup['&default'] = defaultBlock;\n        if (lookup) scope.bindEvalScope(lookup);\n        vm.pushFrame();\n        vm.call(layout.handle);\n    }\n    toJSON() {\n        return { GlimmerDebug: '<invoke-dynamic-layout>' };\n    }\n}\nSTATEMENTS.add(Ops.Component, (sexp, builder) => {\n    let [, tag, _attrs, args, block] = sexp;\n    if (builder.env.hasComponentDefinition(tag, builder.meta.templateMeta)) {\n        let child = builder.template(block);\n        let attrs = [[Ops.ClientSideStatement, ClientSide.Ops.SetComponentAttrs, true], ..._attrs, [Ops.ClientSideStatement, ClientSide.Ops.SetComponentAttrs, false]];\n        let attrsBlock = new RawInlineBlock(builder.meta, attrs, EMPTY_ARRAY);\n        let definition = builder.env.getComponentDefinition(tag, builder.meta.templateMeta);\n        builder.pushComponentManager(definition);\n        builder.invokeComponent(attrsBlock, null, args, child && child.scan());\n    } else if (block && block.parameters.length) {\n        throw new Error(`Compile Error: Cannot find component ${tag}`);\n    } else {\n        builder.openPrimitiveElement(tag);\n        for (let i = 0; i < _attrs.length; i++) {\n            STATEMENTS.compile(_attrs[i], builder);\n        }\n        builder.flushElement();\n        if (block) {\n            let stmts = block.statements;\n            for (let i = 0; i < stmts.length; i++) {\n                STATEMENTS.compile(stmts[i], builder);\n            }\n        }\n        builder.closeElement();\n    }\n});\nexport class PartialInvoker {\n    constructor(outerSymbols, evalInfo) {\n        this.outerSymbols = outerSymbols;\n        this.evalInfo = evalInfo;\n    }\n    invoke(vm, _partial) {\n        let partial = unwrap(_partial);\n        let partialSymbols = partial.symbolTable.symbols;\n        let outerScope = vm.scope();\n        let partialScope = vm.pushRootScope(partialSymbols.length, false);\n        partialScope.bindCallerScope(outerScope.getCallerScope());\n        partialScope.bindEvalScope(outerScope.getEvalScope());\n        partialScope.bindSelf(outerScope.getSelf());\n        let { evalInfo, outerSymbols } = this;\n        let locals = dict();\n        for (let i = 0; i < evalInfo.length; i++) {\n            let slot = evalInfo[i];\n            let name = outerSymbols[slot - 1];\n            let ref = outerScope.getSymbol(slot);\n            locals[name] = ref;\n        }\n        let evalScope = outerScope.getEvalScope();\n        for (let i = 0; i < partialSymbols.length; i++) {\n            let name = partialSymbols[i];\n            let symbol = i + 1;\n            let value = evalScope[name];\n            if (value !== undefined) partialScope.bind(symbol, value);\n        }\n        partialScope.bindPartialMap(locals);\n        vm.pushFrame();\n        vm.call(partial.handle);\n    }\n}\nSTATEMENTS.add(Ops.Partial, (sexp, builder) => {\n    let [, name, evalInfo] = sexp;\n    let { templateMeta, symbols } = builder.meta;\n    function helper(vm, args) {\n        let { env } = vm;\n        let nameRef = args.positional.at(0);\n        return map(nameRef, n => {\n            if (typeof n === 'string' && n) {\n                if (!env.hasPartial(n, templateMeta)) {\n                    throw new Error(`Could not find a partial named \"${n}\"`);\n                }\n                return env.lookupPartial(n, templateMeta);\n            } else if (n) {\n                throw new Error(`Could not find a partial named \"${String(n)}\"`);\n            } else {\n                return null;\n            }\n        });\n    }\n    builder.startLabels();\n    builder.pushFrame();\n    builder.returnTo('END');\n    expr(name, builder);\n    builder.pushImmediate(1);\n    builder.pushImmediate(EMPTY_ARRAY);\n    builder.pushArgs(true);\n    builder.helper(helper);\n    builder.dup();\n    builder.test('simple');\n    builder.enter(2);\n    builder.jumpUnless('ELSE');\n    builder.getPartialTemplate();\n    builder.compileDynamicBlock();\n    builder.invokeDynamic(new PartialInvoker(symbols, evalInfo));\n    builder.popScope();\n    builder.popFrame();\n    builder.label('ELSE');\n    builder.exit();\n    builder.return();\n    builder.label('END');\n    builder.popFrame();\n    builder.stopLabels();\n});\nclass InvokeDynamicYield {\n    constructor(callerCount) {\n        this.callerCount = callerCount;\n    }\n    invoke(vm, block) {\n        let { callerCount } = this;\n        let stack = vm.stack;\n        if (!block) {\n            // To balance the pop{Frame,Scope}\n            vm.pushFrame();\n            vm.pushCallerScope();\n            return;\n        }\n        let table = block.symbolTable;\n        let locals = table.parameters; // always present in inline blocks\n        let calleeCount = locals ? locals.length : 0;\n        let count = Math.min(callerCount, calleeCount);\n        vm.pushFrame();\n        vm.pushCallerScope(calleeCount > 0);\n        let scope = vm.scope();\n        for (let i = 0; i < count; i++) {\n            scope.bindSymbol(locals[i], stack.fromBase(callerCount - i));\n        }\n        vm.call(block.handle);\n    }\n    toJSON() {\n        return { GlimmerDebug: `<invoke-dynamic-yield caller-count=${this.callerCount}>` };\n    }\n}\nSTATEMENTS.add(Ops.Yield, (sexp, builder) => {\n    let [, to, params] = sexp;\n    let count = compileList(params, builder);\n    builder.getBlock(to);\n    builder.compileDynamicBlock();\n    builder.invokeDynamic(new InvokeDynamicYield(count));\n    builder.popScope();\n    builder.popFrame();\n    if (count) {\n        builder.pop(count);\n    }\n});\nSTATEMENTS.add(Ops.Debugger, (sexp, builder) => {\n    let [, evalInfo] = sexp;\n    builder.debugger(builder.meta.symbols, evalInfo);\n});\nSTATEMENTS.add(Ops.ClientSideStatement, (sexp, builder) => {\n    CLIENT_SIDE.compile(sexp, builder);\n});\nconst EXPRESSIONS = new Compilers();\nconst CLIENT_SIDE_EXPRS = new Compilers(1);\nvar E = WireFormat.Expressions;\nexport function expr(expression, builder) {\n    if (Array.isArray(expression)) {\n        EXPRESSIONS.compile(expression, builder);\n    } else {\n        builder.primitive(expression);\n    }\n}\nEXPRESSIONS.add(Ops.Unknown, (sexp, builder) => {\n    let name = sexp[1];\n    if (builder.env.hasHelper(name, builder.meta.templateMeta)) {\n        EXPRESSIONS.compile([Ops.Helper, name, EMPTY_ARRAY, null], builder);\n    } else if (builder.meta.asPartial) {\n        builder.resolveMaybeLocal(name);\n    } else {\n        builder.getVariable(0);\n        builder.getProperty(name);\n    }\n});\nEXPRESSIONS.add(Ops.Concat, (sexp, builder) => {\n    let parts = sexp[1];\n    for (let i = 0; i < parts.length; i++) {\n        expr(parts[i], builder);\n    }\n    builder.concat(parts.length);\n});\nCLIENT_SIDE_EXPRS.add(ClientSide.Ops.FunctionExpression, (sexp, builder) => {\n    builder.function(sexp[2]);\n});\nEXPRESSIONS.add(Ops.Helper, (sexp, builder) => {\n    let { env, meta } = builder;\n    let [, name, params, hash] = sexp;\n    if (env.hasHelper(name, meta.templateMeta)) {\n        builder.compileArgs(params, hash, true);\n        builder.helper(env.lookupHelper(name, meta.templateMeta));\n    } else {\n        throw new Error(`Compile Error: ${name} is not a helper`);\n    }\n});\nEXPRESSIONS.add(Ops.Get, (sexp, builder) => {\n    let [, head, path] = sexp;\n    builder.getVariable(head);\n    for (let i = 0; i < path.length; i++) {\n        builder.getProperty(path[i]);\n    }\n});\nEXPRESSIONS.add(Ops.MaybeLocal, (sexp, builder) => {\n    let [, path] = sexp;\n    if (builder.meta.asPartial) {\n        let head = path[0];\n        path = path.slice(1);\n        builder.resolveMaybeLocal(head);\n    } else {\n        builder.getVariable(0);\n    }\n    for (let i = 0; i < path.length; i++) {\n        builder.getProperty(path[i]);\n    }\n});\nEXPRESSIONS.add(Ops.Undefined, (_sexp, builder) => {\n    return builder.primitive(undefined);\n});\nEXPRESSIONS.add(Ops.HasBlock, (sexp, builder) => {\n    builder.hasBlock(sexp[1]);\n});\nEXPRESSIONS.add(Ops.HasBlockParams, (sexp, builder) => {\n    builder.hasBlockParams(sexp[1]);\n});\nEXPRESSIONS.add(Ops.ClientSideExpression, (sexp, builder) => {\n    CLIENT_SIDE_EXPRS.compile(sexp, builder);\n});\nexport function compileList(params, builder) {\n    if (!params) return 0;\n    for (let i = 0; i < params.length; i++) {\n        expr(params[i], builder);\n    }\n    return params.length;\n}\nexport class Blocks {\n    constructor() {\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    addMissing(func) {\n        this.missing = func;\n    }\n    compile(name, params, hash, template, inverse, builder) {\n        let index = this.names[name];\n        if (index === undefined) {\n            assert(!!this.missing, `${name} not found, and no catch-all block handler was registered`);\n            let func = this.missing;\n            let handled = func(name, params, hash, template, inverse, builder);\n            assert(!!handled, `${name} not found, and the catch-all block handler didn't handle it`);\n        } else {\n            let func = this.funcs[index];\n            func(params, hash, template, inverse, builder);\n        }\n    }\n}\nexport const BLOCKS = new Blocks();\nexport class Inlines {\n    constructor() {\n        this.names = dict();\n        this.funcs = [];\n    }\n    add(name, func) {\n        this.funcs.push(func);\n        this.names[name] = this.funcs.length - 1;\n    }\n    addMissing(func) {\n        this.missing = func;\n    }\n    compile(sexp, builder) {\n        let value = sexp[1];\n        // TODO: Fix this so that expression macros can return\n        // things like components, so that {{component foo}}\n        // is the same as {{(component foo)}}\n        if (!Array.isArray(value)) return ['expr', value];\n        let name;\n        let params;\n        let hash;\n        if (value[0] === Ops.Helper) {\n            name = value[1];\n            params = value[2];\n            hash = value[3];\n        } else if (value[0] === Ops.Unknown) {\n            name = value[1];\n            params = hash = null;\n        } else {\n            return ['expr', value];\n        }\n        let index = this.names[name];\n        if (index === undefined && this.missing) {\n            let func = this.missing;\n            let returned = func(name, params, hash, builder);\n            return returned === false ? ['expr', value] : returned;\n        } else if (index !== undefined) {\n            let func = this.funcs[index];\n            let returned = func(name, params, hash, builder);\n            return returned === false ? ['expr', value] : returned;\n        } else {\n            return ['expr', value];\n        }\n    }\n}\nexport const INLINES = new Inlines();\npopulateBuiltins(BLOCKS, INLINES);\nexport function populateBuiltins(blocks = new Blocks(), inlines = new Inlines()) {\n    blocks.add('if', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #if requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.test('environment');\n        builder.enter(1);\n        builder.jumpUnless('ELSE');\n        builder.invokeStatic(unwrap(template));\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('unless', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #unless requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.test('environment');\n        builder.enter(1);\n        builder.jumpIf('ELSE');\n        builder.invokeStatic(unwrap(template));\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('with', (params, _hash, template, inverse, builder) => {\n        //        PutArgs\n        //        Test(Environment)\n        //        Enter(BEGIN, END)\n        // BEGIN: Noop\n        //        JumpUnless(ELSE)\n        //        Evaluate(default)\n        //        Jump(END)\n        // ELSE:  Noop\n        //        Evalulate(inverse)\n        // END:   Noop\n        //        Exit\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #with requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        expr(params[0], builder);\n        builder.dup();\n        builder.test('environment');\n        builder.enter(2);\n        builder.jumpUnless('ELSE');\n        builder.invokeStatic(unwrap(template), 1);\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('each', (params, hash, template, inverse, builder) => {\n        //         Enter(BEGIN, END)\n        // BEGIN:  Noop\n        //         PutArgs\n        //         PutIterable\n        //         JumpUnless(ELSE)\n        //         EnterList(BEGIN2, END2)\n        // ITER:   Noop\n        //         NextIter(BREAK)\n        // BEGIN2: Noop\n        //         PushChildScope\n        //         Evaluate(default)\n        //         PopScope\n        // END2:   Noop\n        //         Exit\n        //         Jump(ITER)\n        // BREAK:  Noop\n        //         ExitList\n        //         Jump(END)\n        // ELSE:   Noop\n        //         Evalulate(inverse)\n        // END:    Noop\n        //         Exit\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        if (hash && hash[0][0] === 'key') {\n            expr(hash[1][0], builder);\n        } else {\n            builder.primitive(null);\n        }\n        expr(params[0], builder);\n        builder.enter(2);\n        builder.putIterator();\n        builder.jumpUnless('ELSE');\n        builder.pushFrame();\n        builder.returnTo('ITER');\n        builder.dup(Register.fp, 1);\n        builder.enterList('BODY');\n        builder.label('ITER');\n        builder.iterate('BREAK');\n        builder.label('BODY');\n        builder.invokeStatic(unwrap(template), 2);\n        builder.pop(2);\n        builder.exit();\n        builder.return();\n        builder.label('BREAK');\n        builder.exitList();\n        builder.popFrame();\n        if (inverse) {\n            builder.jump('EXIT');\n            builder.label('ELSE');\n            builder.invokeStatic(inverse);\n            builder.label('EXIT');\n            builder.exit();\n            builder.return();\n        } else {\n            builder.label('ELSE');\n            builder.exit();\n            builder.return();\n        }\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('-in-element', (params, hash, template, _inverse, builder) => {\n        if (!params || params.length !== 1) {\n            throw new Error(`SYNTAX ERROR: #-in-element requires a single argument`);\n        }\n        builder.startLabels();\n        builder.pushFrame();\n        builder.returnTo('END');\n        if (hash && hash[0].length) {\n            let [keys, values] = hash;\n            if (keys.length === 1 && keys[0] === 'nextSibling') {\n                expr(values[0], builder);\n            } else {\n                throw new Error(`SYNTAX ERROR: #-in-element does not take a \\`${keys[0]}\\` option`);\n            }\n        } else {\n            expr(null, builder);\n        }\n        expr(params[0], builder);\n        builder.dup();\n        builder.test('simple');\n        builder.enter(3);\n        builder.jumpUnless('ELSE');\n        builder.pushRemoteElement();\n        builder.invokeStatic(unwrap(template));\n        builder.popRemoteElement();\n        builder.label('ELSE');\n        builder.exit();\n        builder.return();\n        builder.label('END');\n        builder.popFrame();\n        builder.stopLabels();\n    });\n    blocks.add('-with-dynamic-vars', (_params, hash, template, _inverse, builder) => {\n        if (hash) {\n            let [names, expressions] = hash;\n            compileList(expressions, builder);\n            builder.pushDynamicScope();\n            builder.bindDynamicScope(names);\n            builder.invokeStatic(unwrap(template));\n            builder.popDynamicScope();\n        } else {\n            builder.invokeStatic(unwrap(template));\n        }\n    });\n    return { blocks, inlines };\n}\nexport function compileStatement(statement, builder) {\n    STATEMENTS.compile(statement, builder);\n}\nexport function compileStatements(statements, meta, env) {\n    let b = new OpcodeBuilder(env, meta);\n    for (let i = 0; i < statements.length; i++) {\n        compileStatement(statements[i], b);\n    }\n    return b;\n}","import { CompiledDynamicTemplate, CompiledStaticTemplate } from '../compiled/blocks';\nimport { debugSlice } from '../opcodes';\nimport { compileStatements } from './functions';\n\nexport default class CompilableTemplate {\n    constructor(statements, symbolTable) {\n        this.statements = statements;\n        this.symbolTable = symbolTable;\n        this.compiledStatic = null;\n        this.compiledDynamic = null;\n    }\n    compileStatic(env) {\n        let { compiledStatic } = this;\n        if (!compiledStatic) {\n            let builder = compileStatements(this.statements, this.symbolTable.meta, env);\n            builder.finalize();\n            let handle = builder.start;\n            if (false) {\n                let start = env.program.heap.size() - env.program.heap.sizeof(handle);\n                let end = start + env.program.heap.sizeof(handle);\n                debugSlice(env, start, end);\n            }\n            compiledStatic = this.compiledStatic = new CompiledStaticTemplate(handle);\n        }\n        return compiledStatic;\n    }\n    compileDynamic(env) {\n        let { compiledDynamic } = this;\n        if (!compiledDynamic) {\n            let staticBlock = this.compileStatic(env);\n            compiledDynamic = new CompiledDynamicTemplate(staticBlock.handle, this.symbolTable);\n        }\n        return compiledDynamic;\n    }\n}","import { EMPTY_ARRAY, assert, unreachable } from '@glimmer/util';\nimport * as WireFormat from '@glimmer/wire-format';\nimport * as ClientSide from './syntax/client-side';\nimport CompilableTemplate from './syntax/compilable-template';\nimport { ATTRS_BLOCK } from './syntax/functions';\nvar Ops = WireFormat.Ops;\nexport default class Scanner {\n    constructor(block, env) {\n        this.block = block;\n        this.env = env;\n    }\n    scanEntryPoint(meta) {\n        let { block } = this;\n        let { statements, symbols, hasEval } = block;\n        return new CompilableTemplate(statements, { meta, symbols, hasEval });\n    }\n    scanBlock(meta) {\n        let { block } = this;\n        let { statements } = block;\n        return new CompilableTemplate(statements, { meta, parameters: EMPTY_ARRAY });\n    }\n    scanLayout(meta, attrs, componentName) {\n        let { block } = this;\n        let { symbols, hasEval } = block;\n        let scanner = new LayoutScanner(block, this.env, meta, attrs, componentName);\n        return new CompilableTemplate(scanner.scan(), { meta, hasEval, symbols });\n    }\n}\nclass LayoutScanner {\n    constructor(block, env, meta, attrs, componentName) {\n        this.env = env;\n        this.attrs = attrs;\n        this.componentName = componentName;\n        this.state = 0 /* BeforeTopLevel */;\n        let { statements, symbols } = block;\n        this.statements = statements;\n        this.symbols = symbols;\n        this.meta = meta.templateMeta;\n    }\n    scan() {\n        let { statements } = this;\n        this.state = 0 /* BeforeTopLevel */;\n        let buffer = [];\n        for (let i = 0; i < statements.length; i++) {\n            this.processStatement(this.statements[i], buffer);\n        }\n        buffer.push([Ops.ClientSideStatement, ClientSide.Ops.DidRenderLayout]);\n        return buffer;\n    }\n    processStatement(statement, buffer) {\n        switch (this.state) {\n            case 0 /* BeforeTopLevel */:\n                this.processBeforeTopLevel(statement, buffer);\n                break;\n            case 1 /* InTopLevel */:\n                this.processInTopLevel(statement, buffer);\n                break;\n            case 2 /* AfterFlush */:\n                buffer.push(statement);\n                break;\n            default:\n                throw unreachable();\n        }\n    }\n    processBeforeTopLevel(statement, buffer) {\n        if (WireFormat.Statements.isComponent(statement)) {\n            this.processTopLevelComponent(statement, buffer);\n        } else if (WireFormat.Statements.isOpenElement(statement)) {\n            this.processIsOpenElement(statement, buffer);\n        } else {\n            // Should be whitespace\n            buffer.push(statement);\n        }\n    }\n    processTopLevelComponent(statement, buffer) {\n        let [, tagName, attrs,, block] = statement;\n        if (this.env.hasComponentDefinition(tagName, this.meta) && tagName !== this.componentName) {\n            buffer.push(statement);\n            this.state = 2 /* AfterFlush */;\n            return;\n        }\n        assert(!this.env.hasComponentDefinition(tagName, this.meta) || tagName === this.componentName, `Cannot use a component (<${tagName}>) as the top-level element in the layout of <${this.componentName}>`);\n        this.state = 1 /* InTopLevel */;\n        buffer.push([Ops.ClientSideStatement, ClientSide.Ops.SetComponentAttrs, true]);\n        buffer.push([Ops.ClientSideStatement, ClientSide.Ops.OpenComponentElement, tagName]);\n        buffer.push([Ops.ClientSideStatement, ClientSide.Ops.DidCreateElement]);\n        for (let i = 0; i < attrs.length; i++) {\n            this.processStatement(attrs[i], buffer);\n        }\n        this.processStatement([Ops.FlushElement], buffer);\n        if (block) {\n            let { statements } = block;\n            for (let i = 0; i < statements.length; i++) {\n                this.processStatement(statements[i], buffer);\n            }\n        }\n        this.processStatement([Ops.CloseElement], buffer);\n    }\n    processIsOpenElement(statement, buffer) {\n        let [, tagName] = statement;\n        this.state = 1 /* InTopLevel */;\n        buffer.push([Ops.ClientSideStatement, ClientSide.Ops.SetComponentAttrs, true]);\n        buffer.push([Ops.ClientSideStatement, ClientSide.Ops.OpenComponentElement, tagName]);\n        buffer.push([Ops.ClientSideStatement, ClientSide.Ops.DidCreateElement]);\n    }\n    processInTopLevel(statement, buffer) {\n        assert(!WireFormat.Statements.isModifier(statement), `Cannot use element modifiers ({{${statement[1]} ...}}) in the top-level element in the layout of <${this.componentName}>`);\n        if (WireFormat.Statements.isFlushElement(statement)) {\n            let { symbols, attrs } = this;\n            this.state = 2 /* AfterFlush */;\n            let attrsSymbol = symbols.push(ATTRS_BLOCK);\n            buffer.push(...attrs);\n            buffer.push([Ops.Yield, attrsSymbol, EMPTY_ARRAY]);\n            buffer.push([Ops.ClientSideStatement, ClientSide.Ops.SetComponentAttrs, false]);\n        }\n        buffer.push(statement);\n    }\n}","export class Constants {\n    constructor() {\n        // `0` means NULL\n        this.references = [];\n        this.strings = [];\n        this.expressions = [];\n        this.arrays = [];\n        this.blocks = [];\n        this.functions = [];\n        this.others = [];\n    }\n    getReference(value) {\n        return this.references[value - 1];\n    }\n    reference(value) {\n        let index = this.references.length;\n        this.references.push(value);\n        return index + 1;\n    }\n    getString(value) {\n        return this.strings[value - 1];\n    }\n    string(value) {\n        let index = this.strings.length;\n        this.strings.push(value);\n        return index + 1;\n    }\n    getExpression(value) {\n        return this.expressions[value - 1];\n    }\n    getArray(value) {\n        return this.arrays[value - 1];\n    }\n    getNames(value) {\n        let _names = [];\n        let names = this.getArray(value);\n        for (let i = 0; i < names.length; i++) {\n            let n = names[i];\n            _names[i] = this.getString(n);\n        }\n        return _names;\n    }\n    array(values) {\n        let index = this.arrays.length;\n        this.arrays.push(values);\n        return index + 1;\n    }\n    getBlock(value) {\n        return this.blocks[value - 1];\n    }\n    block(block) {\n        let index = this.blocks.length;\n        this.blocks.push(block);\n        return index + 1;\n    }\n    getFunction(value) {\n        return this.functions[value - 1];\n    }\n    function(f) {\n        let index = this.functions.length;\n        this.functions.push(f);\n        return index + 1;\n    }\n    getOther(value) {\n        return this.others[value - 1];\n    }\n    other(other) {\n        let index = this.others.length;\n        this.others.push(other);\n        return index + 1;\n    }\n}","import { normalizeStringValue, isSafeString } from '../dom/normalize';\nconst badProtocols = ['javascript:', 'vbscript:'];\nconst badTags = ['A', 'BODY', 'LINK', 'IMG', 'IFRAME', 'BASE', 'FORM'];\nconst badTagsForDataURI = ['EMBED'];\nconst badAttributes = ['href', 'src', 'background', 'action'];\nconst badAttributesForDataURI = ['src'];\nfunction has(array, item) {\n    return array.indexOf(item) !== -1;\n}\nfunction checkURI(tagName, attribute) {\n    return (tagName === null || has(badTags, tagName)) && has(badAttributes, attribute);\n}\nfunction checkDataURI(tagName, attribute) {\n    if (tagName === null) return false;\n    return has(badTagsForDataURI, tagName) && has(badAttributesForDataURI, attribute);\n}\nexport function requiresSanitization(tagName, attribute) {\n    return checkURI(tagName, attribute) || checkDataURI(tagName, attribute);\n}\nexport function sanitizeAttributeValue(env, element, attribute, value) {\n    let tagName = null;\n    if (value === null || value === undefined) {\n        return value;\n    }\n    if (isSafeString(value)) {\n        return value.toHTML();\n    }\n    if (!element) {\n        tagName = null;\n    } else {\n        tagName = element.tagName.toUpperCase();\n    }\n    let str = normalizeStringValue(value);\n    if (checkURI(tagName, attribute)) {\n        let protocol = env.protocolForURL(str);\n        if (has(badProtocols, protocol)) {\n            return `unsafe:${str}`;\n        }\n    }\n    if (checkDataURI(tagName, attribute)) {\n        return `unsafe:${str}`;\n    }\n    return str;\n}","/*\n * @method normalizeProperty\n * @param element {HTMLElement}\n * @param slotName {String}\n * @returns {Object} { name, type }\n */\nexport function normalizeProperty(element, slotName) {\n    let type, normalized;\n    if (slotName in element) {\n        normalized = slotName;\n        type = 'prop';\n    } else {\n        let lower = slotName.toLowerCase();\n        if (lower in element) {\n            type = 'prop';\n            normalized = lower;\n        } else {\n            type = 'attr';\n            normalized = slotName;\n        }\n    }\n    if (type === 'prop' && (normalized.toLowerCase() === 'style' || preferAttr(element.tagName, normalized))) {\n        type = 'attr';\n    }\n    return { normalized, type };\n}\nexport function normalizePropertyValue(value) {\n    if (value === '') {\n        return true;\n    }\n    return value;\n}\n// properties that MUST be set as attributes, due to:\n// * browser bug\n// * strange spec outlier\nconst ATTR_OVERRIDES = {\n    // phantomjs < 2.0 lets you set it as a prop but won't reflect it\n    // back to the attribute. button.getAttribute('type') === null\n    BUTTON: { type: true, form: true },\n    INPUT: {\n        // Some version of IE (like IE9) actually throw an exception\n        // if you set input.type = 'something-unknown'\n        type: true,\n        form: true,\n        // Chrome 46.0.2464.0: 'autocorrect' in document.createElement('input') === false\n        // Safari 8.0.7: 'autocorrect' in document.createElement('input') === false\n        // Mobile Safari (iOS 8.4 simulator): 'autocorrect' in document.createElement('input') === true\n        autocorrect: true,\n        // Chrome 54.0.2840.98: 'list' in document.createElement('input') === true\n        // Safari 9.1.3: 'list' in document.createElement('input') === false\n        list: true\n    },\n    // element.form is actually a legitimate readOnly property, that is to be\n    // mutated, but must be mutated by setAttribute...\n    SELECT: { form: true },\n    OPTION: { form: true },\n    TEXTAREA: { form: true },\n    LABEL: { form: true },\n    FIELDSET: { form: true },\n    LEGEND: { form: true },\n    OBJECT: { form: true }\n};\nfunction preferAttr(tagName, propName) {\n    let tag = ATTR_OVERRIDES[tagName.toUpperCase()];\n    return tag && tag[propName.toLowerCase()] || false;\n}","import { ConcreteBounds } from '../bounds';\nimport { moveNodesBefore } from '../dom/helper';\nlet innerHTMLWrapper = {\n    colgroup: { depth: 2, before: '<table><colgroup>', after: '</colgroup></table>' },\n    table: { depth: 1, before: '<table>', after: '</table>' },\n    tbody: { depth: 2, before: '<table><tbody>', after: '</tbody></table>' },\n    tfoot: { depth: 2, before: '<table><tfoot>', after: '</tfoot></table>' },\n    thead: { depth: 2, before: '<table><thead>', after: '</thead></table>' },\n    tr: { depth: 3, before: '<table><tbody><tr>', after: '</tr></tbody></table>' }\n};\n// Patch:    innerHTML Fix\n// Browsers: IE9\n// Reason:   IE9 don't allow us to set innerHTML on col, colgroup, frameset,\n//           html, style, table, tbody, tfoot, thead, title, tr.\n// Fix:      Wrap the innerHTML we are about to set in its parents, apply the\n//           wrapped innerHTML on a div, then move the unwrapped nodes into the\n//           target position.\nexport function domChanges(document, DOMChangesClass) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document)) {\n        return DOMChangesClass;\n    }\n    let div = document.createElement('div');\n    return class DOMChangesWithInnerHTMLFix extends DOMChangesClass {\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            let parentTag = parent.tagName.toLowerCase();\n            let wrapper = innerHTMLWrapper[parentTag];\n            if (wrapper === undefined) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            return fixInnerHTML(parent, wrapper, div, html, nextSibling);\n        }\n    };\n}\nexport function treeConstruction(document, DOMTreeConstructionClass) {\n    if (!document) return DOMTreeConstructionClass;\n    if (!shouldApplyFix(document)) {\n        return DOMTreeConstructionClass;\n    }\n    let div = document.createElement('div');\n    return class DOMTreeConstructionWithInnerHTMLFix extends DOMTreeConstructionClass {\n        insertHTMLBefore(parent, referenceNode, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, referenceNode, html);\n            }\n            let parentTag = parent.tagName.toLowerCase();\n            let wrapper = innerHTMLWrapper[parentTag];\n            if (wrapper === undefined) {\n                return super.insertHTMLBefore(parent, referenceNode, html);\n            }\n            return fixInnerHTML(parent, wrapper, div, html, referenceNode);\n        }\n    };\n}\nfunction fixInnerHTML(parent, wrapper, div, html, reference) {\n    let wrappedHtml = wrapper.before + html + wrapper.after;\n    div.innerHTML = wrappedHtml;\n    let parentNode = div;\n    for (let i = 0; i < wrapper.depth; i++) {\n        parentNode = parentNode.childNodes[0];\n    }\n    let [first, last] = moveNodesBefore(parentNode, parent, reference);\n    return new ConcreteBounds(parent, first, last);\n}\nfunction shouldApplyFix(document) {\n    let table = document.createElement('table');\n    try {\n        table.innerHTML = '<tbody></tbody>';\n    } catch (e) {} finally {\n        if (table.childNodes.length !== 0) {\n            // It worked as expected, no fix required\n            return false;\n        }\n    }\n    return true;\n}","import { ConcreteBounds } from '../bounds';\nimport { moveNodesBefore } from '../dom/helper';\nimport { unwrap } from '@glimmer/util';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n// Patch:    insertAdjacentHTML on SVG Fix\n// Browsers: Safari, IE, Edge, Firefox ~33-34\n// Reason:   insertAdjacentHTML does not exist on SVG elements in Safari. It is\n//           present but throws an exception on IE and Edge. Old versions of\n//           Firefox create nodes in the incorrect namespace.\n// Fix:      Since IE and Edge silently fail to create SVG nodes using\n//           innerHTML, and because Firefox may create nodes in the incorrect\n//           namespace using innerHTML on SVG elements, an HTML-string wrapping\n//           approach is used. A pre/post SVG tag is added to the string, then\n//           that whole string is added to a div. The created nodes are plucked\n//           out and applied to the target location on DOM.\nexport function domChanges(document, DOMChangesClass, svgNamespace) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document, svgNamespace)) {\n        return DOMChangesClass;\n    }\n    let div = document.createElement('div');\n    return class DOMChangesWithSVGInnerHTMLFix extends DOMChangesClass {\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            if (parent.namespaceURI !== svgNamespace) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            return fixSVG(parent, div, html, nextSibling);\n        }\n    };\n}\nexport function treeConstruction(document, TreeConstructionClass, svgNamespace) {\n    if (!document) return TreeConstructionClass;\n    if (!shouldApplyFix(document, svgNamespace)) {\n        return TreeConstructionClass;\n    }\n    let div = document.createElement('div');\n    return class TreeConstructionWithSVGInnerHTMLFix extends TreeConstructionClass {\n        insertHTMLBefore(parent, reference, html) {\n            if (html === null || html === '') {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            if (parent.namespaceURI !== svgNamespace) {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            return fixSVG(parent, div, html, reference);\n        }\n    };\n}\nfunction fixSVG(parent, div, html, reference) {\n    // IE, Edge: also do not correctly support using `innerHTML` on SVG\n    // namespaced elements. So here a wrapper is used.\n    let wrappedHtml = '<svg>' + html + '</svg>';\n    div.innerHTML = wrappedHtml;\n    let [first, last] = moveNodesBefore(div.firstChild, parent, reference);\n    return new ConcreteBounds(parent, first, last);\n}\nfunction shouldApplyFix(document, svgNamespace) {\n    let svg = document.createElementNS(svgNamespace, 'svg');\n    try {\n        svg['insertAdjacentHTML']('beforeend', '<circle></circle>');\n    } catch (e) {\n        // IE, Edge: Will throw, insertAdjacentHTML is unsupported on SVG\n        // Safari: Will throw, insertAdjacentHTML is not present on SVG\n    } finally {\n        // FF: Old versions will create a node in the wrong namespace\n        if (svg.childNodes.length === 1 && unwrap(svg.firstChild).namespaceURI === SVG_NAMESPACE) {\n            // The test worked as expected, no fix required\n            return false;\n        }\n        return true;\n    }\n}","// Patch:    Adjacent text node merging fix\n// Browsers: IE, Edge, Firefox w/o inspector open\n// Reason:   These browsers will merge adjacent text nodes. For exmaple given\n//           <div>Hello</div> with div.insertAdjacentHTML(' world') browsers\n//           with proper behavior will populate div.childNodes with two items.\n//           These browsers will populate it with one merged node instead.\n// Fix:      Add these nodes to a wrapper element, then iterate the childNodes\n//           of that wrapper and move the nodes to their target location. Note\n//           that potential SVG bugs will have been handled before this fix.\n//           Note that this fix must only apply to the previous text node, as\n//           the base implementation of `insertHTMLBefore` already handles\n//           following text nodes correctly.\nexport function domChanges(document, DOMChangesClass) {\n    if (!document) return DOMChangesClass;\n    if (!shouldApplyFix(document)) {\n        return DOMChangesClass;\n    }\n    return class DOMChangesWithTextNodeMergingFix extends DOMChangesClass {\n        constructor(document) {\n            super(document);\n            this.uselessComment = document.createComment('');\n        }\n        insertHTMLBefore(parent, nextSibling, html) {\n            if (html === null) {\n                return super.insertHTMLBefore(parent, nextSibling, html);\n            }\n            let didSetUselessComment = false;\n            let nextPrevious = nextSibling ? nextSibling.previousSibling : parent.lastChild;\n            if (nextPrevious && nextPrevious instanceof Text) {\n                didSetUselessComment = true;\n                parent.insertBefore(this.uselessComment, nextSibling);\n            }\n            let bounds = super.insertHTMLBefore(parent, nextSibling, html);\n            if (didSetUselessComment) {\n                parent.removeChild(this.uselessComment);\n            }\n            return bounds;\n        }\n    };\n}\nexport function treeConstruction(document, TreeConstructionClass) {\n    if (!document) return TreeConstructionClass;\n    if (!shouldApplyFix(document)) {\n        return TreeConstructionClass;\n    }\n    return class TreeConstructionWithTextNodeMergingFix extends TreeConstructionClass {\n        constructor(document) {\n            super(document);\n            this.uselessComment = this.createComment('');\n        }\n        insertHTMLBefore(parent, reference, html) {\n            if (html === null) {\n                return super.insertHTMLBefore(parent, reference, html);\n            }\n            let didSetUselessComment = false;\n            let nextPrevious = reference ? reference.previousSibling : parent.lastChild;\n            if (nextPrevious && nextPrevious instanceof Text) {\n                didSetUselessComment = true;\n                parent.insertBefore(this.uselessComment, reference);\n            }\n            let bounds = super.insertHTMLBefore(parent, reference, html);\n            if (didSetUselessComment) {\n                parent.removeChild(this.uselessComment);\n            }\n            return bounds;\n        }\n    };\n}\nfunction shouldApplyFix(document) {\n    let mergingTextDiv = document.createElement('div');\n    mergingTextDiv.innerHTML = 'first';\n    mergingTextDiv.insertAdjacentHTML('beforeend', 'second');\n    if (mergingTextDiv.childNodes.length === 2) {\n        // It worked as expected, no fix required\n        return false;\n    }\n    return true;\n}","import { ConcreteBounds, SingleNodeBounds } from '../bounds';\nimport { domChanges as domChangesTableElementFix, treeConstruction as treeConstructionTableElementFix } from '../compat/inner-html-fix';\nimport { domChanges as domChangesSvgElementFix, treeConstruction as treeConstructionSvgElementFix } from '../compat/svg-inner-html-fix';\nimport { domChanges as domChangesNodeMergingFix, treeConstruction as treeConstructionNodeMergingFix } from '../compat/text-node-merging-fix';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n// http://www.w3.org/TR/html/syntax.html#html-integration-point\nconst SVG_INTEGRATION_POINTS = { foreignObject: 1, desc: 1, title: 1 };\n// http://www.w3.org/TR/html/syntax.html#adjust-svg-attributes\n// TODO: Adjust SVG attributes\n// http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign\n// TODO: Adjust SVG elements\n// http://www.w3.org/TR/html/syntax.html#parsing-main-inforeign\nexport const BLACKLIST_TABLE = Object.create(null);\n[\"b\", \"big\", \"blockquote\", \"body\", \"br\", \"center\", \"code\", \"dd\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"hr\", \"i\", \"img\", \"li\", \"listing\", \"main\", \"meta\", \"nobr\", \"ol\", \"p\", \"pre\", \"ruby\", \"s\", \"small\", \"span\", \"strong\", \"strike\", \"sub\", \"sup\", \"table\", \"tt\", \"u\", \"ul\", \"var\"].forEach(tag => BLACKLIST_TABLE[tag] = 1);\nconst WHITESPACE = /[\\t-\\r \\xA0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]/;\nlet doc = typeof document === 'undefined' ? null : document;\nexport function isWhitespace(string) {\n    return WHITESPACE.test(string);\n}\nexport function moveNodesBefore(source, target, nextSibling) {\n    let first = source.firstChild;\n    let last = null;\n    let current = first;\n    while (current) {\n        last = current;\n        current = current.nextSibling;\n        target.insertBefore(last, nextSibling);\n    }\n    return [first, last];\n}\nexport class DOMOperations {\n    constructor(document) {\n        this.document = document;\n        this.setupUselessElement();\n    }\n    // split into seperate method so that NodeDOMTreeConstruction\n    // can override it.\n    setupUselessElement() {\n        this.uselessElement = this.document.createElement('div');\n    }\n    createElement(tag, context) {\n        let isElementInSVGNamespace, isHTMLIntegrationPoint;\n        if (context) {\n            isElementInSVGNamespace = context.namespaceURI === SVG_NAMESPACE || tag === 'svg';\n            isHTMLIntegrationPoint = SVG_INTEGRATION_POINTS[context.tagName];\n        } else {\n            isElementInSVGNamespace = tag === 'svg';\n            isHTMLIntegrationPoint = false;\n        }\n        if (isElementInSVGNamespace && !isHTMLIntegrationPoint) {\n            // FIXME: This does not properly handle <font> with color, face, or\n            // size attributes, which is also disallowed by the spec. We should fix\n            // this.\n            if (BLACKLIST_TABLE[tag]) {\n                throw new Error(`Cannot create a ${tag} inside an SVG context`);\n            }\n            return this.document.createElementNS(SVG_NAMESPACE, tag);\n        } else {\n            return this.document.createElement(tag);\n        }\n    }\n    insertBefore(parent, node, reference) {\n        parent.insertBefore(node, reference);\n    }\n    insertHTMLBefore(_parent, nextSibling, html) {\n        return insertHTMLBefore(this.uselessElement, _parent, nextSibling, html);\n    }\n    createTextNode(text) {\n        return this.document.createTextNode(text);\n    }\n    createComment(data) {\n        return this.document.createComment(data);\n    }\n}\nexport var DOM;\n(function (DOM) {\n    class TreeConstruction extends DOMOperations {\n        createElementNS(namespace, tag) {\n            return this.document.createElementNS(namespace, tag);\n        }\n        setAttribute(element, name, value, namespace = null) {\n            if (namespace) {\n                element.setAttributeNS(namespace, name, value);\n            } else {\n                element.setAttribute(name, value);\n            }\n        }\n    }\n    DOM.TreeConstruction = TreeConstruction;\n    let appliedTreeContruction = TreeConstruction;\n    appliedTreeContruction = treeConstructionNodeMergingFix(doc, appliedTreeContruction);\n    appliedTreeContruction = treeConstructionTableElementFix(doc, appliedTreeContruction);\n    appliedTreeContruction = treeConstructionSvgElementFix(doc, appliedTreeContruction, SVG_NAMESPACE);\n    DOM.DOMTreeConstruction = appliedTreeContruction;\n})(DOM || (DOM = {}));\nexport class DOMChanges extends DOMOperations {\n    constructor(document) {\n        super(document);\n        this.document = document;\n        this.namespace = null;\n    }\n    setAttribute(element, name, value) {\n        element.setAttribute(name, value);\n    }\n    setAttributeNS(element, namespace, name, value) {\n        element.setAttributeNS(namespace, name, value);\n    }\n    removeAttribute(element, name) {\n        element.removeAttribute(name);\n    }\n    removeAttributeNS(element, namespace, name) {\n        element.removeAttributeNS(namespace, name);\n    }\n    insertNodeBefore(parent, node, reference) {\n        if (isDocumentFragment(node)) {\n            let { firstChild, lastChild } = node;\n            this.insertBefore(parent, node, reference);\n            return new ConcreteBounds(parent, firstChild, lastChild);\n        } else {\n            this.insertBefore(parent, node, reference);\n            return new SingleNodeBounds(parent, node);\n        }\n    }\n    insertTextBefore(parent, nextSibling, text) {\n        let textNode = this.createTextNode(text);\n        this.insertBefore(parent, textNode, nextSibling);\n        return textNode;\n    }\n    insertBefore(element, node, reference) {\n        element.insertBefore(node, reference);\n    }\n    insertAfter(element, node, reference) {\n        this.insertBefore(element, node, reference.nextSibling);\n    }\n}\nexport function insertHTMLBefore(_useless, _parent, _nextSibling, html) {\n    // TypeScript vendored an old version of the DOM spec where `insertAdjacentHTML`\n    // only exists on `HTMLElement` but not on `Element`. We actually work with the\n    // newer version of the DOM API here (and monkey-patch this method in `./compat`\n    // when we detect older browsers). This is a hack to work around this limitation.\n    let parent = _parent;\n    let useless = _useless;\n    let nextSibling = _nextSibling;\n    let prev = nextSibling ? nextSibling.previousSibling : parent.lastChild;\n    let last;\n    if (html === null || html === '') {\n        return new ConcreteBounds(parent, null, null);\n    }\n    if (nextSibling === null) {\n        parent.insertAdjacentHTML('beforeend', html);\n        last = parent.lastChild;\n    } else if (nextSibling instanceof HTMLElement) {\n        nextSibling.insertAdjacentHTML('beforebegin', html);\n        last = nextSibling.previousSibling;\n    } else {\n        // Non-element nodes do not support insertAdjacentHTML, so add an\n        // element and call it on that element. Then remove the element.\n        //\n        // This also protects Edge, IE and Firefox w/o the inspector open\n        // from merging adjacent text nodes. See ./compat/text-node-merging-fix.ts\n        parent.insertBefore(useless, nextSibling);\n        useless.insertAdjacentHTML('beforebegin', html);\n        last = useless.previousSibling;\n        parent.removeChild(useless);\n    }\n    let first = prev ? prev.nextSibling : parent.firstChild;\n    return new ConcreteBounds(parent, first, last);\n}\nfunction isDocumentFragment(node) {\n    return node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\n}\nlet helper = DOMChanges;\nhelper = domChangesNodeMergingFix(doc, helper);\nhelper = domChangesTableElementFix(doc, helper);\nhelper = domChangesSvgElementFix(doc, helper, SVG_NAMESPACE);\nexport default helper;\nexport const DOMTreeConstruction = DOM.DOMTreeConstruction;","import { sanitizeAttributeValue, requiresSanitization } from '../../dom/sanitized-values';\nimport { normalizeProperty } from '../../dom/props';\nimport { SVG_NAMESPACE } from '../../dom/helper';\nimport { normalizeStringValue } from '../../dom/normalize';\nexport function defaultDynamicAttributes(element, attr) {\n    let { tagName, namespaceURI } = element;\n    if (namespaceURI === SVG_NAMESPACE) {\n        return defaultDynamicAttribute(tagName, attr);\n    }\n    let { type, normalized } = normalizeProperty(element, attr);\n    if (type === 'attr') {\n        return defaultDynamicAttribute(tagName, normalized);\n    } else {\n        return defaultDynamicProperty(tagName, normalized);\n    }\n}\nexport function defaultDynamicAttribute(tagName, name) {\n    if (requiresSanitization(tagName, name)) {\n        return SafeDynamicAttribute;\n    } else {\n        return SimpleDynamicAttribute;\n    }\n}\nexport function defaultDynamicProperty(tagName, name) {\n    if (requiresSanitization(tagName, name)) {\n        return SafeDynamicProperty;\n    }\n    if (isUserInputValue(tagName, name)) {\n        return InputValueDynamicAttribute;\n    }\n    if (isOptionSelected(tagName, name)) {\n        return OptionSelectedDynamicAttribute;\n    }\n    return DefaultDynamicProperty;\n}\nexport class DynamicAttribute {\n    constructor(attribute) {\n        this.attribute = attribute;\n    }\n}\nexport class SimpleDynamicAttribute extends DynamicAttribute {\n    set(dom, value, _env) {\n        let normalizedValue = normalizeValue(value);\n        if (normalizedValue !== null) {\n            let { name, namespace } = this.attribute;\n            dom.__setAttribute(name, normalizedValue, namespace);\n        }\n    }\n    update(value, _env) {\n        let normalizedValue = normalizeValue(value);\n        let { element, name } = this.attribute;\n        if (normalizedValue === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, normalizedValue);\n        }\n    }\n}\nexport class DefaultDynamicProperty extends DynamicAttribute {\n    set(dom, value, _env) {\n        if (value !== null && value !== undefined) {\n            let { name } = this.attribute;\n            dom.__setProperty(name, value);\n        }\n    }\n    update(value, _env) {\n        let { element, name } = this.attribute;\n        element[name] = value;\n        if (value === null || value === undefined) {\n            this.removeAttribute();\n        }\n    }\n    removeAttribute() {\n        // TODO this sucks but to preserve properties first and to meet current\n        // semantics we must do this.\n        let { element, name, namespace } = this.attribute;\n        if (namespace) {\n            element.removeAttributeNS(namespace, name);\n        } else {\n            element.removeAttribute(name);\n        }\n    }\n}\nexport class SafeDynamicProperty extends DefaultDynamicProperty {\n    set(dom, value, env) {\n        let { element, name } = this.attribute;\n        let sanitized = sanitizeAttributeValue(env, element, name, value);\n        super.set(dom, sanitized, env);\n    }\n    update(value, env) {\n        let { element, name } = this.attribute;\n        let sanitized = sanitizeAttributeValue(env, element, name, value);\n        super.update(sanitized, env);\n    }\n}\nexport class SafeDynamicAttribute extends SimpleDynamicAttribute {\n    set(dom, value, env) {\n        let { element, name } = this.attribute;\n        let sanitized = sanitizeAttributeValue(env, element, name, value);\n        super.set(dom, sanitized, env);\n    }\n    update(value, env) {\n        let { element, name } = this.attribute;\n        let sanitized = sanitizeAttributeValue(env, element, name, value);\n        super.update(sanitized, env);\n    }\n}\nexport class InputValueDynamicAttribute extends DefaultDynamicProperty {\n    set(dom, value) {\n        dom.__setProperty('value', normalizeStringValue(value));\n    }\n    update(value) {\n        let input = this.attribute.element;\n        let currentValue = input.value;\n        let normalizedValue = normalizeStringValue(value);\n        if (currentValue !== normalizedValue) {\n            input.value = normalizedValue;\n        }\n    }\n}\nexport class OptionSelectedDynamicAttribute extends DefaultDynamicProperty {\n    set(dom, value) {\n        if (value !== null && value !== undefined && value !== false) {\n            dom.__setProperty('selected', true);\n        }\n    }\n    update(value) {\n        let option = this.attribute.element;\n        if (value) {\n            option.selected = true;\n        } else {\n            option.selected = false;\n        }\n    }\n}\nfunction isOptionSelected(tagName, attribute) {\n    return tagName === 'OPTION' && attribute === 'selected';\n}\nfunction isUserInputValue(tagName, attribute) {\n    return (tagName === 'INPUT' || tagName === 'TEXTAREA') && attribute === 'value';\n}\nfunction normalizeValue(value) {\n    if (value === false || value === undefined || value === null || typeof value.toString === 'undefined') {\n        return null;\n    }\n    if (value === true) {\n        return '';\n    }\n    // onclick function etc in SSR\n    if (typeof value === 'function') {\n        return null;\n    }\n    return String(value);\n}","import { populateBuiltins } from './syntax/functions';\nimport { Constants } from './environment/constants';\nimport { UNDEFINED_REFERENCE, ConditionalReference } from './references';\nimport { defaultDynamicAttributes } from './vm/attributes/dynamic';\nimport { assert, ensureGuid, expect } from '@glimmer/util';\n\nexport class Scope {\n    constructor(\n    // the 0th slot is `self`\n    slots, callerScope,\n    // named arguments and blocks passed to a layout that uses eval\n    evalScope,\n    // locals in scope when the partial was invoked\n    partialMap) {\n        this.slots = slots;\n        this.callerScope = callerScope;\n        this.evalScope = evalScope;\n        this.partialMap = partialMap;\n    }\n    static root(self, size = 0) {\n        let refs = new Array(size + 1);\n        for (let i = 0; i <= size; i++) {\n            refs[i] = UNDEFINED_REFERENCE;\n        }\n        return new Scope(refs, null, null, null).init({ self });\n    }\n    static sized(size = 0) {\n        let refs = new Array(size + 1);\n        for (let i = 0; i <= size; i++) {\n            refs[i] = UNDEFINED_REFERENCE;\n        }\n        return new Scope(refs, null, null, null);\n    }\n    init({ self }) {\n        this.slots[0] = self;\n        return this;\n    }\n    getSelf() {\n        return this.get(0);\n    }\n    getSymbol(symbol) {\n        return this.get(symbol);\n    }\n    getBlock(symbol) {\n        return this.get(symbol);\n    }\n    getEvalScope() {\n        return this.evalScope;\n    }\n    getPartialMap() {\n        return this.partialMap;\n    }\n    bind(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindSelf(self) {\n        this.set(0, self);\n    }\n    bindSymbol(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindBlock(symbol, value) {\n        this.set(symbol, value);\n    }\n    bindEvalScope(map) {\n        this.evalScope = map;\n    }\n    bindPartialMap(map) {\n        this.partialMap = map;\n    }\n    bindCallerScope(scope) {\n        this.callerScope = scope;\n    }\n    getCallerScope() {\n        return this.callerScope;\n    }\n    child() {\n        return new Scope(this.slots.slice(), this.callerScope, this.evalScope, this.partialMap);\n    }\n    get(index) {\n        if (index >= this.slots.length) {\n            throw new RangeError(`BUG: cannot get $${index} from scope; length=${this.slots.length}`);\n        }\n        return this.slots[index];\n    }\n    set(index, value) {\n        if (index >= this.slots.length) {\n            throw new RangeError(`BUG: cannot get $${index} from scope; length=${this.slots.length}`);\n        }\n        this.slots[index] = value;\n    }\n}\nclass Transaction {\n    constructor() {\n        this.scheduledInstallManagers = [];\n        this.scheduledInstallModifiers = [];\n        this.scheduledUpdateModifierManagers = [];\n        this.scheduledUpdateModifiers = [];\n        this.createdComponents = [];\n        this.createdManagers = [];\n        this.updatedComponents = [];\n        this.updatedManagers = [];\n        this.destructors = [];\n    }\n    didCreate(component, manager) {\n        this.createdComponents.push(component);\n        this.createdManagers.push(manager);\n    }\n    didUpdate(component, manager) {\n        this.updatedComponents.push(component);\n        this.updatedManagers.push(manager);\n    }\n    scheduleInstallModifier(modifier, manager) {\n        this.scheduledInstallManagers.push(manager);\n        this.scheduledInstallModifiers.push(modifier);\n    }\n    scheduleUpdateModifier(modifier, manager) {\n        this.scheduledUpdateModifierManagers.push(manager);\n        this.scheduledUpdateModifiers.push(modifier);\n    }\n    didDestroy(d) {\n        this.destructors.push(d);\n    }\n    commit() {\n        let { createdComponents, createdManagers } = this;\n        for (let i = 0; i < createdComponents.length; i++) {\n            let component = createdComponents[i];\n            let manager = createdManagers[i];\n            manager.didCreate(component);\n        }\n        let { updatedComponents, updatedManagers } = this;\n        for (let i = 0; i < updatedComponents.length; i++) {\n            let component = updatedComponents[i];\n            let manager = updatedManagers[i];\n            manager.didUpdate(component);\n        }\n        let { destructors } = this;\n        for (let i = 0; i < destructors.length; i++) {\n            destructors[i].destroy();\n        }\n        let { scheduledInstallManagers, scheduledInstallModifiers } = this;\n        for (let i = 0; i < scheduledInstallManagers.length; i++) {\n            let manager = scheduledInstallManagers[i];\n            let modifier = scheduledInstallModifiers[i];\n            manager.install(modifier);\n        }\n        let { scheduledUpdateModifierManagers, scheduledUpdateModifiers } = this;\n        for (let i = 0; i < scheduledUpdateModifierManagers.length; i++) {\n            let manager = scheduledUpdateModifierManagers[i];\n            let modifier = scheduledUpdateModifiers[i];\n            manager.update(modifier);\n        }\n    }\n}\nexport class Opcode {\n    constructor(heap) {\n        this.heap = heap;\n        this.offset = 0;\n    }\n    get type() {\n        return this.heap.getbyaddr(this.offset);\n    }\n    get op1() {\n        return this.heap.getbyaddr(this.offset + 1);\n    }\n    get op2() {\n        return this.heap.getbyaddr(this.offset + 2);\n    }\n    get op3() {\n        return this.heap.getbyaddr(this.offset + 3);\n    }\n}\nvar TableSlotState;\n(function (TableSlotState) {\n    TableSlotState[TableSlotState[\"Allocated\"] = 0] = \"Allocated\";\n    TableSlotState[TableSlotState[\"Freed\"] = 1] = \"Freed\";\n    TableSlotState[TableSlotState[\"Purged\"] = 2] = \"Purged\";\n    TableSlotState[TableSlotState[\"Pointer\"] = 3] = \"Pointer\";\n})(TableSlotState || (TableSlotState = {}));\nexport class Heap {\n    constructor() {\n        this.heap = [];\n        this.offset = 0;\n        this.handle = 0;\n        /**\n         * layout:\n         *\n         * - pointer into heap\n         * - size\n         * - freed (0 or 1)\n         */\n        this.table = [];\n    }\n    push(item) {\n        this.heap[this.offset++] = item;\n    }\n    getbyaddr(address) {\n        return this.heap[address];\n    }\n    setbyaddr(address, value) {\n        this.heap[address] = value;\n    }\n    malloc() {\n        this.table.push(this.offset, 0, 0);\n        let handle = this.handle;\n        this.handle += 3;\n        return handle;\n    }\n    finishMalloc(handle) {\n        let start = this.table[handle];\n        let finish = this.offset;\n        this.table[handle + 1] = finish - start;\n    }\n    size() {\n        return this.offset;\n    }\n    // It is illegal to close over this address, as compaction\n    // may move it. However, it is legal to use this address\n    // multiple times between compactions.\n    getaddr(handle) {\n        return this.table[handle];\n    }\n    gethandle(address) {\n        this.table.push(address, 0, TableSlotState.Pointer);\n        let handle = this.handle;\n        this.handle += 3;\n        return handle;\n    }\n    sizeof(handle) {\n        if (false) {\n            return this.table[handle + 1];\n        }\n        return -1;\n    }\n    free(handle) {\n        this.table[handle + 2] = 1;\n    }\n    compact() {\n        let compactedSize = 0;\n        let { table, table: { length }, heap } = this;\n        for (let i = 0; i < length; i += 3) {\n            let offset = table[i];\n            let size = table[i + 1];\n            let state = table[i + 2];\n            if (state === TableSlotState.Purged) {\n                continue;\n            } else if (state === TableSlotState.Freed) {\n                // transition to \"already freed\"\n                // a good improvement would be to reuse\n                // these slots\n                table[i + 2] = 2;\n                compactedSize += size;\n            } else if (state === TableSlotState.Allocated) {\n                for (let j = offset; j <= i + size; j++) {\n                    heap[j - compactedSize] = heap[j];\n                }\n                table[i] = offset - compactedSize;\n            } else if (state === TableSlotState.Pointer) {\n                table[i] = offset - compactedSize;\n            }\n        }\n        this.offset = this.offset - compactedSize;\n    }\n}\nexport class Program {\n    constructor() {\n        this.heap = new Heap();\n        this._opcode = new Opcode(this.heap);\n        this.constants = new Constants();\n    }\n    opcode(offset) {\n        this._opcode.offset = offset;\n        return this._opcode;\n    }\n}\nexport class Environment {\n    constructor({ appendOperations, updateOperations }) {\n        this._macros = null;\n        this._transaction = null;\n        this.program = new Program();\n        this.appendOperations = appendOperations;\n        this.updateOperations = updateOperations;\n    }\n    toConditionalReference(reference) {\n        return new ConditionalReference(reference);\n    }\n    getAppendOperations() {\n        return this.appendOperations;\n    }\n    getDOM() {\n        return this.updateOperations;\n    }\n    getIdentity(object) {\n        return ensureGuid(object) + '';\n    }\n    begin() {\n        assert(!this._transaction, 'a glimmer transaction was begun, but one already exists. You may have a nested transaction');\n        this._transaction = new Transaction();\n    }\n    get transaction() {\n        return expect(this._transaction, 'must be in a transaction');\n    }\n    didCreate(component, manager) {\n        this.transaction.didCreate(component, manager);\n    }\n    didUpdate(component, manager) {\n        this.transaction.didUpdate(component, manager);\n    }\n    scheduleInstallModifier(modifier, manager) {\n        this.transaction.scheduleInstallModifier(modifier, manager);\n    }\n    scheduleUpdateModifier(modifier, manager) {\n        this.transaction.scheduleUpdateModifier(modifier, manager);\n    }\n    didDestroy(d) {\n        this.transaction.didDestroy(d);\n    }\n    commit() {\n        let transaction = this.transaction;\n        this._transaction = null;\n        transaction.commit();\n    }\n    attributeFor(element, attr, _isTrusting, _namespace = null) {\n        return defaultDynamicAttributes(element, attr);\n    }\n    macros() {\n        let macros = this._macros;\n        if (!macros) {\n            this._macros = macros = this.populateBuiltins();\n        }\n        return macros;\n    }\n    populateBuiltins() {\n        return populateBuiltins();\n    }\n}\nexport default Environment;","import { clear, move as moveBounds } from '../bounds';\nimport { NewElementBuilder } from './element-builder';\nimport { Stack, LinkedList, dict, expect } from '@glimmer/util';\nimport { IteratorSynchronizer,\n// Tags\ncombine, UpdatableTag, combineSlice, CONSTANT_TAG, INITIAL } from '@glimmer/reference';\nimport { UpdatingOpcode } from '../opcodes';\nimport VM, { EvaluationStack } from './append';\nexport default class UpdatingVM {\n    constructor(env, { alwaysRevalidate = false }) {\n        this.frameStack = new Stack();\n        this.env = env;\n        this.constants = env.program.constants;\n        this.dom = env.getDOM();\n        this.alwaysRevalidate = alwaysRevalidate;\n    }\n    execute(opcodes, handler) {\n        let { frameStack } = this;\n        this.try(opcodes, handler);\n        while (true) {\n            if (frameStack.isEmpty()) break;\n            let opcode = this.frame.nextStatement();\n            if (opcode === null) {\n                this.frameStack.pop();\n                continue;\n            }\n            opcode.evaluate(this);\n        }\n    }\n    get frame() {\n        return expect(this.frameStack.current, 'bug: expected a frame');\n    }\n    goto(op) {\n        this.frame.goto(op);\n    }\n    try(ops, handler) {\n        this.frameStack.push(new UpdatingVMFrame(this, ops, handler));\n    }\n    throw() {\n        this.frame.handleException();\n        this.frameStack.pop();\n    }\n    evaluateOpcode(opcode) {\n        opcode.evaluate(this);\n    }\n}\nexport class BlockOpcode extends UpdatingOpcode {\n    constructor(start, state, bounds, children) {\n        super();\n        this.start = start;\n        this.type = \"block\";\n        this.next = null;\n        this.prev = null;\n        let { env, scope, dynamicScope, stack } = state;\n        this.children = children;\n        this.env = env;\n        this.scope = scope;\n        this.dynamicScope = dynamicScope;\n        this.stack = stack;\n        this.bounds = bounds;\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    evaluate(vm) {\n        vm.try(this.children, null);\n    }\n    destroy() {\n        this.bounds.destroy();\n    }\n    didDestroy() {\n        this.env.didDestroy(this.bounds);\n    }\n    toJSON() {\n        let details = dict();\n        details[\"guid\"] = `${this._guid}`;\n        return {\n            guid: this._guid,\n            type: this.type,\n            details,\n            children: this.children.toArray().map(op => op.toJSON())\n        };\n    }\n}\nexport class TryOpcode extends BlockOpcode {\n    constructor(start, state, bounds, children) {\n        super(start, state, bounds, children);\n        this.type = \"try\";\n        this.tag = this._tag = UpdatableTag.create(CONSTANT_TAG);\n    }\n    didInitializeChildren() {\n        this._tag.inner.update(combineSlice(this.children));\n    }\n    evaluate(vm) {\n        vm.try(this.children, this);\n    }\n    handleException() {\n        let { env, bounds, children, scope, dynamicScope, start, stack, prev, next } = this;\n        children.clear();\n        let elementStack = NewElementBuilder.resume(env, bounds, bounds.reset(env));\n        let vm = new VM(env, scope, dynamicScope, elementStack);\n        let updating = new LinkedList();\n        vm.execute(start, vm => {\n            vm.stack = EvaluationStack.restore(stack);\n            vm.updatingOpcodeStack.push(updating);\n            vm.updateWith(this);\n            vm.updatingOpcodeStack.push(children);\n        });\n        this.prev = prev;\n        this.next = next;\n    }\n    toJSON() {\n        let json = super.toJSON();\n        let details = json[\"details\"];\n        if (!details) {\n            details = json[\"details\"] = {};\n        }\n        return super.toJSON();\n    }\n}\nclass ListRevalidationDelegate {\n    constructor(opcode, marker) {\n        this.opcode = opcode;\n        this.marker = marker;\n        this.didInsert = false;\n        this.didDelete = false;\n        this.map = opcode.map;\n        this.updating = opcode['children'];\n    }\n    insert(key, item, memo, before) {\n        let { map, opcode, updating } = this;\n        let nextSibling = null;\n        let reference = null;\n        if (before) {\n            reference = map[before];\n            nextSibling = reference['bounds'].firstNode();\n        } else {\n            nextSibling = this.marker;\n        }\n        let vm = opcode.vmForInsertion(nextSibling);\n        let tryOpcode = null;\n        let { start } = opcode;\n        vm.execute(start, vm => {\n            map[key] = tryOpcode = vm.iterate(memo, item);\n            vm.updatingOpcodeStack.push(new LinkedList());\n            vm.updateWith(tryOpcode);\n            vm.updatingOpcodeStack.push(tryOpcode.children);\n        });\n        updating.insertBefore(tryOpcode, reference);\n        this.didInsert = true;\n    }\n    retain(_key, _item, _memo) {}\n    move(key, _item, _memo, before) {\n        let { map, updating } = this;\n        let entry = map[key];\n        let reference = map[before] || null;\n        if (before) {\n            moveBounds(entry, reference.firstNode());\n        } else {\n            moveBounds(entry, this.marker);\n        }\n        updating.remove(entry);\n        updating.insertBefore(entry, reference);\n    }\n    delete(key) {\n        let { map } = this;\n        let opcode = map[key];\n        opcode.didDestroy();\n        clear(opcode);\n        this.updating.remove(opcode);\n        delete map[key];\n        this.didDelete = true;\n    }\n    done() {\n        this.opcode.didInitializeChildren(this.didInsert || this.didDelete);\n    }\n}\nexport class ListBlockOpcode extends BlockOpcode {\n    constructor(start, state, bounds, children, artifacts) {\n        super(start, state, bounds, children);\n        this.type = \"list-block\";\n        this.map = dict();\n        this.lastIterated = INITIAL;\n        this.artifacts = artifacts;\n        let _tag = this._tag = UpdatableTag.create(CONSTANT_TAG);\n        this.tag = combine([artifacts.tag, _tag]);\n    }\n    didInitializeChildren(listDidChange = true) {\n        this.lastIterated = this.artifacts.tag.value();\n        if (listDidChange) {\n            this._tag.inner.update(combineSlice(this.children));\n        }\n    }\n    evaluate(vm) {\n        let { artifacts, lastIterated } = this;\n        if (!artifacts.tag.validate(lastIterated)) {\n            let { bounds } = this;\n            let { dom } = vm;\n            let marker = dom.createComment('');\n            dom.insertAfter(bounds.parentElement(), marker, expect(bounds.lastNode(), \"can't insert after an empty bounds\"));\n            let target = new ListRevalidationDelegate(this, marker);\n            let synchronizer = new IteratorSynchronizer({ target, artifacts });\n            synchronizer.sync();\n            this.parentElement().removeChild(marker);\n        }\n        // Run now-updated updating opcodes\n        super.evaluate(vm);\n    }\n    vmForInsertion(nextSibling) {\n        let { env, scope, dynamicScope } = this;\n        let elementStack = NewElementBuilder.forInitialRender(this.env, this.bounds.parentElement(), nextSibling);\n        return new VM(env, scope, dynamicScope, elementStack);\n    }\n    toJSON() {\n        let json = super.toJSON();\n        let map = this.map;\n        let inner = Object.keys(map).map(key => {\n            return `${JSON.stringify(key)}: ${map[key]._guid}`;\n        }).join(\", \");\n        let details = json[\"details\"];\n        if (!details) {\n            details = json[\"details\"] = {};\n        }\n        details[\"map\"] = `{${inner}}`;\n        return json;\n    }\n}\nclass UpdatingVMFrame {\n    constructor(vm, ops, exceptionHandler) {\n        this.vm = vm;\n        this.ops = ops;\n        this.exceptionHandler = exceptionHandler;\n        this.vm = vm;\n        this.ops = ops;\n        this.current = ops.head();\n    }\n    goto(op) {\n        this.current = op;\n    }\n    nextStatement() {\n        let { current, ops } = this;\n        if (current) this.current = ops.nextNode(current);\n        return current;\n    }\n    handleException() {\n        if (this.exceptionHandler) {\n            this.exceptionHandler.handleException();\n        }\n    }\n}","import { clear } from '../bounds';\nimport UpdatingVM from './update';\nexport default class RenderResult {\n    constructor(env, updating, bounds) {\n        this.env = env;\n        this.updating = updating;\n        this.bounds = bounds;\n    }\n    rerender({ alwaysRevalidate = false } = { alwaysRevalidate: false }) {\n        let { env, updating } = this;\n        let vm = new UpdatingVM(env, { alwaysRevalidate });\n        vm.execute(updating, this);\n    }\n    parentElement() {\n        return this.bounds.parentElement();\n    }\n    firstNode() {\n        return this.bounds.firstNode();\n    }\n    lastNode() {\n        return this.bounds.lastNode();\n    }\n    opcodes() {\n        return this.updating;\n    }\n    handleException() {\n        throw \"this should never happen\";\n    }\n    destroy() {\n        this.bounds.destroy();\n        clear(this.bounds);\n    }\n}","import { Register } from '../opcodes';\nimport { Scope } from '../environment';\nimport { Stack, LinkedList, ListSlice, expect, typePos } from '@glimmer/util';\nimport { combineSlice } from '@glimmer/reference';\nimport { LabelOpcode, JumpIfNotModifiedOpcode, DidModifyOpcode } from '../compiled/opcodes/vm';\nimport { ListBlockOpcode, TryOpcode } from './update';\nimport RenderResult from './render-result';\n\nimport { APPEND_OPCODES } from '../opcodes';\nexport class EvaluationStack {\n    constructor(stack, fp, sp) {\n        this.stack = stack;\n        this.fp = fp;\n        this.sp = sp;\n        if (false) {\n            Object.seal(this);\n        }\n    }\n    static empty() {\n        return new this([], 0, -1);\n    }\n    static restore(snapshot) {\n        return new this(snapshot.slice(), 0, snapshot.length - 1);\n    }\n    isEmpty() {\n        return this.sp === -1;\n    }\n    push(value) {\n        this.stack[++this.sp] = value;\n    }\n    dup(position = this.sp) {\n        this.push(this.stack[position]);\n    }\n    pop(n = 1) {\n        let top = this.stack[this.sp];\n        this.sp -= n;\n        return top;\n    }\n    peek() {\n        return this.stack[this.sp];\n    }\n    fromBase(offset) {\n        return this.stack[this.fp - offset];\n    }\n    fromTop(offset) {\n        return this.stack[this.sp - offset];\n    }\n    capture(items) {\n        let end = this.sp + 1;\n        let start = end - items;\n        return this.stack.slice(start, end);\n    }\n    reset() {\n        this.stack.length = 0;\n    }\n    toArray() {\n        return this.stack.slice(this.fp, this.sp + 1);\n    }\n}\nexport default class VM {\n    constructor(env, scope, dynamicScope, elementStack) {\n        this.env = env;\n        this.elementStack = elementStack;\n        this.dynamicScopeStack = new Stack();\n        this.scopeStack = new Stack();\n        this.updatingOpcodeStack = new Stack();\n        this.cacheGroups = new Stack();\n        this.listBlockStack = new Stack();\n        this.stack = EvaluationStack.empty();\n        /* Registers */\n        this.pc = -1;\n        this.ra = -1;\n        this.s0 = null;\n        this.s1 = null;\n        this.t0 = null;\n        this.t1 = null;\n        this.env = env;\n        this.heap = env.program.heap;\n        this.constants = env.program.constants;\n        this.elementStack = elementStack;\n        this.scopeStack.push(scope);\n        this.dynamicScopeStack.push(dynamicScope);\n    }\n    get fp() {\n        return this.stack.fp;\n    }\n    set fp(fp) {\n        this.stack.fp = fp;\n    }\n    get sp() {\n        return this.stack.sp;\n    }\n    set sp(sp) {\n        this.stack.sp = sp;\n    }\n    // Fetch a value from a register onto the stack\n    fetch(register) {\n        this.stack.push(this[Register[register]]);\n    }\n    // Load a value from the stack into a register\n    load(register) {\n        this[Register[register]] = this.stack.pop();\n    }\n    // Fetch a value from a register\n    fetchValue(register) {\n        return this[Register[register]];\n    }\n    // Load a value into a register\n    loadValue(register, value) {\n        this[Register[register]] = value;\n    }\n    // Start a new frame and save $ra and $fp on the stack\n    pushFrame() {\n        this.stack.push(this.ra);\n        this.stack.push(this.fp);\n        this.fp = this.sp - 1;\n    }\n    // Restore $ra, $sp and $fp\n    popFrame() {\n        this.sp = this.fp - 1;\n        this.ra = this.stack.fromBase(0);\n        this.fp = this.stack.fromBase(-1);\n    }\n    // Jump to an address in `program`\n    goto(offset) {\n        this.pc = typePos(this.pc + offset);\n    }\n    // Save $pc into $ra, then jump to a new address in `program` (jal in MIPS)\n    call(handle) {\n        let pc = this.heap.getaddr(handle);\n        this.ra = this.pc;\n        this.pc = pc;\n    }\n    // Put a specific `program` address in $ra\n    returnTo(offset) {\n        this.ra = typePos(this.pc + offset);\n    }\n    // Return to the `program` address stored in $ra\n    return() {\n        this.pc = this.ra;\n    }\n    static initial(env, self, dynamicScope, elementStack, program) {\n        let scope = Scope.root(self, program.symbolTable.symbols.length);\n        let vm = new VM(env, scope, dynamicScope, elementStack);\n        vm.pc = vm.heap.getaddr(program.handle);\n        vm.updatingOpcodeStack.push(new LinkedList());\n        return vm;\n    }\n    capture(args) {\n        return {\n            dynamicScope: this.dynamicScope(),\n            env: this.env,\n            scope: this.scope(),\n            stack: this.stack.capture(args)\n        };\n    }\n    beginCacheGroup() {\n        this.cacheGroups.push(this.updating().tail());\n    }\n    commitCacheGroup() {\n        //        JumpIfNotModified(END)\n        //        (head)\n        //        (....)\n        //        (tail)\n        //        DidModify\n        // END:   Noop\n        let END = new LabelOpcode(\"END\");\n        let opcodes = this.updating();\n        let marker = this.cacheGroups.pop();\n        let head = marker ? opcodes.nextNode(marker) : opcodes.head();\n        let tail = opcodes.tail();\n        let tag = combineSlice(new ListSlice(head, tail));\n        let guard = new JumpIfNotModifiedOpcode(tag, END);\n        opcodes.insertBefore(guard, head);\n        opcodes.append(new DidModifyOpcode(guard));\n        opcodes.append(END);\n    }\n    enter(args) {\n        let updating = new LinkedList();\n        let state = this.capture(args);\n        let tracker = this.elements().pushUpdatableBlock();\n        let tryOpcode = new TryOpcode(this.heap.gethandle(this.pc), state, tracker, updating);\n        this.didEnter(tryOpcode);\n    }\n    iterate(memo, value) {\n        let stack = this.stack;\n        stack.push(value);\n        stack.push(memo);\n        let state = this.capture(2);\n        let tracker = this.elements().pushUpdatableBlock();\n        // let ip = this.ip;\n        // this.ip = end + 4;\n        // this.frames.push(ip);\n        return new TryOpcode(this.heap.gethandle(this.pc), state, tracker, new LinkedList());\n    }\n    enterItem(key, opcode) {\n        this.listBlock().map[key] = opcode;\n        this.didEnter(opcode);\n    }\n    enterList(relativeStart) {\n        let updating = new LinkedList();\n        let state = this.capture(0);\n        let tracker = this.elements().pushBlockList(updating);\n        let artifacts = this.stack.peek().artifacts;\n        let start = this.heap.gethandle(typePos(this.pc + relativeStart));\n        let opcode = new ListBlockOpcode(start, state, tracker, updating, artifacts);\n        this.listBlockStack.push(opcode);\n        this.didEnter(opcode);\n    }\n    didEnter(opcode) {\n        this.updateWith(opcode);\n        this.updatingOpcodeStack.push(opcode.children);\n    }\n    exit() {\n        this.elements().popBlock();\n        this.updatingOpcodeStack.pop();\n        let parent = this.updating().tail();\n        parent.didInitializeChildren();\n    }\n    exitList() {\n        this.exit();\n        this.listBlockStack.pop();\n    }\n    updateWith(opcode) {\n        this.updating().append(opcode);\n    }\n    listBlock() {\n        return expect(this.listBlockStack.current, 'expected a list block');\n    }\n    updating() {\n        return expect(this.updatingOpcodeStack.current, 'expected updating opcode on the updating opcode stack');\n    }\n    elements() {\n        return this.elementStack;\n    }\n    scope() {\n        return expect(this.scopeStack.current, 'expected scope on the scope stack');\n    }\n    dynamicScope() {\n        return expect(this.dynamicScopeStack.current, 'expected dynamic scope on the dynamic scope stack');\n    }\n    pushChildScope() {\n        this.scopeStack.push(this.scope().child());\n    }\n    pushCallerScope(childScope = false) {\n        let callerScope = expect(this.scope().getCallerScope(), 'pushCallerScope is called when a caller scope is present');\n        this.scopeStack.push(childScope ? callerScope.child() : callerScope);\n    }\n    pushDynamicScope() {\n        let child = this.dynamicScope().child();\n        this.dynamicScopeStack.push(child);\n        return child;\n    }\n    pushRootScope(size, bindCaller) {\n        let scope = Scope.sized(size);\n        if (bindCaller) scope.bindCallerScope(this.scope());\n        this.scopeStack.push(scope);\n        return scope;\n    }\n    popScope() {\n        this.scopeStack.pop();\n    }\n    popDynamicScope() {\n        this.dynamicScopeStack.pop();\n    }\n    newDestroyable(d) {\n        this.elements().didAddDestroyable(d);\n    }\n    /// SCOPE HELPERS\n    getSelf() {\n        return this.scope().getSelf();\n    }\n    referenceForSymbol(symbol) {\n        return this.scope().getSymbol(symbol);\n    }\n    /// EXECUTION\n    execute(start, initialize) {\n        this.pc = this.heap.getaddr(start);\n        if (initialize) initialize(this);\n        let result;\n        while (true) {\n            result = this.next();\n            if (result.done) break;\n        }\n        return result.value;\n    }\n    next() {\n        let { env, updatingOpcodeStack, elementStack } = this;\n        let opcode = this.nextStatement(env);\n        let result;\n        if (opcode !== null) {\n            APPEND_OPCODES.evaluate(this, opcode, opcode.type);\n            result = { done: false, value: null };\n        } else {\n            // Unload the stack\n            this.stack.reset();\n            result = {\n                done: true,\n                value: new RenderResult(env, expect(updatingOpcodeStack.pop(), 'there should be a final updating opcode stack'), elementStack.popBlock())\n            };\n        }\n        return result;\n    }\n    nextStatement(env) {\n        let { pc } = this;\n        if (pc === -1) {\n            return null;\n        }\n        let program = env.program;\n        this.pc += 4;\n        return program.opcode(pc);\n    }\n    evaluateOpcode(opcode) {\n        APPEND_OPCODES.evaluate(this, opcode, opcode.type);\n    }\n    bindDynamicScope(names) {\n        let scope = this.dynamicScope();\n        for (let i = names.length - 1; i >= 0; i--) {\n            let name = this.constants.getString(names[i]);\n            scope.set(name, this.stack.pop());\n        }\n    }\n}","import { assign, EMPTY_ARRAY } from '@glimmer/util';\nimport { NewElementBuilder } from './vm/element-builder';\nimport { RehydrateBuilder } from './vm/rehydrate-builder';\nimport { SerializeBuilder } from './vm/serialize-builder';\nimport Scanner from './scanner';\nimport { VM } from './vm';\nexport class TemplateIterator {\n    constructor(vm) {\n        this.vm = vm;\n    }\n    next() {\n        return this.vm.next();\n    }\n}\nlet clientId = 0;\nexport default function templateFactory({ id: templateId, meta, block }) {\n    let parsedBlock;\n    let id = templateId || `client-${clientId++}`;\n    let create = (env, envMeta) => {\n        let newMeta = envMeta ? assign({}, envMeta, meta) : meta;\n        if (!parsedBlock) {\n            parsedBlock = JSON.parse(block);\n        }\n        return new ScannableTemplate(id, newMeta, env, parsedBlock);\n    };\n    return { id, meta, create };\n}\nclass ScannableTemplate {\n    constructor(id, meta, env, rawBlock) {\n        this.id = id;\n        this.meta = meta;\n        this.env = env;\n        this.entryPoint = null;\n        this.layout = null;\n        this.partial = null;\n        this.block = null;\n        this.scanner = new Scanner(rawBlock, env);\n        this.symbols = rawBlock.symbols;\n        this.hasEval = rawBlock.hasEval;\n    }\n    render({ self, parentNode, dynamicScope, mode }) {\n        let { env } = this;\n        let elementBuilder;\n        switch (mode) {\n            case undefined:\n                elementBuilder = NewElementBuilder.forInitialRender(env, parentNode, null);\n                break;\n            case 'rehydrate':\n                elementBuilder = RehydrateBuilder.forInitialRender(env, parentNode, null);\n                break;\n            case 'serialize':\n                elementBuilder = SerializeBuilder.forInitialRender(env, parentNode, null);\n                break;\n            default:\n                throw new Error('unreachable');\n        }\n        let compiled = this.asEntryPoint().compileDynamic(env);\n        let vm = VM.initial(env, self, dynamicScope, elementBuilder, compiled);\n        return new TemplateIterator(vm);\n    }\n    asEntryPoint() {\n        if (!this.entryPoint) this.entryPoint = this.scanner.scanEntryPoint(this.compilationMeta());\n        return this.entryPoint;\n    }\n    asLayout(componentName, attrs) {\n        if (!this.layout) this.layout = this.scanner.scanLayout(this.compilationMeta(), attrs || EMPTY_ARRAY, componentName);\n        return this.layout;\n    }\n    asPartial() {\n        if (!this.partial) this.partial = this.scanner.scanEntryPoint(this.compilationMeta(true));\n        return this.partial;\n    }\n    asBlock() {\n        if (!this.block) this.block = this.scanner.scanBlock(this.compilationMeta());\n        return this.block;\n    }\n    compilationMeta(asPartial = false) {\n        return { templateMeta: this.meta, symbols: this.symbols, asPartial };\n    }\n}","export function EMPTY_CACHE() {}","import { EMPTY_CACHE } from '../utils';\nimport { dict } from '@glimmer/util';\nimport Meta from '../meta';\nimport { PropertyReference } from './descriptors';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport default class PathReference {\n    constructor(parent, property) {\n        this.cache = EMPTY_CACHE;\n        this.inner = null;\n        this.chains = null;\n        this.lastParentValue = EMPTY_CACHE;\n        this._guid = 0;\n        this.tag = VOLATILE_TAG;\n        this.parent = parent;\n        this.property = property;\n    }\n    value() {\n        let { lastParentValue, property, inner } = this;\n        let parentValue = this._parentValue();\n        if (parentValue === null || parentValue === undefined) {\n            return this.cache = undefined;\n        }\n        if (lastParentValue === parentValue) {\n            inner = this.inner;\n        } else {\n            let ReferenceType = typeof parentValue === 'object' ? Meta.for(parentValue).referenceTypeFor(property) : PropertyReference;\n            inner = this.inner = new ReferenceType(parentValue, property, this);\n        }\n        // if (typeof parentValue === 'object') {\n        //   Meta.for(parentValue).addReference(property, this);\n        // }\n        return this.cache = inner.value();\n    }\n    get(prop) {\n        let chains = this._getChains();\n        if (prop in chains) return chains[prop];\n        return chains[prop] = new PathReference(this, prop);\n    }\n    label() {\n        return '[reference Direct]';\n    }\n    _getChains() {\n        if (this.chains) return this.chains;\n        return this.chains = dict();\n    }\n    _parentValue() {\n        let parent = this.parent.value();\n        this.lastParentValue = parent;\n        return parent;\n    }\n}\nexport { PathReference };","import { dict } from '@glimmer/util';\nimport { PathReference } from './path';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport default class RootReference {\n    constructor(object) {\n        this.chains = dict();\n        this.tag = VOLATILE_TAG;\n        this.object = object;\n    }\n    value() {\n        return this.object;\n    }\n    update(object) {\n        this.object = object;\n        // this.notify();\n    }\n    get(prop) {\n        let chains = this.chains;\n        if (prop in chains) return chains[prop];\n        return chains[prop] = new PathReference(this, prop);\n    }\n    chainFor(prop) {\n        let chains = this.chains;\n        if (prop in chains) return chains[prop];\n        return null;\n    }\n    path(string) {\n        return string.split('.').reduce((ref, part) => ref.get(part), this);\n    }\n    referenceFromParts(parts) {\n        return parts.reduce((ref, part) => ref.get(part), this);\n    }\n    label() {\n        return '[reference Root]';\n    }\n}","import { PropertyReference } from './references/descriptors';\nimport RootReference from './references/root';\nimport { DictSet, dict } from '@glimmer/util';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nconst NOOP_DESTROY = { destroy() {} };\nclass ConstPath {\n    constructor(parent, _property) {\n        this.tag = VOLATILE_TAG;\n        this.parent = parent;\n    }\n    chain() {\n        return NOOP_DESTROY;\n    }\n    notify() {}\n    value() {\n        return this.parent[this.property];\n    }\n    get(prop) {\n        return new ConstPath(this.parent[this.property], prop);\n    }\n}\nclass ConstRoot {\n    constructor(value) {\n        this.tag = VOLATILE_TAG;\n        this.inner = value;\n    }\n    update(inner) {\n        this.inner = inner;\n    }\n    chain() {\n        return NOOP_DESTROY;\n    }\n    notify() {}\n    value() {\n        return this.inner;\n    }\n    referenceFromParts(_parts) {\n        throw new Error(\"Not implemented\");\n    }\n    chainFor(_prop) {\n        throw new Error(\"Not implemented\");\n    }\n    get(prop) {\n        return new ConstPath(this.inner, prop);\n    }\n}\nclass ConstMeta /*implements IMeta*/ {\n    constructor(object) {\n        this.object = object;\n    }\n    root() {\n        return new ConstRoot(this.object);\n    }\n}\nexport const CLASS_META = \"df8be4c8-4e89-44e2-a8f9-550c8dacdca7\";\nconst hasOwnProperty = Object.hasOwnProperty;\nclass Meta {\n    constructor(object, { RootReferenceFactory, DefaultPathReferenceFactory }) {\n        this.references = null;\n        this.slots = null;\n        this.referenceTypes = null;\n        this.propertyMetadata = null;\n        this.object = object;\n        this.RootReferenceFactory = RootReferenceFactory || RootReference;\n        this.DefaultPathReferenceFactory = DefaultPathReferenceFactory || PropertyReference;\n    }\n    static for(obj) {\n        if (obj === null || obj === undefined) return new Meta(obj, {});\n        if (hasOwnProperty.call(obj, '_meta') && obj._meta) return obj._meta;\n        if (!Object.isExtensible(obj)) return new ConstMeta(obj);\n        let MetaToUse = Meta;\n        if (obj.constructor && obj.constructor[CLASS_META]) {\n            let classMeta = obj.constructor[CLASS_META];\n            MetaToUse = classMeta.InstanceMetaConstructor;\n        } else if (obj[CLASS_META]) {\n            MetaToUse = obj[CLASS_META].InstanceMetaConstructor;\n        }\n        return obj._meta = new MetaToUse(obj, {});\n    }\n    static exists(obj) {\n        return typeof obj === 'object' && obj._meta;\n    }\n    static metadataForProperty(_key) {\n        return null;\n    }\n    addReference(property, reference) {\n        let refs = this.references = this.references || dict();\n        let set = refs[property] = refs[property] || new DictSet();\n        set.add(reference);\n    }\n    addReferenceTypeFor(property, type) {\n        this.referenceTypes = this.referenceTypes || dict();\n        this.referenceTypes[property] = type;\n    }\n    referenceTypeFor(property) {\n        if (!this.referenceTypes) return PropertyReference;\n        return this.referenceTypes[property] || PropertyReference;\n    }\n    removeReference(property, reference) {\n        if (!this.references) return;\n        let set = this.references[property];\n        set.delete(reference);\n    }\n    getReferenceTypes() {\n        this.referenceTypes = this.referenceTypes || dict();\n        return this.referenceTypes;\n    }\n    referencesFor(property) {\n        if (!this.references) return null;\n        return this.references[property];\n    }\n    getSlots() {\n        return this.slots = this.slots || dict();\n    }\n    root() {\n        return this.rootCache = this.rootCache || new this.RootReferenceFactory(this.object);\n    }\n}\nexport default Meta;\nexport function metaFor(obj) {\n    return Meta.for(obj);\n}","import Meta from '../meta';\nimport { VOLATILE_TAG } from '@glimmer/reference';\nexport class PropertyReference {\n    constructor(object, property, _outer) {\n        this.tag = VOLATILE_TAG;\n        this.object = object;\n        this.property = property;\n    }\n    value() {\n        return this.object[this.property];\n    }\n    label() {\n        return '[reference Property]';\n    }\n}\nexport function ComputedReferenceBlueprint(_property, dependencies) {\n    return class ComputedReference {\n        constructor(object, property, outer) {\n            this.installed = false;\n            this.tag = VOLATILE_TAG;\n            this.object = object;\n            this.property = property;\n            this.dependencies = dependencies;\n            this.outer = outer;\n        }\n        value() {\n            if (!this.installed) {\n                let root = Meta.for(this.object).root();\n                this.dependencies.forEach(dep => {\n                    let ref = root.referenceFromParts(dep);\n                    ref.value();\n                });\n                this.installed = true;\n            }\n            return this.object[this.property];\n        }\n        label() {\n            return '[reference Computed]';\n        }\n    };\n}","// import { metaFor } from './meta';\n// import { intern } from '@glimmer/util';\nexport function setProperty(parent, property, val) {\n    // let rootProp = metaFor(parent).root().chainFor(property));\n    // let referencesToNotify = metaFor(parent).referencesFor(property));\n    parent[property] = val;\n    // if (referencesToNotify) {\n    //   referencesToNotify.forEach(function(ref) { ref.notify(); });\n    // }\n    // if (rootProp) rootProp.notify();\n}\nexport function notifyProperty(_parent, _property) {\n    // let rootProp = metaFor(parent).root().chainFor(property));\n    // let referencesToNotify = metaFor(parent).referencesFor(property));\n    // if (referencesToNotify) {\n    //   referencesToNotify.forEach(function(ref) { ref.notify(); });\n    // }\n    // if (rootProp) rootProp.notify();\n}","import {\n  Registry,\n  RegistryAccessor,\n  RegistrationOptions,\n  Injection,\n  Resolver\n} from '@glimmer/di';\n\nfunction isTypeSpecifier(specifier: string) {\n  return specifier.indexOf(':') === -1;\n}\n\nexport default class ApplicationRegistry implements RegistryAccessor {\n  private _registry: Registry;\n  private _resolver: Resolver;\n\n  constructor(registry: Registry, resolver: Resolver) {\n    this._registry = registry;\n    this._resolver = resolver;\n  }\n\n  register(specifier: string, factory: any, options?: RegistrationOptions): void {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    this._registry.register(normalizedSpecifier, factory, options);\n  }\n\n  registration(specifier: string): any {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    return this._registry.registration(normalizedSpecifier);\n  }\n\n  unregister(specifier: string) {\n    let normalizedSpecifier = this._toAbsoluteSpecifier(specifier);\n    this._registry.unregister(normalizedSpecifier);\n  }\n\n  registerOption(specifier: string, option: string, value: any): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    this._registry.registerOption(normalizedSpecifier, option, value);\n  }\n\n  registeredOption(specifier: string, option: string): any {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredOption(normalizedSpecifier, option);\n  }\n\n  registeredOptions(specifier: string): any {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredOptions(normalizedSpecifier);\n  }\n\n  unregisterOption(specifier: string, option: string): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    this._registry.unregisterOption(normalizedSpecifier, option);\n  }\n\n  registerInjection(specifier: string, property: string, injection: string): void {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    let normalizedInjection = this._toAbsoluteSpecifier(injection);\n    this._registry.registerInjection(normalizedSpecifier, property, normalizedInjection);\n  }\n\n  registeredInjections(specifier: string): Injection[] {\n    let normalizedSpecifier = this._toAbsoluteOrTypeSpecifier(specifier);\n    return this._registry.registeredInjections(normalizedSpecifier);\n  }\n\n  private _toAbsoluteSpecifier(specifier: string, referrer?: string): string {\n    return this._resolver.identify(specifier, referrer);\n  }\n\n  private _toAbsoluteOrTypeSpecifier(specifier: string): string {\n    if (isTypeSpecifier(specifier)) {\n      return specifier;\n    } else {\n      return this._toAbsoluteSpecifier(specifier);\n    }\n  }\n}","import {\n  assign,\n  Opaque\n} from '@glimmer/util';\nimport {\n  DynamicScope as GlimmerDynamicScope\n} from '@glimmer/runtime';\nimport {\n  PathReference\n} from '@glimmer/reference';\n\nexport default class DynamicScope implements GlimmerDynamicScope {\n  private bucket;\n\n  constructor(bucket=null) {\n    if (bucket) {\n      this.bucket = assign({}, bucket);\n    } else {\n      this.bucket = {};\n    }\n  }\n\n  get(key: string): PathReference<Opaque> {\n    return this.bucket[key];\n  }\n\n  set(key: string, reference: PathReference<Opaque>) {\n    return this.bucket[key] = reference;\n  }\n\n  child(): DynamicScope {\n    return new DynamicScope(this.bucket);\n  }\n}\n","import {\n  Opaque\n} from '@glimmer/util';\n\nimport {\n  Reference,\n  OpaqueIterator,\n  AbstractIterable,\n  IterationItem,\n  Tag\n} from \"@glimmer/reference\";\n\nimport {\n  UpdatableReference\n} from \"@glimmer/object-reference\";\n\nexport type KeyFor<T> = (item: Opaque, index: T) => string;\n\nclass ArrayIterator implements OpaqueIterator {\n  private array: Opaque[];\n  private keyFor: KeyFor<number>;\n  private position = 0;\n\n  constructor(array: Opaque[], keyFor: KeyFor<number>) {\n    this.array = array;\n    this.keyFor = keyFor;\n  }\n\n  isEmpty(): boolean {\n    return this.array.length === 0;\n  }\n\n  next(): IterationItem<Opaque, number> {\n    let { position, array, keyFor } = this;\n\n    if (position >= array.length) return null;\n\n    let value = array[position];\n    let key = keyFor(value, position);\n    let memo = position;\n\n    this.position++;\n\n    return { key, value, memo };\n  }\n}\n\nclass ObjectKeysIterator implements OpaqueIterator {\n  private keys: string[];\n  private values: Opaque[];\n  private keyFor: KeyFor<string>;\n  private position = 0;\n\n  constructor(keys: string[], values: Opaque[], keyFor: KeyFor<string>) {\n    this.keys = keys;\n    this.values = values;\n    this.keyFor = keyFor;\n  }\n\n  isEmpty(): boolean {\n    return this.keys.length === 0;\n  }\n\n  next(): IterationItem<Opaque, string> {\n    let { position, keys, values, keyFor } = this;\n\n    if (position >= keys.length) return null;\n\n    let value = values[position];\n    let memo = keys[position];\n    let key = keyFor(value, memo);\n\n    this.position++;\n\n    return { key, value, memo };\n  }\n}\n\nclass EmptyIterator implements OpaqueIterator {\n  isEmpty(): boolean {\n    return true;\n  }\n\n  next(): IterationItem<Opaque, Opaque> {\n    throw new Error(`Cannot call next() on an empty iterator`);\n  }\n}\n\nconst EMPTY_ITERATOR = new EmptyIterator();\n\nexport default class Iterable implements AbstractIterable<Opaque, Opaque, IterationItem<Opaque, Opaque>, UpdatableReference<Opaque>, UpdatableReference<Opaque>> {\n  public tag: Tag;\n  private ref: Reference<Opaque>;\n  private keyFor: KeyFor<Opaque>;\n\n  constructor(ref: Reference<Opaque>, keyFor: KeyFor<Opaque>) {\n    this.tag = ref.tag;\n    this.ref = ref;\n    this.keyFor = keyFor;\n  }\n\n  iterate(): OpaqueIterator {\n    let { ref, keyFor } = this;\n\n    let iterable = ref.value() as any;\n\n    if (Array.isArray(iterable)) {\n      return iterable.length > 0 ? new ArrayIterator(iterable, keyFor) : EMPTY_ITERATOR;\n    } else if (iterable === undefined || iterable === null) {\n      return EMPTY_ITERATOR;\n    } else if (iterable.forEach !== undefined) {\n      let array = [];\n      iterable.forEach(function(item) {\n        array.push(item);\n      });\n      return array.length > 0 ? new ArrayIterator(array, keyFor) : EMPTY_ITERATOR;\n    } else if (typeof iterable === 'object') {\n       let keys = Object.keys(iterable);\n       return keys.length > 0 ? new ObjectKeysIterator(keys, keys.map(key => iterable[key]), keyFor) : EMPTY_ITERATOR;\n     } else {\n      throw new Error(`Don't know how to {{#each ${iterable}}}`);\n    }\n  }\n\n  valueReferenceFor(item: IterationItem<Opaque, Opaque>): UpdatableReference<Opaque> {\n    return new UpdatableReference(item.value);\n  }\n\n  updateValueReference(reference: UpdatableReference<Opaque>, item: IterationItem<Opaque, Opaque>) {\n    reference.update(item.value);\n  }\n\n  memoReferenceFor(item: IterationItem<Opaque, Opaque>): UpdatableReference<Opaque> {\n    return new UpdatableReference(item.memo);\n  }\n\n  updateMemoReference(reference: UpdatableReference<Opaque>, item: IterationItem<Opaque, Opaque>) {\n    reference.update(item.memo);\n  }\n}\n","import { ConstReference, Reference } from \"@glimmer/reference\";\nimport { VM, Arguments } from \"@glimmer/runtime\";\n\nexport default function buildAction(vm: VM, _args: Arguments) {\n  let componentRef = vm.getSelf();\n  let args = _args.capture();\n\n  let actionFunc = args.positional.at(0).value() as Function;\n  if (typeof actionFunc !== 'function') {\n    throwNoActionError(actionFunc, args.positional.at(0));\n  }\n\n  return new ConstReference(function action(...invokedArgs) {\n    let curriedArgs = args.positional.value();\n    // Consume the action function that was already captured above.\n    curriedArgs.shift();\n\n    curriedArgs.push(...invokedArgs);\n\n    // Invoke the function with the component as the context, the curried\n    // arguments passed to `{{action}}`, and the arguments the bound function\n    // was invoked with.\n    actionFunc.apply(componentRef && componentRef.value(), curriedArgs);\n  });\n}\n\nfunction throwNoActionError(actionFunc: any, actionFuncReference: Reference<any>) {\n  let referenceInfo = debugInfoForReference(actionFuncReference);\n  throw new Error(`You tried to create an action with the {{action}} helper, but the first argument ${referenceInfo}was ${typeof actionFunc} instead of a function.`);\n}\n\nexport function debugInfoForReference(reference: any): string {\n  let message = '';\n  let parent;\n  let property;\n\n  if (reference === null || reference === undefined) { return message; }\n\n  if ('parent' in reference && 'property' in reference) {\n    parent = reference['parent'].value();\n    property = reference['property'];\n  } else if ('_parentValue' in reference && '_propertyKey' in reference) {\n    parent = reference['_parentValue'];\n    property = reference['_propertyKey'];\n  }\n\n  if (property !== undefined) {\n    message += `('${property}' on ${debugName(parent)}) `;\n  }\n\n  return message;\n}\n\nfunction debugName(obj: any) {\n  let objType = typeof obj;\n  if (obj === null || obj === undefined) {\n    return objType;\n  } else if (objType === 'number' || objType === 'boolean') {\n    return obj.toString();\n  } else {\n    if (obj['debugName']) {\n      return obj['debugName'];\n    }\n    try {\n      return JSON.stringify(obj);\n    } catch (e) { }\n    return obj.toString();\n  }\n}\n","import {\n  DOMChanges,\n  DOMTreeConstruction,\n  Environment as GlimmerEnvironment,\n  InlineMacros,\n  ModifierManager,\n  templateFactory,\n  ComponentDefinition,\n  Component,\n  ComponentManager,\n  BlockMacros,\n  Helper as GlimmerHelper\n} from '@glimmer/runtime';\nimport {\n  Reference,\n  OpaqueIterable\n} from \"@glimmer/reference\";\nimport {\n  dict,\n  Opaque,\n  Maybe,\n  unwrap\n} from '@glimmer/util';\nimport {\n  getOwner,\n  setOwner,\n  Owner,\n  Factory\n} from '@glimmer/di';\nimport Iterable from './iterable';\nimport { TemplateMeta } from '@glimmer/component';\nimport ComponentDefinitionCreator from './component-definition-creator';\nimport Application from \"./application\";\nimport {\n  blockComponentMacro,\n  inlineComponentMacro\n } from './dynamic-component';\n import action from './helpers/action';\n import buildUserHelper from './helpers/user-helper';\n\ntype KeyFor<T> = (item: Opaque, index: T) => string;\n\nexport interface EnvironmentOptions {\n  document?: HTMLDocument;\n  appendOperations?: DOMTreeConstruction;\n}\n\nclass DefaultComponentDefinition extends ComponentDefinition<any> {\n  toJSON() {\n    return `<default-component-definition name=${this.name}>`;\n  }\n}\n\nconst DEFAULT_MANAGER = 'main';\nconst DEFAULT_HELPERS = {\n  action\n};\n\nexport default class Environment extends GlimmerEnvironment {\n  private helpers = dict<GlimmerHelper>();\n  private modifiers = dict<ModifierManager<Opaque>>();\n  private components = dict<ComponentDefinition<Component>>();\n  private managers = dict<ComponentManager<Component>>();\n  private uselessAnchor: HTMLAnchorElement;\n\n  static create(options: EnvironmentOptions = {}) {\n    options.document = options.document || self.document;\n    options.appendOperations = options.appendOperations || new DOMTreeConstruction(options.document);\n\n    return new Environment(options);\n  }\n\n  constructor(options: EnvironmentOptions) {\n    super({ appendOperations: options.appendOperations, updateOperations: new DOMChanges(options.document as HTMLDocument || document) });\n\n    setOwner(this, getOwner(options));\n\n    // TODO - required for `protocolForURL` - seek alternative approach\n    // e.g. see `installPlatformSpecificProtocolForURL` in Ember\n    this.uselessAnchor = options.document.createElement('a') as HTMLAnchorElement;\n  }\n\n  protocolForURL(url: string): string {\n    // TODO - investigate alternative approaches\n    // e.g. see `installPlatformSpecificProtocolForURL` in Ember\n    this.uselessAnchor.href = url;\n    return this.uselessAnchor.protocol;\n  }\n\n  hasPartial() {\n    return false;\n  }\n\n  lookupPartial(): any {\n  }\n\n  managerFor(managerId: string = DEFAULT_MANAGER): ComponentManager<Component> {\n    let manager: ComponentManager<Component>;\n\n    manager = this.managers[managerId];\n    if (!manager) {\n      let app: Application = getOwner(this) as any as Application;\n      manager = this.managers[managerId] = getOwner(this).lookup(`component-manager:/${app.rootName}/component-managers/${managerId}`);\n      if (!manager) {\n        throw new Error(`No component manager found for ID ${managerId}.`);\n      }\n    }\n    return manager;\n  }\n\n  hasComponentDefinition(name: string, meta: TemplateMeta): boolean {\n    return !!this.identifyComponent(name, meta);\n  }\n\n  getComponentDefinition(name: string, meta: TemplateMeta): ComponentDefinition<Component> {\n    let owner: Owner = getOwner(this);\n    let specifier = unwrap(this.identifyComponent(name, meta));\n\n    if (!this.components[specifier]) {\n      return this.registerComponent(name, specifier, meta, owner);\n    }\n\n    return this.components[specifier];\n  }\n\n  registerComponent(name: string, templateSpecifier: string, meta: TemplateMeta, owner: Owner): ComponentDefinition<Component> {\n    let serializedTemplate = owner.lookup('template', templateSpecifier);\n    let componentSpecifier = owner.identify('component', templateSpecifier);\n    let componentFactory: Factory<Component> = null;\n\n    if (componentSpecifier) {\n      componentFactory = owner.factoryFor(componentSpecifier);\n    }\n\n    let template = templateFactory<TemplateMeta>(serializedTemplate).create(this);\n    let manager: ComponentManager<Component> = this.managerFor(serializedTemplate.meta.managerId);\n    let definition: ComponentDefinition<Component>;\n\n    if (canCreateComponentDefinition(manager)) {\n      definition = manager.createComponentDefinition(name, template, componentFactory);\n    } else {\n      definition = new DefaultComponentDefinition(name, manager, componentFactory);\n    }\n\n    this.components[templateSpecifier] = definition;\n\n    return definition;\n  }\n\n  hasHelper(name: string, meta: TemplateMeta) {\n    return !!this.lookupHelper(name, meta);\n  }\n\n  lookupHelper(name: string, meta: TemplateMeta): GlimmerHelper {\n    if (DEFAULT_HELPERS[name]) {\n      return DEFAULT_HELPERS[name];\n    }\n\n    let owner: Owner = getOwner(this);\n    let relSpecifier = `helper:${name}`;\n    let referrer: string = meta.specifier;\n\n    let specifier = owner.identify(relSpecifier, referrer);\n    if (specifier === undefined) {\n      return;\n    }\n\n    if (!this.helpers[specifier]) {\n      return this.registerHelper(specifier, owner);\n    }\n\n    return this.helpers[specifier];\n  }\n\n  registerHelper(specifier: string, owner: Owner): GlimmerHelper {\n    let helperFunc = owner.lookup(specifier);\n\n    let userHelper = buildUserHelper(helperFunc);\n    this.helpers[specifier] = userHelper;\n\n    return userHelper;\n  }\n\n  hasModifier(modifierName: string, blockMeta: TemplateMeta): boolean {\n    return modifierName.length === 1 && (modifierName in this.modifiers);\n  }\n\n  lookupModifier(modifierName: string, blockMeta: TemplateMeta): ModifierManager<Opaque> {\n    let modifier = this.modifiers[modifierName];\n\n    if(!modifier) throw new Error(`Modifier for ${modifierName} not found.`);\n    return modifier;\n  }\n\n  iterableFor(ref: Reference<Opaque>, keyPath: string): OpaqueIterable {\n    let keyFor: KeyFor<Opaque>;\n\n    if (!keyPath) {\n      throw new Error('Must specify a key for #each');\n    }\n\n    switch (keyPath) {\n      case '@index':\n        keyFor = (_, index: number) => String(index);\n      break;\n      case '@primitive':\n        keyFor = (item: Opaque) => String(item);\n      break;\n      default:\n        keyFor = (item: Opaque) => item[keyPath];\n      break;\n    }\n\n    return new Iterable(ref, keyFor);\n  }\n\n  macros(): { blocks: BlockMacros, inlines: InlineMacros } {\n    let macros = super.macros();\n\n    populateMacros(macros.blocks, macros.inlines);\n\n    return macros;\n  }\n\n  private identifyComponent(name: string, meta: TemplateMeta): Maybe<string> {\n    let owner: Owner = getOwner(this);\n    let relSpecifier = `template:${name}`;\n    let referrer: string = meta.specifier;\n\n    let specifier = owner.identify(relSpecifier, referrer);\n\n    if (specifier === undefined && owner.identify(`component:${name}`, referrer)) {\n      throw new Error(`The component '${name}' is missing a template. All components must have a template. Make sure there is a template.hbs in the component directory.`);\n    }\n\n    return specifier;\n  }\n}\n\nfunction populateMacros(blocks: BlockMacros, inlines: InlineMacros): void {\n  blocks.add('component', blockComponentMacro);\n  inlines.add('component', inlineComponentMacro);\n}\n\nfunction canCreateComponentDefinition(manager: ComponentDefinitionCreator | ComponentManager<Component>): manager is ComponentDefinitionCreator {\n  return (manager as ComponentDefinitionCreator).createComponentDefinition !== undefined;\n}\n","export default {\"id\":\"UN61+JFU\",\"block\":\"{\\\"symbols\\\":[\\\"root\\\"],\\\"statements\\\":[[4,\\\"each\\\",[[19,0,[\\\"roots\\\"]]],[[\\\"key\\\"],[\\\"id\\\"]],{\\\"statements\\\":[[4,\\\"-in-element\\\",[[19,1,[\\\"parent\\\"]]],[[\\\"nextSibling\\\"],[[19,1,[\\\"nextSibling\\\"]]]],{\\\"statements\\\":[[1,[25,\\\"component\\\",[[19,1,[\\\"component\\\"]]],null],false]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/-application/templates/main\"}};","import {\n  Container,\n  Factory,\n  Owner,\n  Registry,\n  RegistryWriter,\n  Resolver,\n  setOwner,\n} from '@glimmer/di';\nimport {\n  templateFactory,\n  ComponentDefinition,\n  Component\n} from '@glimmer/runtime';\nimport {\n  UpdatableReference\n} from '@glimmer/object-reference';\nimport {\n  Option\n} from '@glimmer/util';\nimport {\n  Simple\n} from '@glimmer/interfaces';\nimport ApplicationRegistry from './application-registry';\nimport DynamicScope from './dynamic-scope';\nimport Environment from './environment';\nimport mainTemplate from './templates/main';\n\nfunction NOOP() {}\n\nexport interface ApplicationOptions {\n  rootName: string;\n  resolver: Resolver;\n  document?: Simple.Document;\n}\n\nexport interface Initializer {\n  name?: string;\n  initialize(registry: RegistryWriter): void;\n}\n\nexport interface AppRoot {\n  id: number;\n  component: string | ComponentDefinition<Component>;\n  parent: Simple.Node;\n  nextSibling: Option<Simple.Node>;\n}\n\nexport default class Application implements Owner {\n  public rootName: string;\n  public resolver: Resolver;\n  public document: Simple.Document;\n  public env: Environment;\n  private _roots: AppRoot[] = [];\n  private _rootsIndex = 0;\n  private _registry: Registry;\n  private _container: Container;\n  private _initializers: Initializer[] = [];\n  private _initialized = false;\n  private _rendering = false;\n  private _rendered = false;\n  private _scheduled = false;\n  private _rerender: () => void = NOOP;\n\n  constructor(options: ApplicationOptions) {\n    this.rootName = options.rootName;\n    this.resolver = options.resolver;\n    this.document = options.document || window.document;\n  }\n\n  /** @hidden */\n  registerInitializer(initializer: Initializer): void {\n    this._initializers.push(initializer);\n  }\n\n  /** @hidden */\n  initRegistry(): void {\n    let registry = this._registry = new Registry();\n\n    // Create ApplicationRegistry as a proxy to the underlying registry\n    // that will only be available during `initialize`.\n    let appRegistry = new ApplicationRegistry(this._registry, this.resolver);\n\n    registry.register(`environment:/${this.rootName}/main/main`, Environment);\n    registry.registerOption('helper', 'instantiate', false);\n    registry.registerOption('template', 'instantiate', false);\n    registry.register(`document:/${this.rootName}/main/main`, this.document as any);\n    registry.registerOption('document', 'instantiate', false);\n    registry.registerInjection('environment', 'document', `document:/${this.rootName}/main/main`);\n    registry.registerInjection('component-manager', 'env', `environment:/${this.rootName}/main/main`);\n\n    let initializers = this._initializers;\n    for (let i = 0; i < initializers.length; i++) {\n      initializers[i].initialize(appRegistry);\n    }\n\n    this._initialized = true;\n  }\n\n  /** @hidden */\n  initContainer(): void {\n    this._container = new Container(this._registry, this.resolver);\n\n    // Inject `this` (the app) as the \"owner\" of every object instantiated\n    // by its container.\n    this._container.defaultInjections = (specifier: string) => {\n      let hash = {};\n      setOwner(hash, this);\n      return hash;\n    };\n  }\n\n  /** @hidden */\n  initialize(): void {\n    this.initRegistry();\n    this.initContainer();\n  }\n\n  /** @hidden */\n  boot(): void {\n    this.initialize();\n\n    this.env = this.lookup(`environment:/${this.rootName}/main/main`);\n\n    this.render();\n  }\n\n  /** @hidden */\n  render(): void {\n    this.env.begin();\n\n    let mainLayout = templateFactory(mainTemplate).create(this.env);\n    let self = new UpdatableReference({ roots: this._roots });\n    let doc = this.document as Document; // TODO FixReification\n    let parentNode = doc.body;\n    let dynamicScope = new DynamicScope();\n    let templateIterator = mainLayout.render({ self, parentNode, dynamicScope });\n    let result;\n    do {\n      result = templateIterator.next();\n    } while (!result.done);\n\n    this.env.commit();\n\n    let renderResult = result.value;\n\n    this._rerender = () => {\n      this.env.begin();\n      renderResult.rerender();\n      this.env.commit();\n      this._didRender();\n    };\n\n    this._didRender();\n  }\n\n  _didRender(): void {\n    this._rendered = true;\n  }\n\n  renderComponent(component: string | ComponentDefinition<Component>, parent: Simple.Node, nextSibling: Option<Simple.Node> = null): void {\n    this._roots.push({ id: this._rootsIndex++, component, parent, nextSibling });\n    this.scheduleRerender();\n  }\n\n  scheduleRerender(): void {\n    if (this._scheduled || !this._rendered) return;\n\n    this._rendering = true;\n    this._scheduled = true;\n    requestAnimationFrame(() => {\n      this._scheduled = false;\n      this._rerender();\n      this._rendering = false;\n    });\n  }\n\n  /**\n   * Owner interface implementation\n   *\n   * @hidden\n   */\n  identify(specifier: string, referrer?: string): string {\n    return this.resolver.identify(specifier, referrer);\n  }\n\n  /** @hidden */\n  factoryFor(specifier: string, referrer?: string): Factory<any> {\n    return this._container.factoryFor(this.identify(specifier, referrer));\n  }\n\n  /** @hidden */\n  lookup(specifier: string, referrer?: string): any {\n    return this._container.lookup(this.identify(specifier, referrer));\n  }\n}\n","import { RegistrationOptions } from './registry';\nimport { Factory } from './factory';\n\n// TODO - use symbol\nexport const OWNER = '__owner__';\n\nexport function getOwner(object: object): Owner {\n  return object[OWNER];\n}\n\nexport function setOwner(object: object, owner: Owner): void {\n  object[OWNER] = owner;\n}\n\nexport interface Owner {\n  identify(specifier: string, referrer?: string): string;\n\n  factoryFor(specifier: string, referrer?: string): Factory<any>;\n  \n  lookup(specifier: string, referrer?: string): any;\n}\n","export interface Specifier {\n  rootName?: string;\n  collection?: string;\n  namespace?: string;\n  name?: string;\n  type?: string;\n}\n\nexport function isSpecifierStringAbsolute(specifier: string): boolean {\n  let [type, path] = specifier.split(':');\n  return !!(type && path && path.indexOf('/') === 0 && path.split('/').length > 3);\n}\n\nexport function isSpecifierObjectAbsolute(specifier: Specifier): boolean {\n  return specifier.rootName !== undefined &&\n         specifier.collection !== undefined &&\n         specifier.name !== undefined &&\n         specifier.type !== undefined;\n}\n\nexport function serializeSpecifier(specifier: Specifier): string {\n  let type = specifier.type;\n  let path = serializeSpecifierPath(specifier);\n\n  if (path) {\n    return type + ':' + path;\n  } else {\n    return type;\n  }\n}\n\nexport function serializeSpecifierPath(specifier: Specifier): string {\n  let path = [];\n  if (specifier.rootName) {\n    path.push(specifier.rootName);\n  }\n  if (specifier.collection) {\n    path.push(specifier.collection);\n  }\n  if (specifier.namespace) {\n    path.push(specifier.namespace);\n  }\n  if (specifier.name) {\n    path.push(specifier.name);\n  }\n\n  if (path.length > 0) {\n    let fullPath = path.join('/');\n    if (isSpecifierObjectAbsolute(specifier)) {\n      fullPath = '/' + fullPath;\n    }\n    return fullPath;\n  }\n}\n\nexport function deserializeSpecifier(specifier: string): Specifier {\n  let obj: Specifier = {};\n\n  if (specifier.indexOf(':') > -1) {\n    let [type, path] = specifier.split(':');\n    obj.type = type;\n\n    let pathSegments;\n\n    if (path.indexOf('/') === 0) {\n      pathSegments = path.substr(1).split('/');\n      obj.rootName = pathSegments.shift();\n      obj.collection = pathSegments.shift();\n    } else {\n      pathSegments = path.split('/');\n    }\n\n    if (pathSegments.length > 0) {\n      obj.name = pathSegments.pop();\n\n      if (pathSegments.length > 0) {\n        obj.namespace = pathSegments.join('/');\n      }\n    }\n\n  } else {\n    obj.type = specifier;\n  }\n\n  return obj;\n}\n","export function assert(description: string, test: any) {\n  if (!test) {\n    throw new Error('Assertion Failed: ' + description);\n  }\n}\n","import {\n  Resolver as IResolver,\n  Specifier,\n  isSpecifierStringAbsolute,\n  isSpecifierObjectAbsolute,\n  deserializeSpecifier,\n  serializeSpecifier\n} from '@glimmer/di';\nimport { assert } from './utils/debug';\nimport { ModuleRegistry } from './module-registry';\nimport { ResolverConfiguration } from './resolver-configuration';\n\nexport default class Resolver implements IResolver {\n  public config: ResolverConfiguration;\n  public registry: ModuleRegistry;\n\n  constructor(config: ResolverConfiguration, registry: ModuleRegistry) {\n    this.config = config;\n    this.registry = registry;\n  }\n\n  identify(specifier: string, referrer?: string): string {\n    if (isSpecifierStringAbsolute(specifier)) {\n      return specifier;\n    }\n\n    let s = deserializeSpecifier(specifier);\n    let result: string;\n\n    if (referrer) {\n      let r = deserializeSpecifier(referrer);\n\n      if (isSpecifierObjectAbsolute(r)) {\n        assert('Specifier must not include a rootName, collection, or namespace when combined with an absolute referrer', s.rootName === undefined && s.collection === undefined && s.namespace === undefined);\n\n        // Look locally in the referrer's namespace\n        s.rootName = r.rootName;\n        s.collection = r.collection;\n        if (s.name) {\n          s.namespace = r.namespace ? r.namespace + '/' + r.name : r.name;\n        } else {\n          s.namespace = r.namespace;\n          s.name = r.name;\n        }\n        if (result = this._serializeAndVerify(s)) { return result; }\n\n        // Look for a private collection in the referrer's namespace\n        let privateCollection = this._definitiveCollection(s.type);\n        if (privateCollection) {\n          s.namespace += '/-' + privateCollection;\n          if (result = this._serializeAndVerify(s)) { return result; }\n        }\n\n        // Because local and private resolution has failed, clear all but `name` and `type`\n        // to proceed with top-level resolution\n        s.rootName = s.collection = s.namespace = undefined;\n      } else {\n        assert('Referrer must either be \"absolute\" or include a `type` to determine the associated type', r.type);\n\n        // Look in the definitive collection for the associated type\n        s.collection = this._definitiveCollection(r.type);\n        assert(`'${r.type}' does not have a definitive collection`, s.collection);\n      }\n    }\n\n    // If the collection is unspecified, use the definitive collection for the `type`\n    if (!s.collection) {\n      s.collection = this._definitiveCollection(s.type);\n      assert(`'${s.type}' does not have a definitive collection`, s.collection);\n    }\n\n    if (!s.rootName) {\n      // If the root name is unspecified, try the app's `rootName` first\n      s.rootName = this.config.app.rootName || 'app';\n      if (result = this._serializeAndVerify(s)) { return result; }\n\n      // Then look for an addon with a matching `rootName`\n      let addonDef;\n      if (s.namespace) {\n        addonDef = this.config.addons && this.config.addons[s.namespace];\n        s.rootName = s.namespace;\n        s.namespace = undefined;\n\n      } else {\n        addonDef = this.config.addons && this.config.addons[s.name];\n        s.rootName = s.name;\n        s.name = 'main';\n      }\n    }\n\n    if (result = this._serializeAndVerify(s)) { return result; }\n  }\n\n  retrieve(specifier: string): any {\n    return this.registry.get(specifier);\n  }\n\n  resolve(specifier: string, referrer?: string): any {\n    let id = this.identify(specifier, referrer);\n    if (id) {\n      return this.retrieve(id);\n    }\n  }\n\n  private _definitiveCollection(type: string): string {\n    let typeDef = this.config.types[type];\n    assert(`'${type}' is not a recognized type`, typeDef);\n    return typeDef.definitiveCollection;\n  }\n\n  private _serializeAndVerify(specifier: Specifier): string {\n    let serialized = serializeSpecifier(specifier);\n    if (this.registry.has(serialized)) {\n      return serialized;\n    }\n  }\n}\n","export default {\"id\":\"mbJByemq\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[5,\\\"top-nav\\\",[],[[],[]],{\\\"statements\\\":[],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/web-ui/components/app-layout\"}};","export default {\"id\":\"RjEkdNl5\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"header\\\"],[9,\\\"class\\\",\\\"header\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"nav\\\"],[9,\\\"class\\\",\\\"inner\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"container-logo\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#/catalog/1\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"img\\\"],[9,\\\"alt\\\",\\\"Rapid Stack\\\"],[9,\\\"class\\\",\\\"logo\\\"],[9,\\\"src\\\",\\\"/assets/icon.jpg\\\"],[7],[8],[0,\\\"\\\\n        \\\"],[6,\\\"span\\\"],[7],[0,\\\"\\\\n        Rapid Stack |\\\\n        \\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/web-ui/components/app-layout/top-nav\"}};","import { DEBUG } from \"@glimmer/env\";\nimport { Tag, DirtyableTag, TagWrapper, combine, CONSTANT_TAG } from \"@glimmer/reference\";\nimport { dict, Dict } from \"@glimmer/util\";\n\n/**\n * @decorator\n *\n * Marks a property as tracked.\n *\n * By default, a component's properties are expected to be static,\n * meaning you are not able to update them and have the template update accordingly.\n * Marking a property as tracked means that when that property changes,\n * a rerender of the component is scheduled so the template is kept up to date.\n *\n * @param dependencies Optional dependents to be tracked.\n */\nexport function tracked(...dependencies: string[]): MethodDecorator;\nexport function tracked(target: any, key: any): any;\nexport function tracked(target: any, key: any, descriptor: PropertyDescriptor): PropertyDescriptor;\nexport function tracked(...dependencies: any[]): any {\n  let [target, key, descriptor] = dependencies;\n\n  if (typeof target === \"string\") {\n    return function(target: any, key: string | Symbol, descriptor: PropertyDescriptor) {\n      return descriptorForTrackedComputedProperty(target, key, descriptor, dependencies);\n    };\n  } else {\n    if (descriptor) {\n      return descriptorForTrackedComputedProperty(target, key, descriptor, []);\n    } else {\n      installTrackedProperty(target, key);\n    }\n  }\n}\n\nfunction descriptorForTrackedComputedProperty(target: any, key: any, descriptor: PropertyDescriptor, dependencies: string[]): PropertyDescriptor {\n  let meta = metaFor(target);\n  meta.trackedProperties[key] = true;\n  meta.trackedPropertyDependencies[key] = dependencies || [];\n\n  return {\n    enumerable: true,\n    configurable: false,\n    get: descriptor.get,\n    set: function() {\n      metaFor(this).dirtyableTagFor(key).inner.dirty();\n      descriptor.set.apply(this, arguments);\n      propertyDidChange();\n    }\n  };\n}\n\nexport type Key = string;\n\n/**\n  Installs a getter/setter for change tracking. The accessor\n  acts just like a normal property, but it triggers the `propertyDidChange`\n  hook when written to.\n\n  Values are saved on the object using a \"shadow key,\" or a symbol based on the\n  tracked property name. Sets write the value to the shadow key, and gets read\n  from it.\n */\nfunction installTrackedProperty(target: any, key: Key) {\n  let value: any;\n  let shadowKey = Symbol(key);\n\n  let meta = metaFor(target);\n  meta.trackedProperties[key] = true;\n\n  if (target[key] !== undefined) {\n    value = target[key];\n  }\n\n  Object.defineProperty(target, key, {\n    configurable: true,\n\n    get() {\n      return this[shadowKey];\n    },\n\n    set(newValue) {\n      metaFor(this).dirtyableTagFor(key).inner.dirty();\n      this[shadowKey] = newValue;\n      propertyDidChange();\n    }\n  });\n}\n\n/**\n * Stores bookkeeping information about tracked properties on the target object\n * and includes helper methods for manipulating and retrieving that data.\n *\n * Computed properties (i.e., tracked getters/setters) deserve some explanation.\n * A computed property is invalidated when either it is set, or one of its\n * dependencies is invalidated. Therefore, we store two tags for each computed\n * property:\n *\n * 1. The dirtyable tag that we invalidate when the setter is invoked.\n * 2. A union tag (tag combinator) of the dirtyable tag and all of the computed\n *    property's dependencies' tags, used by Glimmer to determine \"does this\n *    computed property need to be recomputed?\"\n */\nexport default class Meta {\n  tags: Dict<Tag>;\n  computedPropertyTags: Dict<TagWrapper<DirtyableTag>>;\n  trackedProperties: Dict<boolean>;\n  trackedPropertyDependencies: Dict<string[]>;\n\n  constructor(parent: Meta) {\n    this.tags = dict<Tag>();\n    this.computedPropertyTags = dict<TagWrapper<DirtyableTag>>();\n    this.trackedProperties = parent ? Object.create(parent.trackedProperties) : dict<boolean>();\n    this.trackedPropertyDependencies = parent ? Object.create(parent.trackedPropertyDependencies) : dict<string[]>();\n  }\n\n  /**\n   * The tag representing whether the given property should be recomputed. Used\n   * by e.g. Glimmer VM to detect when a property should be re-rendered. Think\n   * of this as the \"public-facing\" tag.\n   *\n   * For static tracked properties, this is a single DirtyableTag. For computed\n   * properties, it is a combinator of the property's DirtyableTag as well as\n   * all of its dependencies' tags.\n   */\n  tagFor(key: Key): Tag {\n    let tag = this.tags[key];\n    if (tag) { return tag; }\n\n    let dependencies;\n    if (dependencies = this.trackedPropertyDependencies[key]) {\n      return this.tags[key] = combinatorForComputedProperties(this, key, dependencies);\n    }\n\n    return this.tags[key] = DirtyableTag.create();\n  }\n\n  /**\n   * The tag used internally to invalidate when a tracked property is set. For\n   * static properties, this is the same DirtyableTag returned from `tagFor`.\n   * For computed properties, it is the DirtyableTag used as one of the tags in\n   * the tag combinator of the CP and its dependencies.\n  */\n  dirtyableTagFor(key: Key): TagWrapper<DirtyableTag> {\n    let dependencies = this.trackedPropertyDependencies[key];\n    let tag;\n\n    if (dependencies) {\n      // The key is for a computed property.\n      tag = this.computedPropertyTags[key];\n      if (tag) { return tag; }\n      return this.computedPropertyTags[key] = DirtyableTag.create();\n    } else {\n      // The key is for a static property.\n      tag = this.tags[key];\n      if (tag) { return tag as TagWrapper<DirtyableTag>; }\n      return this.tags[key] = DirtyableTag.create();\n    }\n  }\n}\n\nfunction combinatorForComputedProperties(meta: Meta, key: Key, dependencies: Key[] | void): Tag {\n  // Start off with the tag for the CP's own dirty state.\n  let tags: Tag[] = [meta.dirtyableTagFor(key)];\n\n  // Next, add in all of the tags for its dependencies.\n  if (dependencies && dependencies.length) {\n    for (let i = 0; i < dependencies.length; i++) {\n      tags.push(meta.tagFor(dependencies[i]));\n    }\n  }\n\n  // Return a combinator across the CP's tags and its dependencies' tags.\n  return combine(tags);\n}\n\nexport interface Interceptors {\n  [key: string]: boolean;\n}\n\nlet META = Symbol(\"ember-object\");\n\nexport function metaFor(obj: any): Meta {\n  let meta = obj[META];\n  if (meta && hasOwnProperty(obj, META)) {\n    return meta;\n  }\n\n  return obj[META] = new Meta(meta);\n}\n\nlet hOP = Object.prototype.hasOwnProperty;\nfunction hasOwnProperty(obj: any, key: symbol) {\n  return hOP.call(obj, key);\n}\n\nlet propertyDidChange = function() {};\n\nexport function setPropertyDidChange(cb: () => void) {\n  propertyDidChange = cb;\n}\n\nexport function hasTag(obj: any, key: string): boolean {\n  let meta = obj[META] as Meta;\n\n  if (!obj[META]) { return false; }\n  if (!meta.trackedProperties[key]) { return false; }\n\n  return true;\n}\n\nexport class UntrackedPropertyError extends Error {\n  static for(obj: any, key: string): UntrackedPropertyError {\n    return new UntrackedPropertyError(obj, key, `The property '${key}' on ${obj} was changed after being rendered. If you want to change a property used in a template after the component has rendered, mark the property as a tracked property with the @tracked decorator.`);\n  }\n\n  constructor(public target: any, public key: string, message: string) {\n    super(message);\n  }\n}\n\n/**\n * Function that can be used in development mode to generate more meaningful\n * error messages.\n */\nexport interface UntrackedPropertyErrorThrower {\n  (obj: any, key: string): void;\n}\n\nfunction defaultErrorThrower(obj: any, key: string): UntrackedPropertyError {\n  throw UntrackedPropertyError.for(obj, key);\n}\n\nexport function tagForProperty(obj: any, key: string, throwError: UntrackedPropertyErrorThrower = defaultErrorThrower): Tag {\n  if (typeof obj === \"object\" && obj) {\n    if (DEBUG && !hasTag(obj, key)) {\n      installDevModeErrorInterceptor(obj, key, throwError);\n    }\n\n    let meta = metaFor(obj);\n    return meta.tagFor(key);\n  } else {\n    return CONSTANT_TAG;\n  }\n}\n\n/**\n * In development mode only, we install an ad hoc setter on properties where a\n * tag is requested (i.e., it was used in a template) without being tracked. In\n * cases where the property is set, we raise an error.\n */\nfunction installDevModeErrorInterceptor(obj: object, key: string, throwError: UntrackedPropertyErrorThrower) {\n  let target = obj;\n  let descriptor: PropertyDescriptor;\n\n  // Find the descriptor for the current property. We may need to walk the\n  // prototype chain to do so. If the property is undefined, we may never get a\n  // descriptor here.\n  let hasOwnDescriptor = true;\n  while (target) {\n    descriptor = Object.getOwnPropertyDescriptor(target, key);\n    if (descriptor) { break; }\n    hasOwnDescriptor = false;\n    target = Object.getPrototypeOf(target);\n  }\n\n  // If possible, define a property descriptor that passes through the current\n  // value on reads but throws an exception on writes.\n  if (descriptor) {\n    if (descriptor.configurable || !hasOwnDescriptor) {\n      Object.defineProperty(obj, key, {\n        configurable: descriptor.configurable,\n        enumerable: descriptor.enumerable,\n\n        get() {\n          if (descriptor.get) {\n            return descriptor.get.call(this);\n          } else {\n            return descriptor.value;\n          }\n        },\n\n        set() {\n          throwError(this, key);\n        }\n      });\n    }\n  } else {\n    Object.defineProperty(obj, key, {\n      set() {\n        throwError(this, key);\n      }\n    });\n  }\n}\n","import { Simple } from \"@glimmer/interfaces\";\nimport { metaFor } from \"./tracked\";\n\n/**\n * The `Component` class defines an encapsulated UI element that is rendered to\n * the DOM. A component is made up of a template and, optionally, this component\n * object.\n *\n * ## Defining a Component\n *\n * To define a component, subclass `Component` and add your own properties,\n * methods and lifecycle hooks:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n * }\n * ```\n *\n * ## Lifecycle Hooks\n *\n * Lifecycle hooks allow you to respond to changes to a component, such as when\n * it gets created, rendered, updated or destroyed. To add a lifecycle hook to a\n * component, implement the hook as a method on your component subclass.\n *\n * For example, to be notified when Glimmer has rendered your component so you\n * can attach a legacy jQuery plugin, implement the `didInsertElement()` method:\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   didInsertElement() {\n *     $(this.element).pickadate();\n *   }\n * }\n * ```\n *\n * ## Data for Templates\n *\n * `Component`s have two different kinds of data, or state, that can be\n * displayed in templates:\n *\n * 1. Arguments\n * 2. Properties\n *\n * Arguments are data that is passed in to a component from its parent\n * component. For example, if I have a `user-greeting` component, I can pass it\n * a name and greeting to use:\n *\n * ```hbs\n * <user-greeting @name=\"Ricardo\" @greeting=\"Olá\">\n * ```\n *\n * Inside my `user-greeting` template, I can access the `@name` and `@greeting`\n * arguments that I've been given:\n *\n * ```hbs\n * {{@greeting}}, {{@name}}!\n * ```\n *\n * Arguments are also available inside my component:\n *\n * ```ts\n * console.log(this.args.greeting); // prints \"Olá\"\n * ```\n *\n * Properties, on the other hand, are internal to the component and declared in\n * the class. You can use properties to store data that you want to show in the\n * template, or pass to another component as an argument.\n *\n * ```ts\n * import Component from '@glimmer/component';\n *\n * export default class extends Component {\n *   user = {\n *     name: 'Robbie'\n *   }\n * }\n * ```\n *\n * In the above example, we've defined a component with a `user` property that\n * contains an object with its own `name` property.\n *\n * We can render that property in our template:\n *\n * ```hbs\n * Hello, {{user.name}}!\n * ```\n *\n * We can also take that property and pass it as an argument to the\n * `user-greeting` component we defined above:\n *\n * ```hbs\n * <user-greeting @greeting=\"Hello\" @name={{user.name}} />\n * ```\n *\n * ## Arguments vs. Properties\n *\n * Remember, arguments are data that was given to your component by its parent\n * component, and properties are data your component has defined for itself.\n *\n * You can tell the difference between arguments and properties in templates\n * because arguments always start with an `@` sign (think \"A is for arguments\"):\n *\n * ```hbs\n * {{@firstName}}\n * ```\n *\n * We know that `@firstName` came from the parent component, not the current\n * component, because it starts with `@` and is therefore an argument.\n *\n * On the other hand, if we see:\n *\n * ```hbs\n * {{name}}\n * ```\n *\n * We know that `name` is a property on the component. If we want to know where\n * the data is coming from, we can go look at our component class to find out.\n *\n * Inside the component itself, arguments always show up inside the component's\n * `args` property. For example, if `{{@firstName}}` is `Tom` in the template,\n * inside the component `this.args.firstName` would also be `Tom`.\n */\nclass Component {\n  /**\n   * The element corresponding to the top-level element of the component's template.\n   * You should not try to access this property until after the component's `didInsertElement()`\n   * lifecycle hook is called.\n   */\n  element: Simple.Element = null;\n\n  /**\n   * Development-mode only name of the component, useful for debugging.\n   */\n  debugName: string = null;\n\n  /**\n   * Named arguments passed to the component from its parent component.\n   * They can be accessed in JavaScript via `this.args.argumentName` and in the template via `@argumentName`.\n   *\n   * Say you have the following component, which will have two `args`, `firstName` and `lastName`:\n   *\n   * ```hbs\n   * <my-component @firstName=\"Arthur\" @lastName=\"Dent\" />\n   * ```\n   *\n   * If you needed to calculate `fullName` by combining both of them, you would do:\n   *\n   * ```ts\n   * didInsertElement() {\n   *   console.log(`Hi, my full name is ${this.args.firstName} ${this.args.lastName}`);\n   * }\n   * ```\n   *\n   * While in the template you could do:\n   *\n   * ```hbs\n   * <p>Welcome, {{@firstName}} {{@lastName}}!</p>\n   * ```\n   *\n   */\n  get args() {\n    return this.__args__;\n  }\n\n  set args(args) {\n    this.__args__ = args;\n    metaFor(this).dirtyableTagFor(\"args\").inner.dirty();\n  }\n\n  /** @private\n   * Slot on the component to save Arguments object passed to the `args` setter.\n   */\n  private __args__: any = null;\n\n  static create(injections: any) {\n    return new this(injections);\n  }\n\n  /**\n   * Constructs a new component and assigns itself the passed properties. You\n   * should not construct new components yourself. Instead, Glimmer will\n   * instantiate new components automatically as it renders.\n   *\n   * @param options\n   */\n  constructor(options: object) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * Called when the component has been inserted into the DOM.\n   * Override this function to do any set up that requires an element in the document body.\n   */\n  didInsertElement() { }\n\n  /**\n   * Called when the component has updated and rerendered itself.\n   * Called only during a rerender, not during an initial render.\n   */\n  didUpdate() { }\n\n  /**\n   * Called before the component has been removed from the DOM.\n   */\n  willDestroy() { }\n\n  destroy() {\n    this.willDestroy();\n  }\n\n  toString() {\n    return `${this.debugName} component`;\n  }\n}\n\nexport default Component;\n\nexport interface ComponentFactory {\n  create(injections: object): Component;\n}\n","import {\n  dict\n} from \"@glimmer/util\";\nimport {\n  PathReference,\n  CONSTANT_TAG,\n  ConstReference,\n  DirtyableTag,\n  UpdatableTag,\n  combine,\n  isConst,\n  Tag,\n  TagWrapper\n} from \"@glimmer/reference\";\nimport {\n  ConditionalReference as GlimmerConditionalReference,\n  PrimitiveReference\n} from \"@glimmer/runtime\";\nimport { tagForProperty, UntrackedPropertyError } from \"./tracked\";\n\n/**\n * The base PathReference.\n */\nexport abstract class ComponentPathReference<T> implements PathReference<T> {\n  abstract value(): T;\n  abstract get tag(): Tag;\n\n  get(key: string): PathReference<any> {\n    return PropertyReference.create(this, key);\n  }\n}\n\nexport abstract class CachedReference<T> extends ComponentPathReference<T> {\n  private _lastRevision: number | null = null;\n  private _lastValue: any = null;\n\n  abstract compute(): T;\n\n  value() {\n    let { tag, _lastRevision, _lastValue } = this;\n\n    if (!_lastRevision || !tag.validate(_lastRevision)) {\n      _lastValue = this._lastValue = this.compute();\n      this._lastRevision = tag.value();\n    }\n\n    return _lastValue;\n  }\n}\n\nexport class RootReference extends ConstReference<object> {\n  private children = dict<RootPropertyReference>();\n\n  get(propertyKey: string) {\n    let ref = this.children[propertyKey];\n\n    if (!ref) {\n      ref = this.children[propertyKey] = new RootPropertyReference(this.inner, propertyKey);\n    }\n\n    return ref;\n  }\n}\n\nexport abstract class PropertyReference extends CachedReference<any> {\n  static create(parentReference: PathReference<any>, propertyKey: string) {\n    if (isConst(parentReference)) {\n      return new RootPropertyReference(parentReference.value(), propertyKey);\n    } else {\n      return new NestedPropertyReference(parentReference, propertyKey);\n    }\n  }\n\n  get(key: string): PathReference<any>  {\n    return new NestedPropertyReference(this, key);\n  }\n}\n\nfunction buildError(obj: any, key: string) {\n  let message = `The '${key}' property on the ${obj} was changed after it had been rendered. Properties that change after being rendered must be tracked. Use the @tracked decorator to mark this as a tracked property.`;\n  throw new UntrackedPropertyError(obj, key, message);\n}\n\nexport class RootPropertyReference extends PropertyReference {\n  tag: Tag;\n  private _parentValue: object;\n  private _propertyKey: string;\n\n  constructor(parentValue: object, propertyKey: string) {\n    super();\n\n    this._parentValue = parentValue;\n    this._propertyKey = propertyKey;\n    this.tag = tagForProperty(parentValue, propertyKey, buildError);\n  }\n\n  compute(): any {\n    return (this._parentValue as any)[this._propertyKey];\n  }\n}\n\nexport class NestedPropertyReference extends PropertyReference {\n  public tag: Tag;\n  private _parentReference: PathReference<any>;\n  private _parentObjectTag: TagWrapper<UpdatableTag>;\n  private _propertyKey: string;\n\n  constructor(parentReference: PathReference<any>, propertyKey: string) {\n    super();\n\n    let parentReferenceTag = parentReference.tag;\n    let parentObjectTag = UpdatableTag.create(CONSTANT_TAG);\n\n    this._parentReference = parentReference;\n    this._parentObjectTag = parentObjectTag;\n    this._propertyKey = propertyKey;\n\n    this.tag = combine([parentReferenceTag, parentObjectTag]);\n  }\n\n  compute() {\n    let { _parentReference, _parentObjectTag, _propertyKey } = this;\n\n    let parentValue = _parentReference.value();\n\n    _parentObjectTag.inner.update(tagForProperty(parentValue, _propertyKey));\n\n    if (typeof parentValue === \"string\" && _propertyKey === \"length\") {\n      return parentValue.length;\n    }\n\n    if (typeof parentValue === \"object\" && parentValue) {\n      return parentValue[_propertyKey];\n    } else {\n      return undefined;\n    }\n  }\n}\n\nexport class UpdatableReference<T> extends ComponentPathReference<T> {\n  public tag: TagWrapper<DirtyableTag>;\n  private _value: T;\n\n  constructor(value: T) {\n    super();\n\n    this.tag = DirtyableTag.create();\n    this._value = value;\n  }\n\n  value() {\n    return this._value;\n  }\n\n  update(value: T) {\n    let { _value } = this;\n\n    if (value !== _value) {\n      this.tag.inner.dirty();\n      this._value = value;\n    }\n  }\n}\n\nexport class ConditionalReference extends GlimmerConditionalReference {\n  static create(reference: PathReference<any>) {\n    if (isConst(reference)) {\n      let value = reference.value();\n      return PrimitiveReference.create(value);\n    }\n\n    return new ConditionalReference(reference);\n  }\n}\n","import {\n  getOwner,\n  setOwner,\n  Factory,\n  Owner\n} from \"@glimmer/di\";\nimport {\n  Bounds,\n  ComponentManager as GlimmerComponentManager,\n  DynamicScope,\n  Environment,\n  CompiledDynamicProgram,\n  Arguments,\n  Template,\n  CapturedArguments,\n  compileLayout,\n  ComponentLayoutBuilder\n} from \"@glimmer/runtime\";\nimport {\n  TemplateMeta\n} from \"@glimmer/wire-format\";\nimport Component from \"./component\";\nimport ComponentDefinition from \"./component-definition\";\nimport { RootReference } from \"./references\";\nimport { Dict, Destroyable, Opaque } from \"@glimmer/util\";\nimport { Tag } from \"@glimmer/reference\";\nimport { Simple } from \"@glimmer/interfaces\";\n\nexport interface ConstructorOptions {\n  env: Environment;\n}\n\nexport class ComponentStateBucket {\n  public name: string;\n  public component: Component;\n  private args: CapturedArguments;\n\n  constructor(definition: ComponentDefinition, args: CapturedArguments, owner: Owner) {\n    let componentFactory = definition.componentFactory;\n    let name = definition.name;\n\n    this.args = args;\n\n    let injections = {\n      debugName: name,\n      args: this.namedArgsSnapshot()\n    };\n\n    setOwner(injections, owner);\n    this.component = componentFactory.create(injections);\n  }\n\n  get tag(): Tag {\n    return this.args.tag;\n  }\n\n  namedArgsSnapshot(): Readonly<Dict<Opaque>> {\n    return Object.freeze(this.args.named.value());\n  }\n}\n\nclass LayoutCompiler {\n  name: string;\n  template: Template<TemplateMeta>;\n\n  constructor(name: string, template: Template<TemplateMeta>) {\n    this.template = template;\n    this.name = name;\n  }\n\n  compile(builder: ComponentLayoutBuilder): void {\n    builder.fromLayout(this.name, this.template);\n  }\n}\n\nexport default class ComponentManager implements GlimmerComponentManager<ComponentStateBucket> {\n  private env: Environment;\n\n  static create(options: ConstructorOptions): ComponentManager {\n    return new ComponentManager(options);\n  }\n\n  constructor(options: ConstructorOptions) {\n    this.env = options.env;\n  }\n\n  prepareArgs(definition: ComponentDefinition, args: Arguments): null {\n    return null;\n  }\n\n  create(environment: Environment, definition: ComponentDefinition, volatileArgs: Arguments): ComponentStateBucket {\n    let owner = getOwner(this.env);\n    return new ComponentStateBucket(definition, volatileArgs.capture(), owner);\n  }\n\n  createComponentDefinition(name: string, template: Template<any>, componentFactory?: Factory<Component>): ComponentDefinition {\n    if (!componentFactory) {\n      componentFactory = {\n        class: Component,\n        create(injections: object) {\n          return this.class.create(injections);\n        }\n      }\n    }\n\n    return new ComponentDefinition(name, this, template, componentFactory);\n  }\n\n  layoutFor(definition: ComponentDefinition, bucket: ComponentStateBucket, env: Environment): CompiledDynamicProgram {\n    let template = definition.template;\n\n    return compileLayout(new LayoutCompiler(definition.name, template), this.env);\n  }\n\n  getSelf(bucket: ComponentStateBucket): RootReference {\n    return new RootReference(bucket.component);\n  }\n\n  didCreateElement(bucket: ComponentStateBucket, element: Simple.Element) {\n    if (!bucket) { return; }\n    bucket.component.element = element;\n  }\n\n  didRenderLayout(bucket: ComponentStateBucket, bounds: Bounds) {\n  }\n\n  didCreate(bucket: ComponentStateBucket) {\n    bucket && bucket.component.didInsertElement();\n  }\n\n  getTag({ tag }: ComponentStateBucket): Tag {\n    return tag;\n  }\n\n  update(bucket: ComponentStateBucket, scope: DynamicScope) {\n  }\n\n  didUpdateLayout() {}\n\n  didUpdate(bucket: ComponentStateBucket) {\n    if (!bucket) { return; }\n\n    // TODO: This should be moved to `didUpdate`, but there's currently a\n    // Glimmer bug that causes it not to be called if the layout doesn't update.\n    let { component } = bucket;\n\n    component.args = bucket.namedArgsSnapshot();\n    component.didUpdate();\n  }\n\n  getDestructor(bucket: ComponentStateBucket): Destroyable {\n    return bucket.component;\n  }\n}\n","export default {\"id\":\"7lOqBimr\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[5,\\\"app-layout\\\",[],[[],[]],{\\\"statements\\\":[],\\\"parameters\\\":[]}],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\",\"meta\":{\"specifier\":\"template:/web-ui/components/web-ui\"}};","import { default as __ui_components_app_layout_template__ } from '../src/ui/components/app-layout/template';\nimport { default as __ui_components_app_layout_top_nav_template__ } from '../src/ui/components/app-layout/top-nav/template';\nimport { default as __ui_components_web_ui_component__ } from '../src/ui/components/web-ui/component';\nimport { default as __ui_components_web_ui_template__ } from '../src/ui/components/web-ui/template';\nexport default {'template:/web-ui/components/app-layout': __ui_components_app_layout_template__,'template:/web-ui/components/app-layout/top-nav': __ui_components_app_layout_top_nav_template__,'component:/web-ui/components/web-ui': __ui_components_web_ui_component__,'template:/web-ui/components/web-ui': __ui_components_web_ui_template__};\n","export default {\"app\":{\"name\":\"web-ui\",\"rootName\":\"web-ui\"},\"types\":{\"application\":{\"definitiveCollection\":\"main\"},\"component\":{\"definitiveCollection\":\"components\"},\"component-test\":{\"unresolvable\":true},\"helper\":{\"definitiveCollection\":\"components\"},\"helper-test\":{\"unresolvable\":true},\"renderer\":{\"definitiveCollection\":\"main\"},\"template\":{\"definitiveCollection\":\"components\"}},\"collections\":{\"main\":{\"types\":[\"application\",\"renderer\"]},\"components\":{\"group\":\"ui\",\"types\":[\"component\",\"component-test\",\"template\",\"helper\",\"helper-test\"],\"defaultType\":\"component\",\"privateCollections\":[\"utils\"]},\"styles\":{\"group\":\"ui\",\"unresolvable\":true},\"utils\":{\"unresolvable\":true}}};\n","import Application from '@glimmer/application';\nimport Resolver, { BasicModuleRegistry } from '@glimmer/resolver';\nimport moduleMap from '../config/module-map';\nimport resolverConfiguration from '../config/resolver-configuration';\n\nexport default class App extends Application {\n  constructor() {\n    let moduleRegistry = new BasicModuleRegistry(moduleMap);\n    let resolver = new Resolver(resolverConfiguration, moduleRegistry);\n\n    super({\n      rootName: resolverConfiguration.app.rootName,\n      resolver\n    });\n  }\n}\n","import Application from '@glimmer/application';\n\nexport default function initializeCustomElements(app: Application, customElementDefinitions: string[]): void {\n  customElementDefinitions.forEach((name) => {\n    initializeCustomElement(app, name);\n  });\n}\n\nfunction initializeCustomElement(app: Application, name: string): void {\n  function GlimmerElement() {\n    return Reflect.construct(HTMLElement, [], GlimmerElement);\n  }\n  GlimmerElement.prototype = Object.create(HTMLElement.prototype, {\n    constructor: { value: GlimmerElement },\n    connectedCallback: {\n      value: function connectedCallback(): void {\n        let placeholder = document.createElement('span');\n        let parent = this.parentNode;\n\n        parent.insertBefore(placeholder, this);\n        parent.removeChild(this);\n\n        app.renderComponent(name, parent, placeholder);\n\n        whenRendered(app, () => {\n          let customElement = this as Element;\n          let glimmerElement = placeholder.previousElementSibling;\n\n          placeholder.remove();\n          assignAttributes(customElement, glimmerElement);\n        });\n      }\n    }\n  });\n\n  window.customElements.define(name, GlimmerElement);\n}\n\nfunction assignAttributes(fromElement: Element, toElement: Element): void {\n  let attributes = fromElement.attributes;\n\n  for (let i = 0; i < attributes.length; i++) {\n    let { name, value } = attributes.item(i);\n    toElement.setAttribute(name, value);\n  }\n}\n\nfunction whenRendered(app, callback) {\n  if (app['_rendering']) {\n    setTimeout(whenRendered, 10, app, callback);\n  } else {\n    callback();\n  }\n}\n","import App from './main';\nimport { ComponentManager, setPropertyDidChange } from '@glimmer/component';\nimport initializeCustomElements from '@glimmer/web-component';\n\nconst app = new App();\nconst containerElement = document.getElementById('app');\n\nsetPropertyDidChange(() => {\n  app.scheduleRerender();\n});\n\napp.registerInitializer({\n  initialize(registry) {\n    registry.register(`component-manager:/${app.rootName}/component-managers/main`, ComponentManager);\n  }\n});\n\napp.renderComponent('web-ui', containerElement, null);\n\napp.boot();\ninitializeCustomElements(app, ['web-ui']);\n"],"names":["unwrap","val","undefined","Error","expect","message","unreachable","typePos","lastOperand","debugAssert","test","msg","LogLevel","NullConsole","_message","ALWAYS","Logger","console","level","f","force","stackTrace","skipped","Trace","log","trace","Debug","Warn","warn","error","_console","LOG_LEVEL","objKeys","Object","keys","assign","obj","i","arguments","length","assignment","j","key","fillNulls","count","arr","Array","GUID","initializeGuid","object","_guid","ensureGuid","proto","create","EmptyObject","prototype","dict","DictSet","callback","dictKeys","Stack","stack","current","item","push","pop","len","ListNode","value","next","prev","LinkedList","clear","fromSlice","slice","list","forEachNode","n","append","clone","_head","_tail","out","start","end","reference","before","node","needle","tail","remove","insertBefore","ListSlice","head","toList","nextNode","EMPTY_SLICE","HAS_NATIVE_WEAKMAP","hasWeakMap","WeakMap","instance","toString","call","HAS_TYPED_ARRAYS","Uint32Array","A","EMPTY_ARRAY","freeze","Register","AppendOpcodes","evaluateOpcode","name","evaluate","vm","opcode","type","func","APPEND_OPCODES","AbstractOpcode","guid","UpdatingOpcode","CONSTANT","INITIAL","VOLATILE","NaN","RevisionTag","snapshot","id","VALUE","VALIDATE","TagWrapper","inner","register","Type","tag","validate","_tag","CONSTANT_TAG","VOLATILE_TAG","$REVISION","CURRENT_TAG","isConst","isConstTag","DirtyableTag","revision","combineTagged","tagged","optimized","l","_combine","combineSlice","combine","tags","TagsPair","TagsCombinator","CachedTag","lastChecked","lastValue","compute","first","second","Math","max","UpdatableTag","lastUpdated","invalidate","CachedReference","lastRevision","MapperReference","mapper","map","ReferenceCache","initialized","initialize","NOT_MODIFIED","isModified","ConstReference","ListItem","iterable","result","valueReferenceFor","retained","seen","memo","memoReferenceFor","updateValueReference","updateMemoReference","IterationArtifacts","iterator","iterate","isEmpty","ReferenceIterator","artifacts","Phase","IteratorSynchronizer","target","phase","Append","nextAppend","Prune","nextPrune","Done","nextDone","seek","startPrune","nextRetain","has","nextMove","nextInsert","update","retain","found","get","wasSeen","move","advanceToKey","insert","shouldRemove","delete","reset","done","PrimitiveReference","UNDEFINED_REFERENCE","NULL_REFERENCE","TRUE_REFERENCE","FALSE_REFERENCE","ValueReference","StringReference","_key","lengthReference","ConditionalReference","toBool","ConcatReference","parts","castToString","join","String","add","op1","_helper","helper","constants","getFunction","args","_function","symbol","expr","referenceForSymbol","scope","bindSymbol","_name","getString","locals","getPartialMap","ref","getSelf","symbols","op2","bindCallerScope","pushRootScope","_block","block","getBlock","hasBlock","hasBlockParams","symbolTable","parameters","reverse","normalizeStringValue","normalizeTrustedValue","isString","isSafeString","toHTML","isNode","nodeType","isFragment","pushChildScope","popScope","pushDynamicScope","popDynamicScope","number","other","getOther","primitive","flag","offset","position","fetchValue","dup","load","fetch","_names","names","getArray","bindDynamicScope","pushFrame","popFrame","enter","exit","compileDynamic","env","compiled","compileStatic","handle","_invoker","invoker","invoke","goto","cache","peek","updateWith","Assert","return","relative","returnTo","ConstTest","_env","SimpleTest","EnvironmentTest","toConditionalReference","_func","operand","revalidate","throw","expected","JSON","stringify","e","JumpIfNotModifiedOpcode","alwaysRevalidate","inspect","DidModifyOpcode","didModify","LabelOpcode","label","text","elements","appendText","appendComment","openElement","tagName","elementRef","nextSiblingRef","element","nextSibling","pushRemoteElement","popRemoteElement","operations","t0","flush","loadValue","flushElement","closeElement","_manager","manager","constructing","updateOperations","dynamicScope","modifier","scheduleInstallModifier","destructor","getDestructor","newDestroyable","getTag","UpdateModifierOpcode","scheduleUpdateModifier","_value","op3","_namespace","namespace","setStaticAttribute","trusting","attribute","setDynamicAttribute","UpdateDynamicAttributeOpcode","Arguments","positional","PositionalArguments","named","NamedArguments","setup","synthetic","fromTop","namedCount","positionalCount","pos","at","capture","_references","references","CapturedPositionalArguments","valueOf","idx","parseInt","_realNames","sliceName","indexOf","CapturedNamedArguments","_map","_definition","definition","component","ARGS","_state","preparedArgs","prepareArgs","atNames","atName","flags","state","hasDefaultBlock","UpdateComponentOpcode","beginCacheGroup","pushSimpleBlock","ComponentElementOperations","setAttribute","attributes","classes","deferred","attr","ClassListReference","ret","action","didCreateElement","expectConstructing","layoutFor","bounds","popBlock","didRenderLayout","didCreate","DidUpdateLayoutOpcode","commitCacheGroup","_vm","didUpdateLayout","didUpdate","COMPONENT_DEFINITION_BRAND","isComponentDefinition","ComponentDefinition","ComponentClass","IsComponentDefinitionReference","isTrusting","content","appendTrustingDynamicContent","appendCautiousDynamicContent","UpdateDynamicContentOpcode","debugCallback","context","info","ScopeInspector","evalInfo","slot","getSymbol","path","split","evalScope","getEvalScope","reduce","r","part","_symbols","_evalInfo","inspector","template","asPartial","IterablePresenceReference","listRef","iterableFor","relativeStart","enterList","exitList","breaks","tryOpcode","enterItem","Cursor","currentNode","cursor","lastChild","previousSibling","ConcreteBounds","parentNode","last","SingleNodeBounds","parent","single","parentElement","firstNode","lastNode","removeChild","DynamicContentBase","NewElementBuilder","forInitialRender","__appendTrustingDynamicContent","__appendCautiousDynamicContent","DynamicContentWrapper","DynamicTextContent","trusted","retry","normalized","textNode","nodeValue","DynamicNodeContent","DynamicHTMLContent","DynamicTrustedHTMLContent","newValue","First","Last","cursorStack","blockStack","dom","getAppendOperations","getDOM","builder","resume","tracker","pushBlockTracker","method","SimpleBlockTracker","UpdatableBlockTracker","BlockListTracker","isRemote","didAppendBounds","__openBlock","finalize","__closeBlock","__openElement","createElement","__flushElement","pushElement","didOpenElement","willCloseElement","popElement","RemoteBlockTracker","d","didAppendNode","string","__appendText","createTextNode","__appendNode","fragment","__appendFragment","firstChild","__appendComment","html","__appendHTML","insertHTMLBefore","wrapper","createComment","__setAttribute","DynamicAttribute","attributeFor","set","destroyables","nesting","destroy","didDestroy","boundList","_element","_node","_bounds","_d","_stack","RehydrateBuilder","lastMatchedNode","unmatchedAttributes","blockDepth","_candidate","candidate","isComment","getCloseBoundsDepth","depth","getOpenBoundsDepth","clearBlock","until","clearMismatch","candidateBounds","markerBounds","newBounds","isMarker","isTextNode","isSeparator","_operations","isElement","toUpperCase","unmatched","findByName","splice","__setProperty","removeAttribute","_nextSibling","unimplemented","boundsDepth","match","Number","array","SerializeBuilder","serializeBlockDepth","Node","TEXT_NODE","Opcodes","is","variant","isArray","Expressions","isUnknown","Unknown","isGet","Get","isConcat","Concat","isHelper","Helper","isHasBlock","HasBlock","isHasBlockParams","HasBlockParams","isUndefined","Undefined","isClientSide","ClientSideExpression","isMaybeLocal","MaybeLocal","isPrimitiveValue","Statements","isText","Text","isAppend","Comment","isModifier","Modifier","isBlock","Block","isComponent","Component","isOpenElement","OpenElement","isFlushElement","FlushElement","isCloseElement","CloseElement","isStaticAttr","StaticAttr","isDynamicAttr","DynamicAttr","isYield","Yield","isPartial","Partial","isDynamicArg","DynamicArg","isStaticArg","StaticArg","isTrustingAttr","TrustingAttr","isDebugger","Debugger","ClientSideStatement","isAttribute","isArgument","isParameter","getParameterName","s","Ops","CompiledStaticTemplate","CompiledDynamicTemplate","compileLayout","compilable","ComponentLayoutBuilder","compile","layout","WrappedBuilder","componentName","UnwrappedBuilder","attrs","ComponentTagBuilder","ComponentAttrsBuilder","meta","templateMeta","dynamicTag","getDynamic","staticTag","getStatic","b","startLabels","s1","jumpUnless","putComponentOperations","openDynamicElement","openElementWithOperations","s0","buffer","setComponentAttrs","invokeStatic","asBlock","stopLabels","hasEval","concat","ATTRS_BLOCK","asLayout","isDynamic","isStatic","staticTagName","dynamicTagName","ClientSide","FunctionExpression","ComponentBuilder","params","hash","_default","inverse","pushComponentManager","invokeComponent","definitionArgs","getDefinition","a","compileArgs","pushDynamicComponentManager","OpcodeBuilderDSL","RawInlineBlock","statements","CompilableTemplate","Labels","labels","targets","index","Target","program","heap","setbyaddr","BasicOpcodeBuilder","labelsStack","isComponentAttrs","malloc","size","nextPos","finishMalloc","enabled","patch","hasDefault","hasInverse","_comment","comment","reserve","sp","_primitive","callerCount","calleeCount","min","fp","setVariable","testFunc","function","_string","isCompilableExpression","OpcodeBuilder","pushImmediate","pushArgs","expression","dynamicContent","pushBlock","beginComponentTransaction","createComponent","registerComponentDestructor","getComponentSelf","getComponentLayout","invokeDynamic","InvokeDynamicLayout","scan","commitComponentTransaction","WireFormat","Compilers","funcs","sexp","STATEMENTS","CLIENT_SIDE","_sexp","hasModifier","lookupModifier","staticAttr","dynamicAttr","openPrimitiveElement","OpenComponentElement","DidCreateElement","SetComponentAttrs","DidRenderLayout","macros","inlines","returned","E","guardedAppend","_template","_inverse","templateBlock","inverseBlock","blocks","bindSelf","bindBlock","lookup","$eval","callerNames","numPositionalArgs","inverseSymbol","defaultSymbol","defaultBlock","bindEvalScope","GlimmerDebug","_attrs","hasComponentDefinition","child","attrsBlock","getComponentDefinition","stmts","PartialInvoker","outerSymbols","_partial","partial","partialSymbols","outerScope","partialScope","getCallerScope","bind","bindPartialMap","nameRef","hasPartial","lookupPartial","getPartialTemplate","compileDynamicBlock","InvokeDynamicYield","pushCallerScope","table","fromBase","to","compileList","debugger","EXPRESSIONS","CLIENT_SIDE_EXPRS","hasHelper","resolveMaybeLocal","getVariable","getProperty","lookupHelper","Blocks","missing","handled","BLOCKS","Inlines","INLINES","populateBuiltins","_hash","jump","jumpIf","putIterator","values","_params","expressions","compileStatement","statement","compileStatements","compiledStatic","compiledDynamic","staticBlock","Scanner","scanner","LayoutScanner","processStatement","processBeforeTopLevel","processInTopLevel","processTopLevelComponent","processIsOpenElement","attrsSymbol","Constants","strings","arrays","functions","others","badProtocols","badTags","badTagsForDataURI","badAttributes","badAttributesForDataURI","checkURI","checkDataURI","requiresSanitization","sanitizeAttributeValue","str","protocol","protocolForURL","normalizeProperty","slotName","lower","toLowerCase","preferAttr","ATTR_OVERRIDES","form","propName","innerHTMLWrapper","after","domChanges","document","DOMChangesClass","shouldApplyFix","div","DOMChangesWithInnerHTMLFix","parentTag","fixInnerHTML","treeConstruction","DOMTreeConstructionClass","DOMTreeConstructionWithInnerHTMLFix","referenceNode","wrappedHtml","innerHTML","childNodes","moveNodesBefore","SVG_NAMESPACE","svgNamespace","DOMChangesWithSVGInnerHTMLFix","namespaceURI","fixSVG","TreeConstructionClass","TreeConstructionWithSVGInnerHTMLFix","svg","createElementNS","DOMChangesWithTextNodeMergingFix","uselessComment","didSetUselessComment","nextPrevious","TreeConstructionWithTextNodeMergingFix","mergingTextDiv","insertAdjacentHTML","SVG_INTEGRATION_POINTS","foreignObject","desc","title","BLACKLIST_TABLE","forEach","doc","source","DOMOperations","setupUselessElement","uselessElement","isElementInSVGNamespace","isHTMLIntegrationPoint","_parent","data","DOM","TreeConstruction","setAttributeNS","appliedTreeContruction","treeConstructionNodeMergingFix","treeConstructionTableElementFix","treeConstructionSvgElementFix","DOMTreeConstruction","DOMChanges","removeAttributeNS","isDocumentFragment","_useless","useless","HTMLElement","DOCUMENT_FRAGMENT_NODE","domChangesNodeMergingFix","domChangesTableElementFix","domChangesSvgElementFix","defaultDynamicAttributes","defaultDynamicAttribute","defaultDynamicProperty","SafeDynamicAttribute","SimpleDynamicAttribute","SafeDynamicProperty","isUserInputValue","InputValueDynamicAttribute","isOptionSelected","OptionSelectedDynamicAttribute","DefaultDynamicProperty","normalizedValue","normalizeValue","sanitized","input","currentValue","option","selected","Scope","callerScope","slots","partialMap","root","self","refs","init","sized","RangeError","Transaction","scheduledInstallManagers","scheduledInstallModifiers","scheduledUpdateModifierManagers","scheduledUpdateModifiers","createdComponents","createdManagers","updatedComponents","updatedManagers","destructors","install","Opcode","getbyaddr","TableSlotState","Heap","address","finish","Pointer","compactedSize","Purged","Freed","Allocated","Program","_opcode","Environment","appendOperations","_macros","_transaction","transaction","commit","_isTrusting","UpdatingVM","frameStack","opcodes","handler","try","frame","nextStatement","op","ops","UpdatingVMFrame","handleException","BlockOpcode","children","details","toArray","toJSON","TryOpcode","elementStack","VM","updating","execute","EvaluationStack","restore","updatingOpcodeStack","json","ListRevalidationDelegate","marker","didInsert","didDelete","vmForInsertion","_item","_memo","entry","didInitializeChildren","ListBlockOpcode","lastIterated","listDidChange","insertAfter","synchronizer","sync","exceptionHandler","RenderResult","empty","top","items","dynamicScopeStack","scopeStack","cacheGroups","listBlockStack","pc","ra","t1","getaddr","initial","END","guard","pushUpdatableBlock","gethandle","didEnter","listBlock","pushBlockList","childScope","bindCaller","didAddDestroyable","TemplateIterator","clientId","templateFactory","templateId","parsedBlock","envMeta","newMeta","parse","ScannableTemplate","rawBlock","entryPoint","mode","elementBuilder","asEntryPoint","scanEntryPoint","compilationMeta","scanLayout","scanBlock","EMPTY_CACHE","PathReference","property","chains","lastParentValue","parentValue","_parentValue","ReferenceType","Meta","for","referenceTypeFor","PropertyReference","prop","_getChains","RootReference","NOOP_DESTROY","ConstPath","_property","ConstRoot","_parts","_prop","ConstMeta","CLASS_META","hasOwnProperty","RootReferenceFactory","DefaultPathReferenceFactory","referenceTypes","propertyMetadata","_meta","isExtensible","MetaToUse","constructor","classMeta","InstanceMetaConstructor","exists","metadataForProperty","rootCache","_outer","isSpecifierObjectAbsolute","__ui_components_app_layout_template__","__ui_components_app_layout_top_nav_template__","__ui_components_web_ui_component__","__ui_components_web_ui_template__"],"mappings":"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"}