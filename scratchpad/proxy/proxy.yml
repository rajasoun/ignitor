version: '2'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/etc/nginx/vhost.d'
      - '/usr/share/nginx/html'
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
      - '$HOME/certs:/etc/nginx/certs:ro'
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true
    networks:
       - reverse-proxy

  letsencrypt-nginx-proxy:
    container_name: letsencrypt-nginx-proxy
    image: 'jrcs/letsencrypt-nginx-proxy-companion'
    volumes:
      - '$HOME/certs:/etc/nginx/certs'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    volumes_from:
      - nginx-proxy
    networks:
       - reverse-proxy

  site:
    image: nginx:alpine
    container_name: nginx-site
    restart: always
    environment:
        - VIRTUAL_HOST=site.ngrok.io
        - VIRTUAL_PORT=1234
        - LETSENCRYPT_HOST=site.ngrok.io
        - LETSENCRYPT_EMAIL=rajasoun@icloud.com
    networks:
      - reverse-proxy
      - back

networks:
  reverse-proxy:
    external:
      name: reverse-proxy
  back:
    driver: bridge
