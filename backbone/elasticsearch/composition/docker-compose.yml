version: "2"
# Elasticsearch stack designed for container-native deployment
# using the Autopilot pattern
networks:
  default:
    ipam:
      config:
        - subnet: 172.21.0.0/24

services:
  # ----------------------------------------------------------------------
  # Consul as a service discovery tier
  consul:
    image: mterron/consul-betterscratch
    labels:
      - triton.cns.services=consul
    restart: always
    mem_limit: 128m
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - SETGID
      - SETUID
      - SYS_TIME
    expose:
      - 8300
      - 8301
      - 8302
      - 8400
      - 8500
    ports:
      - 8501
    env_file: _env_consul
  # ----------------------------------------------------------------------
  # Elasticsearch
  # The master-only node serves as the coordinator of the cluster only
  elasticsearch-master:
    extends:
      file: ES.yml
      service: elasticsearch
    labels:
      - triton.cns.services=elasticsearch-master
    depends_on:
      - consul
    environment:
      - ES_SERVICE_NAME=elasticsearch-master
      - ES_NODE_MASTER=true
      - ES_NODE_DATA=false
  # ----------------------------------------------------------------------
  # Elasticsearch
  # Master+Data node
  elasticsearch:
    extends:
      file: ES.yml
      service: elasticsearch
    labels:
      - triton.cns.services=elasticsearch
    depends_on:
      - consul
  # ----------------------------------------------------------------------
  # Data nodes hold data and perform data related operations such as CRUD, 
  # search, and aggregations.
  elasticsearch-data:
    extends:
      file: ES.yml
      service: elasticsearch
    labels:
      - triton.cns.services=elasticsearch-data
    depends_on:
      - elasticsearch-master
    environment:
      - ES_SERVICE_NAME=elasticsearch-data
      - ES_NODE_MASTER=false
      - ES_NODE_DATA=true
  # ----------------------------------------------------------------------
  # Client node behaves as a “smart router” and is used to forward 
  # cluster-level requests to the master node and data-related 
  # requests (such as search) to the appropriate data nodes.
  # Starting with ES 5 another function is work as dedicated ingest nodes
  # elasticsearch-client:
  #   extends:
  #     file: ES.yml
  #     service: elasticsearch
  #   labels:
  #     - triton.cns.services=elasticsearch-client
  #   depends_on:
  #     - elasticsearch-master
  #   environment:
  #     - ES_SERVICE_NAME=elasticsearch-client
  #     - ES_NODE_MASTER=false
  #     - ES_NODE_DATA=false
  # ----------------------------------------------------------------------
